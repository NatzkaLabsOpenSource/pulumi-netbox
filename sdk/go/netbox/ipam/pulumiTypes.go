// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ipam

import (
	"context"
	"reflect"

	"github.com/NatzkaLabsOpenSource/pulumi-netbox/sdk/go/netbox/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type IpAddressNatOutsideAddress struct {
	AddressFamily *int    `pulumi:"addressFamily"`
	Id            *int    `pulumi:"id"`
	IpAddress     *string `pulumi:"ipAddress"`
}

// IpAddressNatOutsideAddressInput is an input type that accepts IpAddressNatOutsideAddressArgs and IpAddressNatOutsideAddressOutput values.
// You can construct a concrete instance of `IpAddressNatOutsideAddressInput` via:
//
//	IpAddressNatOutsideAddressArgs{...}
type IpAddressNatOutsideAddressInput interface {
	pulumi.Input

	ToIpAddressNatOutsideAddressOutput() IpAddressNatOutsideAddressOutput
	ToIpAddressNatOutsideAddressOutputWithContext(context.Context) IpAddressNatOutsideAddressOutput
}

type IpAddressNatOutsideAddressArgs struct {
	AddressFamily pulumi.IntPtrInput    `pulumi:"addressFamily"`
	Id            pulumi.IntPtrInput    `pulumi:"id"`
	IpAddress     pulumi.StringPtrInput `pulumi:"ipAddress"`
}

func (IpAddressNatOutsideAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpAddressNatOutsideAddress)(nil)).Elem()
}

func (i IpAddressNatOutsideAddressArgs) ToIpAddressNatOutsideAddressOutput() IpAddressNatOutsideAddressOutput {
	return i.ToIpAddressNatOutsideAddressOutputWithContext(context.Background())
}

func (i IpAddressNatOutsideAddressArgs) ToIpAddressNatOutsideAddressOutputWithContext(ctx context.Context) IpAddressNatOutsideAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpAddressNatOutsideAddressOutput)
}

// IpAddressNatOutsideAddressArrayInput is an input type that accepts IpAddressNatOutsideAddressArray and IpAddressNatOutsideAddressArrayOutput values.
// You can construct a concrete instance of `IpAddressNatOutsideAddressArrayInput` via:
//
//	IpAddressNatOutsideAddressArray{ IpAddressNatOutsideAddressArgs{...} }
type IpAddressNatOutsideAddressArrayInput interface {
	pulumi.Input

	ToIpAddressNatOutsideAddressArrayOutput() IpAddressNatOutsideAddressArrayOutput
	ToIpAddressNatOutsideAddressArrayOutputWithContext(context.Context) IpAddressNatOutsideAddressArrayOutput
}

type IpAddressNatOutsideAddressArray []IpAddressNatOutsideAddressInput

func (IpAddressNatOutsideAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpAddressNatOutsideAddress)(nil)).Elem()
}

func (i IpAddressNatOutsideAddressArray) ToIpAddressNatOutsideAddressArrayOutput() IpAddressNatOutsideAddressArrayOutput {
	return i.ToIpAddressNatOutsideAddressArrayOutputWithContext(context.Background())
}

func (i IpAddressNatOutsideAddressArray) ToIpAddressNatOutsideAddressArrayOutputWithContext(ctx context.Context) IpAddressNatOutsideAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpAddressNatOutsideAddressArrayOutput)
}

type IpAddressNatOutsideAddressOutput struct{ *pulumi.OutputState }

func (IpAddressNatOutsideAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpAddressNatOutsideAddress)(nil)).Elem()
}

func (o IpAddressNatOutsideAddressOutput) ToIpAddressNatOutsideAddressOutput() IpAddressNatOutsideAddressOutput {
	return o
}

func (o IpAddressNatOutsideAddressOutput) ToIpAddressNatOutsideAddressOutputWithContext(ctx context.Context) IpAddressNatOutsideAddressOutput {
	return o
}

func (o IpAddressNatOutsideAddressOutput) AddressFamily() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpAddressNatOutsideAddress) *int { return v.AddressFamily }).(pulumi.IntPtrOutput)
}

func (o IpAddressNatOutsideAddressOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpAddressNatOutsideAddress) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o IpAddressNatOutsideAddressOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpAddressNatOutsideAddress) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

type IpAddressNatOutsideAddressArrayOutput struct{ *pulumi.OutputState }

func (IpAddressNatOutsideAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpAddressNatOutsideAddress)(nil)).Elem()
}

func (o IpAddressNatOutsideAddressArrayOutput) ToIpAddressNatOutsideAddressArrayOutput() IpAddressNatOutsideAddressArrayOutput {
	return o
}

func (o IpAddressNatOutsideAddressArrayOutput) ToIpAddressNatOutsideAddressArrayOutputWithContext(ctx context.Context) IpAddressNatOutsideAddressArrayOutput {
	return o
}

func (o IpAddressNatOutsideAddressArrayOutput) Index(i pulumi.IntInput) IpAddressNatOutsideAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpAddressNatOutsideAddress {
		return vs[0].([]IpAddressNatOutsideAddress)[vs[1].(int)]
	}).(IpAddressNatOutsideAddressOutput)
}

type GetAsnsAsn struct {
	Asn   int      `pulumi:"asn"`
	Id    int      `pulumi:"id"`
	RirId int      `pulumi:"rirId"`
	Tags  []string `pulumi:"tags"`
}

// GetAsnsAsnInput is an input type that accepts GetAsnsAsnArgs and GetAsnsAsnOutput values.
// You can construct a concrete instance of `GetAsnsAsnInput` via:
//
//	GetAsnsAsnArgs{...}
type GetAsnsAsnInput interface {
	pulumi.Input

	ToGetAsnsAsnOutput() GetAsnsAsnOutput
	ToGetAsnsAsnOutputWithContext(context.Context) GetAsnsAsnOutput
}

type GetAsnsAsnArgs struct {
	Asn   pulumi.IntInput         `pulumi:"asn"`
	Id    pulumi.IntInput         `pulumi:"id"`
	RirId pulumi.IntInput         `pulumi:"rirId"`
	Tags  pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetAsnsAsnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAsnsAsn)(nil)).Elem()
}

func (i GetAsnsAsnArgs) ToGetAsnsAsnOutput() GetAsnsAsnOutput {
	return i.ToGetAsnsAsnOutputWithContext(context.Background())
}

func (i GetAsnsAsnArgs) ToGetAsnsAsnOutputWithContext(ctx context.Context) GetAsnsAsnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAsnsAsnOutput)
}

// GetAsnsAsnArrayInput is an input type that accepts GetAsnsAsnArray and GetAsnsAsnArrayOutput values.
// You can construct a concrete instance of `GetAsnsAsnArrayInput` via:
//
//	GetAsnsAsnArray{ GetAsnsAsnArgs{...} }
type GetAsnsAsnArrayInput interface {
	pulumi.Input

	ToGetAsnsAsnArrayOutput() GetAsnsAsnArrayOutput
	ToGetAsnsAsnArrayOutputWithContext(context.Context) GetAsnsAsnArrayOutput
}

type GetAsnsAsnArray []GetAsnsAsnInput

func (GetAsnsAsnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAsnsAsn)(nil)).Elem()
}

func (i GetAsnsAsnArray) ToGetAsnsAsnArrayOutput() GetAsnsAsnArrayOutput {
	return i.ToGetAsnsAsnArrayOutputWithContext(context.Background())
}

func (i GetAsnsAsnArray) ToGetAsnsAsnArrayOutputWithContext(ctx context.Context) GetAsnsAsnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAsnsAsnArrayOutput)
}

type GetAsnsAsnOutput struct{ *pulumi.OutputState }

func (GetAsnsAsnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAsnsAsn)(nil)).Elem()
}

func (o GetAsnsAsnOutput) ToGetAsnsAsnOutput() GetAsnsAsnOutput {
	return o
}

func (o GetAsnsAsnOutput) ToGetAsnsAsnOutputWithContext(ctx context.Context) GetAsnsAsnOutput {
	return o
}

func (o GetAsnsAsnOutput) Asn() pulumi.IntOutput {
	return o.ApplyT(func(v GetAsnsAsn) int { return v.Asn }).(pulumi.IntOutput)
}

func (o GetAsnsAsnOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetAsnsAsn) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetAsnsAsnOutput) RirId() pulumi.IntOutput {
	return o.ApplyT(func(v GetAsnsAsn) int { return v.RirId }).(pulumi.IntOutput)
}

func (o GetAsnsAsnOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAsnsAsn) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetAsnsAsnArrayOutput struct{ *pulumi.OutputState }

func (GetAsnsAsnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAsnsAsn)(nil)).Elem()
}

func (o GetAsnsAsnArrayOutput) ToGetAsnsAsnArrayOutput() GetAsnsAsnArrayOutput {
	return o
}

func (o GetAsnsAsnArrayOutput) ToGetAsnsAsnArrayOutputWithContext(ctx context.Context) GetAsnsAsnArrayOutput {
	return o
}

func (o GetAsnsAsnArrayOutput) Index(i pulumi.IntInput) GetAsnsAsnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAsnsAsn {
		return vs[0].([]GetAsnsAsn)[vs[1].(int)]
	}).(GetAsnsAsnOutput)
}

type GetAsnsFilter struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// GetAsnsFilterInput is an input type that accepts GetAsnsFilterArgs and GetAsnsFilterOutput values.
// You can construct a concrete instance of `GetAsnsFilterInput` via:
//
//	GetAsnsFilterArgs{...}
type GetAsnsFilterInput interface {
	pulumi.Input

	ToGetAsnsFilterOutput() GetAsnsFilterOutput
	ToGetAsnsFilterOutputWithContext(context.Context) GetAsnsFilterOutput
}

type GetAsnsFilterArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetAsnsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAsnsFilter)(nil)).Elem()
}

func (i GetAsnsFilterArgs) ToGetAsnsFilterOutput() GetAsnsFilterOutput {
	return i.ToGetAsnsFilterOutputWithContext(context.Background())
}

func (i GetAsnsFilterArgs) ToGetAsnsFilterOutputWithContext(ctx context.Context) GetAsnsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAsnsFilterOutput)
}

// GetAsnsFilterArrayInput is an input type that accepts GetAsnsFilterArray and GetAsnsFilterArrayOutput values.
// You can construct a concrete instance of `GetAsnsFilterArrayInput` via:
//
//	GetAsnsFilterArray{ GetAsnsFilterArgs{...} }
type GetAsnsFilterArrayInput interface {
	pulumi.Input

	ToGetAsnsFilterArrayOutput() GetAsnsFilterArrayOutput
	ToGetAsnsFilterArrayOutputWithContext(context.Context) GetAsnsFilterArrayOutput
}

type GetAsnsFilterArray []GetAsnsFilterInput

func (GetAsnsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAsnsFilter)(nil)).Elem()
}

func (i GetAsnsFilterArray) ToGetAsnsFilterArrayOutput() GetAsnsFilterArrayOutput {
	return i.ToGetAsnsFilterArrayOutputWithContext(context.Background())
}

func (i GetAsnsFilterArray) ToGetAsnsFilterArrayOutputWithContext(ctx context.Context) GetAsnsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAsnsFilterArrayOutput)
}

type GetAsnsFilterOutput struct{ *pulumi.OutputState }

func (GetAsnsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAsnsFilter)(nil)).Elem()
}

func (o GetAsnsFilterOutput) ToGetAsnsFilterOutput() GetAsnsFilterOutput {
	return o
}

func (o GetAsnsFilterOutput) ToGetAsnsFilterOutputWithContext(ctx context.Context) GetAsnsFilterOutput {
	return o
}

func (o GetAsnsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAsnsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetAsnsFilterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetAsnsFilter) string { return v.Value }).(pulumi.StringOutput)
}

type GetAsnsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetAsnsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAsnsFilter)(nil)).Elem()
}

func (o GetAsnsFilterArrayOutput) ToGetAsnsFilterArrayOutput() GetAsnsFilterArrayOutput {
	return o
}

func (o GetAsnsFilterArrayOutput) ToGetAsnsFilterArrayOutputWithContext(ctx context.Context) GetAsnsFilterArrayOutput {
	return o
}

func (o GetAsnsFilterArrayOutput) Index(i pulumi.IntInput) GetAsnsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAsnsFilter {
		return vs[0].([]GetAsnsFilter)[vs[1].(int)]
	}).(GetAsnsFilterOutput)
}

type GetAvailablePrefixPrefixesAvailable struct {
	Family int    `pulumi:"family"`
	Prefix string `pulumi:"prefix"`
	VrfId  int    `pulumi:"vrfId"`
}

// GetAvailablePrefixPrefixesAvailableInput is an input type that accepts GetAvailablePrefixPrefixesAvailableArgs and GetAvailablePrefixPrefixesAvailableOutput values.
// You can construct a concrete instance of `GetAvailablePrefixPrefixesAvailableInput` via:
//
//	GetAvailablePrefixPrefixesAvailableArgs{...}
type GetAvailablePrefixPrefixesAvailableInput interface {
	pulumi.Input

	ToGetAvailablePrefixPrefixesAvailableOutput() GetAvailablePrefixPrefixesAvailableOutput
	ToGetAvailablePrefixPrefixesAvailableOutputWithContext(context.Context) GetAvailablePrefixPrefixesAvailableOutput
}

type GetAvailablePrefixPrefixesAvailableArgs struct {
	Family pulumi.IntInput    `pulumi:"family"`
	Prefix pulumi.StringInput `pulumi:"prefix"`
	VrfId  pulumi.IntInput    `pulumi:"vrfId"`
}

func (GetAvailablePrefixPrefixesAvailableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAvailablePrefixPrefixesAvailable)(nil)).Elem()
}

func (i GetAvailablePrefixPrefixesAvailableArgs) ToGetAvailablePrefixPrefixesAvailableOutput() GetAvailablePrefixPrefixesAvailableOutput {
	return i.ToGetAvailablePrefixPrefixesAvailableOutputWithContext(context.Background())
}

func (i GetAvailablePrefixPrefixesAvailableArgs) ToGetAvailablePrefixPrefixesAvailableOutputWithContext(ctx context.Context) GetAvailablePrefixPrefixesAvailableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAvailablePrefixPrefixesAvailableOutput)
}

// GetAvailablePrefixPrefixesAvailableArrayInput is an input type that accepts GetAvailablePrefixPrefixesAvailableArray and GetAvailablePrefixPrefixesAvailableArrayOutput values.
// You can construct a concrete instance of `GetAvailablePrefixPrefixesAvailableArrayInput` via:
//
//	GetAvailablePrefixPrefixesAvailableArray{ GetAvailablePrefixPrefixesAvailableArgs{...} }
type GetAvailablePrefixPrefixesAvailableArrayInput interface {
	pulumi.Input

	ToGetAvailablePrefixPrefixesAvailableArrayOutput() GetAvailablePrefixPrefixesAvailableArrayOutput
	ToGetAvailablePrefixPrefixesAvailableArrayOutputWithContext(context.Context) GetAvailablePrefixPrefixesAvailableArrayOutput
}

type GetAvailablePrefixPrefixesAvailableArray []GetAvailablePrefixPrefixesAvailableInput

func (GetAvailablePrefixPrefixesAvailableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAvailablePrefixPrefixesAvailable)(nil)).Elem()
}

func (i GetAvailablePrefixPrefixesAvailableArray) ToGetAvailablePrefixPrefixesAvailableArrayOutput() GetAvailablePrefixPrefixesAvailableArrayOutput {
	return i.ToGetAvailablePrefixPrefixesAvailableArrayOutputWithContext(context.Background())
}

func (i GetAvailablePrefixPrefixesAvailableArray) ToGetAvailablePrefixPrefixesAvailableArrayOutputWithContext(ctx context.Context) GetAvailablePrefixPrefixesAvailableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAvailablePrefixPrefixesAvailableArrayOutput)
}

type GetAvailablePrefixPrefixesAvailableOutput struct{ *pulumi.OutputState }

func (GetAvailablePrefixPrefixesAvailableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAvailablePrefixPrefixesAvailable)(nil)).Elem()
}

func (o GetAvailablePrefixPrefixesAvailableOutput) ToGetAvailablePrefixPrefixesAvailableOutput() GetAvailablePrefixPrefixesAvailableOutput {
	return o
}

func (o GetAvailablePrefixPrefixesAvailableOutput) ToGetAvailablePrefixPrefixesAvailableOutputWithContext(ctx context.Context) GetAvailablePrefixPrefixesAvailableOutput {
	return o
}

func (o GetAvailablePrefixPrefixesAvailableOutput) Family() pulumi.IntOutput {
	return o.ApplyT(func(v GetAvailablePrefixPrefixesAvailable) int { return v.Family }).(pulumi.IntOutput)
}

func (o GetAvailablePrefixPrefixesAvailableOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetAvailablePrefixPrefixesAvailable) string { return v.Prefix }).(pulumi.StringOutput)
}

func (o GetAvailablePrefixPrefixesAvailableOutput) VrfId() pulumi.IntOutput {
	return o.ApplyT(func(v GetAvailablePrefixPrefixesAvailable) int { return v.VrfId }).(pulumi.IntOutput)
}

type GetAvailablePrefixPrefixesAvailableArrayOutput struct{ *pulumi.OutputState }

func (GetAvailablePrefixPrefixesAvailableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAvailablePrefixPrefixesAvailable)(nil)).Elem()
}

func (o GetAvailablePrefixPrefixesAvailableArrayOutput) ToGetAvailablePrefixPrefixesAvailableArrayOutput() GetAvailablePrefixPrefixesAvailableArrayOutput {
	return o
}

func (o GetAvailablePrefixPrefixesAvailableArrayOutput) ToGetAvailablePrefixPrefixesAvailableArrayOutputWithContext(ctx context.Context) GetAvailablePrefixPrefixesAvailableArrayOutput {
	return o
}

func (o GetAvailablePrefixPrefixesAvailableArrayOutput) Index(i pulumi.IntInput) GetAvailablePrefixPrefixesAvailableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAvailablePrefixPrefixesAvailable {
		return vs[0].([]GetAvailablePrefixPrefixesAvailable)[vs[1].(int)]
	}).(GetAvailablePrefixPrefixesAvailableOutput)
}

type GetIpAddressesFilter struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// GetIpAddressesFilterInput is an input type that accepts GetIpAddressesFilterArgs and GetIpAddressesFilterOutput values.
// You can construct a concrete instance of `GetIpAddressesFilterInput` via:
//
//	GetIpAddressesFilterArgs{...}
type GetIpAddressesFilterInput interface {
	pulumi.Input

	ToGetIpAddressesFilterOutput() GetIpAddressesFilterOutput
	ToGetIpAddressesFilterOutputWithContext(context.Context) GetIpAddressesFilterOutput
}

type GetIpAddressesFilterArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetIpAddressesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpAddressesFilter)(nil)).Elem()
}

func (i GetIpAddressesFilterArgs) ToGetIpAddressesFilterOutput() GetIpAddressesFilterOutput {
	return i.ToGetIpAddressesFilterOutputWithContext(context.Background())
}

func (i GetIpAddressesFilterArgs) ToGetIpAddressesFilterOutputWithContext(ctx context.Context) GetIpAddressesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpAddressesFilterOutput)
}

// GetIpAddressesFilterArrayInput is an input type that accepts GetIpAddressesFilterArray and GetIpAddressesFilterArrayOutput values.
// You can construct a concrete instance of `GetIpAddressesFilterArrayInput` via:
//
//	GetIpAddressesFilterArray{ GetIpAddressesFilterArgs{...} }
type GetIpAddressesFilterArrayInput interface {
	pulumi.Input

	ToGetIpAddressesFilterArrayOutput() GetIpAddressesFilterArrayOutput
	ToGetIpAddressesFilterArrayOutputWithContext(context.Context) GetIpAddressesFilterArrayOutput
}

type GetIpAddressesFilterArray []GetIpAddressesFilterInput

func (GetIpAddressesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpAddressesFilter)(nil)).Elem()
}

func (i GetIpAddressesFilterArray) ToGetIpAddressesFilterArrayOutput() GetIpAddressesFilterArrayOutput {
	return i.ToGetIpAddressesFilterArrayOutputWithContext(context.Background())
}

func (i GetIpAddressesFilterArray) ToGetIpAddressesFilterArrayOutputWithContext(ctx context.Context) GetIpAddressesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpAddressesFilterArrayOutput)
}

type GetIpAddressesFilterOutput struct{ *pulumi.OutputState }

func (GetIpAddressesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpAddressesFilter)(nil)).Elem()
}

func (o GetIpAddressesFilterOutput) ToGetIpAddressesFilterOutput() GetIpAddressesFilterOutput {
	return o
}

func (o GetIpAddressesFilterOutput) ToGetIpAddressesFilterOutputWithContext(ctx context.Context) GetIpAddressesFilterOutput {
	return o
}

func (o GetIpAddressesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpAddressesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetIpAddressesFilterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpAddressesFilter) string { return v.Value }).(pulumi.StringOutput)
}

type GetIpAddressesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetIpAddressesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpAddressesFilter)(nil)).Elem()
}

func (o GetIpAddressesFilterArrayOutput) ToGetIpAddressesFilterArrayOutput() GetIpAddressesFilterArrayOutput {
	return o
}

func (o GetIpAddressesFilterArrayOutput) ToGetIpAddressesFilterArrayOutputWithContext(ctx context.Context) GetIpAddressesFilterArrayOutput {
	return o
}

func (o GetIpAddressesFilterArrayOutput) Index(i pulumi.IntInput) GetIpAddressesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIpAddressesFilter {
		return vs[0].([]GetIpAddressesFilter)[vs[1].(int)]
	}).(GetIpAddressesFilterOutput)
}

type GetIpAddressesIpAddress struct {
	AddressFamily string                          `pulumi:"addressFamily"`
	Created       string                          `pulumi:"created"`
	CustomFields  map[string]string               `pulumi:"customFields"`
	Description   string                          `pulumi:"description"`
	DnsName       string                          `pulumi:"dnsName"`
	Id            int                             `pulumi:"id"`
	IpAddress     string                          `pulumi:"ipAddress"`
	LastUpdated   string                          `pulumi:"lastUpdated"`
	Role          string                          `pulumi:"role"`
	Status        string                          `pulumi:"status"`
	Tags          []GetIpAddressesIpAddressTag    `pulumi:"tags"`
	Tenants       []GetIpAddressesIpAddressTenant `pulumi:"tenants"`
}

// GetIpAddressesIpAddressInput is an input type that accepts GetIpAddressesIpAddressArgs and GetIpAddressesIpAddressOutput values.
// You can construct a concrete instance of `GetIpAddressesIpAddressInput` via:
//
//	GetIpAddressesIpAddressArgs{...}
type GetIpAddressesIpAddressInput interface {
	pulumi.Input

	ToGetIpAddressesIpAddressOutput() GetIpAddressesIpAddressOutput
	ToGetIpAddressesIpAddressOutputWithContext(context.Context) GetIpAddressesIpAddressOutput
}

type GetIpAddressesIpAddressArgs struct {
	AddressFamily pulumi.StringInput                      `pulumi:"addressFamily"`
	Created       pulumi.StringInput                      `pulumi:"created"`
	CustomFields  pulumi.StringMapInput                   `pulumi:"customFields"`
	Description   pulumi.StringInput                      `pulumi:"description"`
	DnsName       pulumi.StringInput                      `pulumi:"dnsName"`
	Id            pulumi.IntInput                         `pulumi:"id"`
	IpAddress     pulumi.StringInput                      `pulumi:"ipAddress"`
	LastUpdated   pulumi.StringInput                      `pulumi:"lastUpdated"`
	Role          pulumi.StringInput                      `pulumi:"role"`
	Status        pulumi.StringInput                      `pulumi:"status"`
	Tags          GetIpAddressesIpAddressTagArrayInput    `pulumi:"tags"`
	Tenants       GetIpAddressesIpAddressTenantArrayInput `pulumi:"tenants"`
}

func (GetIpAddressesIpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpAddressesIpAddress)(nil)).Elem()
}

func (i GetIpAddressesIpAddressArgs) ToGetIpAddressesIpAddressOutput() GetIpAddressesIpAddressOutput {
	return i.ToGetIpAddressesIpAddressOutputWithContext(context.Background())
}

func (i GetIpAddressesIpAddressArgs) ToGetIpAddressesIpAddressOutputWithContext(ctx context.Context) GetIpAddressesIpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpAddressesIpAddressOutput)
}

// GetIpAddressesIpAddressArrayInput is an input type that accepts GetIpAddressesIpAddressArray and GetIpAddressesIpAddressArrayOutput values.
// You can construct a concrete instance of `GetIpAddressesIpAddressArrayInput` via:
//
//	GetIpAddressesIpAddressArray{ GetIpAddressesIpAddressArgs{...} }
type GetIpAddressesIpAddressArrayInput interface {
	pulumi.Input

	ToGetIpAddressesIpAddressArrayOutput() GetIpAddressesIpAddressArrayOutput
	ToGetIpAddressesIpAddressArrayOutputWithContext(context.Context) GetIpAddressesIpAddressArrayOutput
}

type GetIpAddressesIpAddressArray []GetIpAddressesIpAddressInput

func (GetIpAddressesIpAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpAddressesIpAddress)(nil)).Elem()
}

func (i GetIpAddressesIpAddressArray) ToGetIpAddressesIpAddressArrayOutput() GetIpAddressesIpAddressArrayOutput {
	return i.ToGetIpAddressesIpAddressArrayOutputWithContext(context.Background())
}

func (i GetIpAddressesIpAddressArray) ToGetIpAddressesIpAddressArrayOutputWithContext(ctx context.Context) GetIpAddressesIpAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpAddressesIpAddressArrayOutput)
}

type GetIpAddressesIpAddressOutput struct{ *pulumi.OutputState }

func (GetIpAddressesIpAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpAddressesIpAddress)(nil)).Elem()
}

func (o GetIpAddressesIpAddressOutput) ToGetIpAddressesIpAddressOutput() GetIpAddressesIpAddressOutput {
	return o
}

func (o GetIpAddressesIpAddressOutput) ToGetIpAddressesIpAddressOutputWithContext(ctx context.Context) GetIpAddressesIpAddressOutput {
	return o
}

func (o GetIpAddressesIpAddressOutput) AddressFamily() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpAddressesIpAddress) string { return v.AddressFamily }).(pulumi.StringOutput)
}

func (o GetIpAddressesIpAddressOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpAddressesIpAddress) string { return v.Created }).(pulumi.StringOutput)
}

func (o GetIpAddressesIpAddressOutput) CustomFields() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetIpAddressesIpAddress) map[string]string { return v.CustomFields }).(pulumi.StringMapOutput)
}

func (o GetIpAddressesIpAddressOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpAddressesIpAddress) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetIpAddressesIpAddressOutput) DnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpAddressesIpAddress) string { return v.DnsName }).(pulumi.StringOutput)
}

func (o GetIpAddressesIpAddressOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetIpAddressesIpAddress) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetIpAddressesIpAddressOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpAddressesIpAddress) string { return v.IpAddress }).(pulumi.StringOutput)
}

func (o GetIpAddressesIpAddressOutput) LastUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpAddressesIpAddress) string { return v.LastUpdated }).(pulumi.StringOutput)
}

func (o GetIpAddressesIpAddressOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpAddressesIpAddress) string { return v.Role }).(pulumi.StringOutput)
}

func (o GetIpAddressesIpAddressOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpAddressesIpAddress) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetIpAddressesIpAddressOutput) Tags() GetIpAddressesIpAddressTagArrayOutput {
	return o.ApplyT(func(v GetIpAddressesIpAddress) []GetIpAddressesIpAddressTag { return v.Tags }).(GetIpAddressesIpAddressTagArrayOutput)
}

func (o GetIpAddressesIpAddressOutput) Tenants() GetIpAddressesIpAddressTenantArrayOutput {
	return o.ApplyT(func(v GetIpAddressesIpAddress) []GetIpAddressesIpAddressTenant { return v.Tenants }).(GetIpAddressesIpAddressTenantArrayOutput)
}

type GetIpAddressesIpAddressArrayOutput struct{ *pulumi.OutputState }

func (GetIpAddressesIpAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpAddressesIpAddress)(nil)).Elem()
}

func (o GetIpAddressesIpAddressArrayOutput) ToGetIpAddressesIpAddressArrayOutput() GetIpAddressesIpAddressArrayOutput {
	return o
}

func (o GetIpAddressesIpAddressArrayOutput) ToGetIpAddressesIpAddressArrayOutputWithContext(ctx context.Context) GetIpAddressesIpAddressArrayOutput {
	return o
}

func (o GetIpAddressesIpAddressArrayOutput) Index(i pulumi.IntInput) GetIpAddressesIpAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIpAddressesIpAddress {
		return vs[0].([]GetIpAddressesIpAddress)[vs[1].(int)]
	}).(GetIpAddressesIpAddressOutput)
}

type GetIpAddressesIpAddressTag struct {
	Display string `pulumi:"display"`
	Id      int    `pulumi:"id"`
	Name    string `pulumi:"name"`
	Slug    string `pulumi:"slug"`
}

// GetIpAddressesIpAddressTagInput is an input type that accepts GetIpAddressesIpAddressTagArgs and GetIpAddressesIpAddressTagOutput values.
// You can construct a concrete instance of `GetIpAddressesIpAddressTagInput` via:
//
//	GetIpAddressesIpAddressTagArgs{...}
type GetIpAddressesIpAddressTagInput interface {
	pulumi.Input

	ToGetIpAddressesIpAddressTagOutput() GetIpAddressesIpAddressTagOutput
	ToGetIpAddressesIpAddressTagOutputWithContext(context.Context) GetIpAddressesIpAddressTagOutput
}

type GetIpAddressesIpAddressTagArgs struct {
	Display pulumi.StringInput `pulumi:"display"`
	Id      pulumi.IntInput    `pulumi:"id"`
	Name    pulumi.StringInput `pulumi:"name"`
	Slug    pulumi.StringInput `pulumi:"slug"`
}

func (GetIpAddressesIpAddressTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpAddressesIpAddressTag)(nil)).Elem()
}

func (i GetIpAddressesIpAddressTagArgs) ToGetIpAddressesIpAddressTagOutput() GetIpAddressesIpAddressTagOutput {
	return i.ToGetIpAddressesIpAddressTagOutputWithContext(context.Background())
}

func (i GetIpAddressesIpAddressTagArgs) ToGetIpAddressesIpAddressTagOutputWithContext(ctx context.Context) GetIpAddressesIpAddressTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpAddressesIpAddressTagOutput)
}

// GetIpAddressesIpAddressTagArrayInput is an input type that accepts GetIpAddressesIpAddressTagArray and GetIpAddressesIpAddressTagArrayOutput values.
// You can construct a concrete instance of `GetIpAddressesIpAddressTagArrayInput` via:
//
//	GetIpAddressesIpAddressTagArray{ GetIpAddressesIpAddressTagArgs{...} }
type GetIpAddressesIpAddressTagArrayInput interface {
	pulumi.Input

	ToGetIpAddressesIpAddressTagArrayOutput() GetIpAddressesIpAddressTagArrayOutput
	ToGetIpAddressesIpAddressTagArrayOutputWithContext(context.Context) GetIpAddressesIpAddressTagArrayOutput
}

type GetIpAddressesIpAddressTagArray []GetIpAddressesIpAddressTagInput

func (GetIpAddressesIpAddressTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpAddressesIpAddressTag)(nil)).Elem()
}

func (i GetIpAddressesIpAddressTagArray) ToGetIpAddressesIpAddressTagArrayOutput() GetIpAddressesIpAddressTagArrayOutput {
	return i.ToGetIpAddressesIpAddressTagArrayOutputWithContext(context.Background())
}

func (i GetIpAddressesIpAddressTagArray) ToGetIpAddressesIpAddressTagArrayOutputWithContext(ctx context.Context) GetIpAddressesIpAddressTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpAddressesIpAddressTagArrayOutput)
}

type GetIpAddressesIpAddressTagOutput struct{ *pulumi.OutputState }

func (GetIpAddressesIpAddressTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpAddressesIpAddressTag)(nil)).Elem()
}

func (o GetIpAddressesIpAddressTagOutput) ToGetIpAddressesIpAddressTagOutput() GetIpAddressesIpAddressTagOutput {
	return o
}

func (o GetIpAddressesIpAddressTagOutput) ToGetIpAddressesIpAddressTagOutputWithContext(ctx context.Context) GetIpAddressesIpAddressTagOutput {
	return o
}

func (o GetIpAddressesIpAddressTagOutput) Display() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpAddressesIpAddressTag) string { return v.Display }).(pulumi.StringOutput)
}

func (o GetIpAddressesIpAddressTagOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetIpAddressesIpAddressTag) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetIpAddressesIpAddressTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpAddressesIpAddressTag) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetIpAddressesIpAddressTagOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpAddressesIpAddressTag) string { return v.Slug }).(pulumi.StringOutput)
}

type GetIpAddressesIpAddressTagArrayOutput struct{ *pulumi.OutputState }

func (GetIpAddressesIpAddressTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpAddressesIpAddressTag)(nil)).Elem()
}

func (o GetIpAddressesIpAddressTagArrayOutput) ToGetIpAddressesIpAddressTagArrayOutput() GetIpAddressesIpAddressTagArrayOutput {
	return o
}

func (o GetIpAddressesIpAddressTagArrayOutput) ToGetIpAddressesIpAddressTagArrayOutputWithContext(ctx context.Context) GetIpAddressesIpAddressTagArrayOutput {
	return o
}

func (o GetIpAddressesIpAddressTagArrayOutput) Index(i pulumi.IntInput) GetIpAddressesIpAddressTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIpAddressesIpAddressTag {
		return vs[0].([]GetIpAddressesIpAddressTag)[vs[1].(int)]
	}).(GetIpAddressesIpAddressTagOutput)
}

type GetIpAddressesIpAddressTenant struct {
	Id   int    `pulumi:"id"`
	Name string `pulumi:"name"`
	Slug string `pulumi:"slug"`
}

// GetIpAddressesIpAddressTenantInput is an input type that accepts GetIpAddressesIpAddressTenantArgs and GetIpAddressesIpAddressTenantOutput values.
// You can construct a concrete instance of `GetIpAddressesIpAddressTenantInput` via:
//
//	GetIpAddressesIpAddressTenantArgs{...}
type GetIpAddressesIpAddressTenantInput interface {
	pulumi.Input

	ToGetIpAddressesIpAddressTenantOutput() GetIpAddressesIpAddressTenantOutput
	ToGetIpAddressesIpAddressTenantOutputWithContext(context.Context) GetIpAddressesIpAddressTenantOutput
}

type GetIpAddressesIpAddressTenantArgs struct {
	Id   pulumi.IntInput    `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
	Slug pulumi.StringInput `pulumi:"slug"`
}

func (GetIpAddressesIpAddressTenantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpAddressesIpAddressTenant)(nil)).Elem()
}

func (i GetIpAddressesIpAddressTenantArgs) ToGetIpAddressesIpAddressTenantOutput() GetIpAddressesIpAddressTenantOutput {
	return i.ToGetIpAddressesIpAddressTenantOutputWithContext(context.Background())
}

func (i GetIpAddressesIpAddressTenantArgs) ToGetIpAddressesIpAddressTenantOutputWithContext(ctx context.Context) GetIpAddressesIpAddressTenantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpAddressesIpAddressTenantOutput)
}

// GetIpAddressesIpAddressTenantArrayInput is an input type that accepts GetIpAddressesIpAddressTenantArray and GetIpAddressesIpAddressTenantArrayOutput values.
// You can construct a concrete instance of `GetIpAddressesIpAddressTenantArrayInput` via:
//
//	GetIpAddressesIpAddressTenantArray{ GetIpAddressesIpAddressTenantArgs{...} }
type GetIpAddressesIpAddressTenantArrayInput interface {
	pulumi.Input

	ToGetIpAddressesIpAddressTenantArrayOutput() GetIpAddressesIpAddressTenantArrayOutput
	ToGetIpAddressesIpAddressTenantArrayOutputWithContext(context.Context) GetIpAddressesIpAddressTenantArrayOutput
}

type GetIpAddressesIpAddressTenantArray []GetIpAddressesIpAddressTenantInput

func (GetIpAddressesIpAddressTenantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpAddressesIpAddressTenant)(nil)).Elem()
}

func (i GetIpAddressesIpAddressTenantArray) ToGetIpAddressesIpAddressTenantArrayOutput() GetIpAddressesIpAddressTenantArrayOutput {
	return i.ToGetIpAddressesIpAddressTenantArrayOutputWithContext(context.Background())
}

func (i GetIpAddressesIpAddressTenantArray) ToGetIpAddressesIpAddressTenantArrayOutputWithContext(ctx context.Context) GetIpAddressesIpAddressTenantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIpAddressesIpAddressTenantArrayOutput)
}

type GetIpAddressesIpAddressTenantOutput struct{ *pulumi.OutputState }

func (GetIpAddressesIpAddressTenantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpAddressesIpAddressTenant)(nil)).Elem()
}

func (o GetIpAddressesIpAddressTenantOutput) ToGetIpAddressesIpAddressTenantOutput() GetIpAddressesIpAddressTenantOutput {
	return o
}

func (o GetIpAddressesIpAddressTenantOutput) ToGetIpAddressesIpAddressTenantOutputWithContext(ctx context.Context) GetIpAddressesIpAddressTenantOutput {
	return o
}

func (o GetIpAddressesIpAddressTenantOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetIpAddressesIpAddressTenant) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetIpAddressesIpAddressTenantOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpAddressesIpAddressTenant) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetIpAddressesIpAddressTenantOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpAddressesIpAddressTenant) string { return v.Slug }).(pulumi.StringOutput)
}

type GetIpAddressesIpAddressTenantArrayOutput struct{ *pulumi.OutputState }

func (GetIpAddressesIpAddressTenantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIpAddressesIpAddressTenant)(nil)).Elem()
}

func (o GetIpAddressesIpAddressTenantArrayOutput) ToGetIpAddressesIpAddressTenantArrayOutput() GetIpAddressesIpAddressTenantArrayOutput {
	return o
}

func (o GetIpAddressesIpAddressTenantArrayOutput) ToGetIpAddressesIpAddressTenantArrayOutputWithContext(ctx context.Context) GetIpAddressesIpAddressTenantArrayOutput {
	return o
}

func (o GetIpAddressesIpAddressTenantArrayOutput) Index(i pulumi.IntInput) GetIpAddressesIpAddressTenantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIpAddressesIpAddressTenant {
		return vs[0].([]GetIpAddressesIpAddressTenant)[vs[1].(int)]
	}).(GetIpAddressesIpAddressTenantOutput)
}

type GetPrefixesFilter struct {
	// The name of the field to filter on. Supported fields are: `prefix`, `contains`, `vlanVid`, `vrfId`, `vlanId`, `status`, `tenantId`, `siteId`, & `tag`.
	Name string `pulumi:"name"`
	// The value to pass to the specified filter.
	Value string `pulumi:"value"`
}

// GetPrefixesFilterInput is an input type that accepts GetPrefixesFilterArgs and GetPrefixesFilterOutput values.
// You can construct a concrete instance of `GetPrefixesFilterInput` via:
//
//	GetPrefixesFilterArgs{...}
type GetPrefixesFilterInput interface {
	pulumi.Input

	ToGetPrefixesFilterOutput() GetPrefixesFilterOutput
	ToGetPrefixesFilterOutputWithContext(context.Context) GetPrefixesFilterOutput
}

type GetPrefixesFilterArgs struct {
	// The name of the field to filter on. Supported fields are: `prefix`, `contains`, `vlanVid`, `vrfId`, `vlanId`, `status`, `tenantId`, `siteId`, & `tag`.
	Name pulumi.StringInput `pulumi:"name"`
	// The value to pass to the specified filter.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetPrefixesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrefixesFilter)(nil)).Elem()
}

func (i GetPrefixesFilterArgs) ToGetPrefixesFilterOutput() GetPrefixesFilterOutput {
	return i.ToGetPrefixesFilterOutputWithContext(context.Background())
}

func (i GetPrefixesFilterArgs) ToGetPrefixesFilterOutputWithContext(ctx context.Context) GetPrefixesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrefixesFilterOutput)
}

// GetPrefixesFilterArrayInput is an input type that accepts GetPrefixesFilterArray and GetPrefixesFilterArrayOutput values.
// You can construct a concrete instance of `GetPrefixesFilterArrayInput` via:
//
//	GetPrefixesFilterArray{ GetPrefixesFilterArgs{...} }
type GetPrefixesFilterArrayInput interface {
	pulumi.Input

	ToGetPrefixesFilterArrayOutput() GetPrefixesFilterArrayOutput
	ToGetPrefixesFilterArrayOutputWithContext(context.Context) GetPrefixesFilterArrayOutput
}

type GetPrefixesFilterArray []GetPrefixesFilterInput

func (GetPrefixesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrefixesFilter)(nil)).Elem()
}

func (i GetPrefixesFilterArray) ToGetPrefixesFilterArrayOutput() GetPrefixesFilterArrayOutput {
	return i.ToGetPrefixesFilterArrayOutputWithContext(context.Background())
}

func (i GetPrefixesFilterArray) ToGetPrefixesFilterArrayOutputWithContext(ctx context.Context) GetPrefixesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrefixesFilterArrayOutput)
}

type GetPrefixesFilterOutput struct{ *pulumi.OutputState }

func (GetPrefixesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrefixesFilter)(nil)).Elem()
}

func (o GetPrefixesFilterOutput) ToGetPrefixesFilterOutput() GetPrefixesFilterOutput {
	return o
}

func (o GetPrefixesFilterOutput) ToGetPrefixesFilterOutputWithContext(ctx context.Context) GetPrefixesFilterOutput {
	return o
}

// The name of the field to filter on. Supported fields are: `prefix`, `contains`, `vlanVid`, `vrfId`, `vlanId`, `status`, `tenantId`, `siteId`, & `tag`.
func (o GetPrefixesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrefixesFilter) string { return v.Name }).(pulumi.StringOutput)
}

// The value to pass to the specified filter.
func (o GetPrefixesFilterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrefixesFilter) string { return v.Value }).(pulumi.StringOutput)
}

type GetPrefixesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetPrefixesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrefixesFilter)(nil)).Elem()
}

func (o GetPrefixesFilterArrayOutput) ToGetPrefixesFilterArrayOutput() GetPrefixesFilterArrayOutput {
	return o
}

func (o GetPrefixesFilterArrayOutput) ToGetPrefixesFilterArrayOutputWithContext(ctx context.Context) GetPrefixesFilterArrayOutput {
	return o
}

func (o GetPrefixesFilterArrayOutput) Index(i pulumi.IntInput) GetPrefixesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrefixesFilter {
		return vs[0].([]GetPrefixesFilter)[vs[1].(int)]
	}).(GetPrefixesFilterOutput)
}

type GetPrefixesPrefix struct {
	Description string   `pulumi:"description"`
	Id          int      `pulumi:"id"`
	LocationId  int      `pulumi:"locationId"`
	Prefix      string   `pulumi:"prefix"`
	RegionId    int      `pulumi:"regionId"`
	SiteGroupId int      `pulumi:"siteGroupId"`
	SiteId      int      `pulumi:"siteId"`
	Status      string   `pulumi:"status"`
	Tags        []string `pulumi:"tags"`
	TenantId    int      `pulumi:"tenantId"`
	VlanId      int      `pulumi:"vlanId"`
	VlanVid     float64  `pulumi:"vlanVid"`
	VrfId       int      `pulumi:"vrfId"`
}

// GetPrefixesPrefixInput is an input type that accepts GetPrefixesPrefixArgs and GetPrefixesPrefixOutput values.
// You can construct a concrete instance of `GetPrefixesPrefixInput` via:
//
//	GetPrefixesPrefixArgs{...}
type GetPrefixesPrefixInput interface {
	pulumi.Input

	ToGetPrefixesPrefixOutput() GetPrefixesPrefixOutput
	ToGetPrefixesPrefixOutputWithContext(context.Context) GetPrefixesPrefixOutput
}

type GetPrefixesPrefixArgs struct {
	Description pulumi.StringInput      `pulumi:"description"`
	Id          pulumi.IntInput         `pulumi:"id"`
	LocationId  pulumi.IntInput         `pulumi:"locationId"`
	Prefix      pulumi.StringInput      `pulumi:"prefix"`
	RegionId    pulumi.IntInput         `pulumi:"regionId"`
	SiteGroupId pulumi.IntInput         `pulumi:"siteGroupId"`
	SiteId      pulumi.IntInput         `pulumi:"siteId"`
	Status      pulumi.StringInput      `pulumi:"status"`
	Tags        pulumi.StringArrayInput `pulumi:"tags"`
	TenantId    pulumi.IntInput         `pulumi:"tenantId"`
	VlanId      pulumi.IntInput         `pulumi:"vlanId"`
	VlanVid     pulumi.Float64Input     `pulumi:"vlanVid"`
	VrfId       pulumi.IntInput         `pulumi:"vrfId"`
}

func (GetPrefixesPrefixArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrefixesPrefix)(nil)).Elem()
}

func (i GetPrefixesPrefixArgs) ToGetPrefixesPrefixOutput() GetPrefixesPrefixOutput {
	return i.ToGetPrefixesPrefixOutputWithContext(context.Background())
}

func (i GetPrefixesPrefixArgs) ToGetPrefixesPrefixOutputWithContext(ctx context.Context) GetPrefixesPrefixOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrefixesPrefixOutput)
}

// GetPrefixesPrefixArrayInput is an input type that accepts GetPrefixesPrefixArray and GetPrefixesPrefixArrayOutput values.
// You can construct a concrete instance of `GetPrefixesPrefixArrayInput` via:
//
//	GetPrefixesPrefixArray{ GetPrefixesPrefixArgs{...} }
type GetPrefixesPrefixArrayInput interface {
	pulumi.Input

	ToGetPrefixesPrefixArrayOutput() GetPrefixesPrefixArrayOutput
	ToGetPrefixesPrefixArrayOutputWithContext(context.Context) GetPrefixesPrefixArrayOutput
}

type GetPrefixesPrefixArray []GetPrefixesPrefixInput

func (GetPrefixesPrefixArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrefixesPrefix)(nil)).Elem()
}

func (i GetPrefixesPrefixArray) ToGetPrefixesPrefixArrayOutput() GetPrefixesPrefixArrayOutput {
	return i.ToGetPrefixesPrefixArrayOutputWithContext(context.Background())
}

func (i GetPrefixesPrefixArray) ToGetPrefixesPrefixArrayOutputWithContext(ctx context.Context) GetPrefixesPrefixArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrefixesPrefixArrayOutput)
}

type GetPrefixesPrefixOutput struct{ *pulumi.OutputState }

func (GetPrefixesPrefixOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrefixesPrefix)(nil)).Elem()
}

func (o GetPrefixesPrefixOutput) ToGetPrefixesPrefixOutput() GetPrefixesPrefixOutput {
	return o
}

func (o GetPrefixesPrefixOutput) ToGetPrefixesPrefixOutputWithContext(ctx context.Context) GetPrefixesPrefixOutput {
	return o
}

func (o GetPrefixesPrefixOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrefixesPrefix) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetPrefixesPrefixOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetPrefixesPrefix) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetPrefixesPrefixOutput) LocationId() pulumi.IntOutput {
	return o.ApplyT(func(v GetPrefixesPrefix) int { return v.LocationId }).(pulumi.IntOutput)
}

func (o GetPrefixesPrefixOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrefixesPrefix) string { return v.Prefix }).(pulumi.StringOutput)
}

func (o GetPrefixesPrefixOutput) RegionId() pulumi.IntOutput {
	return o.ApplyT(func(v GetPrefixesPrefix) int { return v.RegionId }).(pulumi.IntOutput)
}

func (o GetPrefixesPrefixOutput) SiteGroupId() pulumi.IntOutput {
	return o.ApplyT(func(v GetPrefixesPrefix) int { return v.SiteGroupId }).(pulumi.IntOutput)
}

func (o GetPrefixesPrefixOutput) SiteId() pulumi.IntOutput {
	return o.ApplyT(func(v GetPrefixesPrefix) int { return v.SiteId }).(pulumi.IntOutput)
}

func (o GetPrefixesPrefixOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrefixesPrefix) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetPrefixesPrefixOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPrefixesPrefix) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o GetPrefixesPrefixOutput) TenantId() pulumi.IntOutput {
	return o.ApplyT(func(v GetPrefixesPrefix) int { return v.TenantId }).(pulumi.IntOutput)
}

func (o GetPrefixesPrefixOutput) VlanId() pulumi.IntOutput {
	return o.ApplyT(func(v GetPrefixesPrefix) int { return v.VlanId }).(pulumi.IntOutput)
}

func (o GetPrefixesPrefixOutput) VlanVid() pulumi.Float64Output {
	return o.ApplyT(func(v GetPrefixesPrefix) float64 { return v.VlanVid }).(pulumi.Float64Output)
}

func (o GetPrefixesPrefixOutput) VrfId() pulumi.IntOutput {
	return o.ApplyT(func(v GetPrefixesPrefix) int { return v.VrfId }).(pulumi.IntOutput)
}

type GetPrefixesPrefixArrayOutput struct{ *pulumi.OutputState }

func (GetPrefixesPrefixArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrefixesPrefix)(nil)).Elem()
}

func (o GetPrefixesPrefixArrayOutput) ToGetPrefixesPrefixArrayOutput() GetPrefixesPrefixArrayOutput {
	return o
}

func (o GetPrefixesPrefixArrayOutput) ToGetPrefixesPrefixArrayOutputWithContext(ctx context.Context) GetPrefixesPrefixArrayOutput {
	return o
}

func (o GetPrefixesPrefixArrayOutput) Index(i pulumi.IntInput) GetPrefixesPrefixOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPrefixesPrefix {
		return vs[0].([]GetPrefixesPrefix)[vs[1].(int)]
	}).(GetPrefixesPrefixOutput)
}

type GetVlansFilter struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// GetVlansFilterInput is an input type that accepts GetVlansFilterArgs and GetVlansFilterOutput values.
// You can construct a concrete instance of `GetVlansFilterInput` via:
//
//	GetVlansFilterArgs{...}
type GetVlansFilterInput interface {
	pulumi.Input

	ToGetVlansFilterOutput() GetVlansFilterOutput
	ToGetVlansFilterOutputWithContext(context.Context) GetVlansFilterOutput
}

type GetVlansFilterArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetVlansFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVlansFilter)(nil)).Elem()
}

func (i GetVlansFilterArgs) ToGetVlansFilterOutput() GetVlansFilterOutput {
	return i.ToGetVlansFilterOutputWithContext(context.Background())
}

func (i GetVlansFilterArgs) ToGetVlansFilterOutputWithContext(ctx context.Context) GetVlansFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVlansFilterOutput)
}

// GetVlansFilterArrayInput is an input type that accepts GetVlansFilterArray and GetVlansFilterArrayOutput values.
// You can construct a concrete instance of `GetVlansFilterArrayInput` via:
//
//	GetVlansFilterArray{ GetVlansFilterArgs{...} }
type GetVlansFilterArrayInput interface {
	pulumi.Input

	ToGetVlansFilterArrayOutput() GetVlansFilterArrayOutput
	ToGetVlansFilterArrayOutputWithContext(context.Context) GetVlansFilterArrayOutput
}

type GetVlansFilterArray []GetVlansFilterInput

func (GetVlansFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVlansFilter)(nil)).Elem()
}

func (i GetVlansFilterArray) ToGetVlansFilterArrayOutput() GetVlansFilterArrayOutput {
	return i.ToGetVlansFilterArrayOutputWithContext(context.Background())
}

func (i GetVlansFilterArray) ToGetVlansFilterArrayOutputWithContext(ctx context.Context) GetVlansFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVlansFilterArrayOutput)
}

type GetVlansFilterOutput struct{ *pulumi.OutputState }

func (GetVlansFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVlansFilter)(nil)).Elem()
}

func (o GetVlansFilterOutput) ToGetVlansFilterOutput() GetVlansFilterOutput {
	return o
}

func (o GetVlansFilterOutput) ToGetVlansFilterOutputWithContext(ctx context.Context) GetVlansFilterOutput {
	return o
}

func (o GetVlansFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVlansFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetVlansFilterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetVlansFilter) string { return v.Value }).(pulumi.StringOutput)
}

type GetVlansFilterArrayOutput struct{ *pulumi.OutputState }

func (GetVlansFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVlansFilter)(nil)).Elem()
}

func (o GetVlansFilterArrayOutput) ToGetVlansFilterArrayOutput() GetVlansFilterArrayOutput {
	return o
}

func (o GetVlansFilterArrayOutput) ToGetVlansFilterArrayOutputWithContext(ctx context.Context) GetVlansFilterArrayOutput {
	return o
}

func (o GetVlansFilterArrayOutput) Index(i pulumi.IntInput) GetVlansFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVlansFilter {
		return vs[0].([]GetVlansFilter)[vs[1].(int)]
	}).(GetVlansFilterOutput)
}

type GetVlansVlan struct {
	Description string `pulumi:"description"`
	GroupId     int    `pulumi:"groupId"`
	Name        string `pulumi:"name"`
	Role        int    `pulumi:"role"`
	Site        int    `pulumi:"site"`
	Status      string `pulumi:"status"`
	TagIds      []int  `pulumi:"tagIds"`
	Tenant      int    `pulumi:"tenant"`
	Vid         int    `pulumi:"vid"`
}

// GetVlansVlanInput is an input type that accepts GetVlansVlanArgs and GetVlansVlanOutput values.
// You can construct a concrete instance of `GetVlansVlanInput` via:
//
//	GetVlansVlanArgs{...}
type GetVlansVlanInput interface {
	pulumi.Input

	ToGetVlansVlanOutput() GetVlansVlanOutput
	ToGetVlansVlanOutputWithContext(context.Context) GetVlansVlanOutput
}

type GetVlansVlanArgs struct {
	Description pulumi.StringInput   `pulumi:"description"`
	GroupId     pulumi.IntInput      `pulumi:"groupId"`
	Name        pulumi.StringInput   `pulumi:"name"`
	Role        pulumi.IntInput      `pulumi:"role"`
	Site        pulumi.IntInput      `pulumi:"site"`
	Status      pulumi.StringInput   `pulumi:"status"`
	TagIds      pulumi.IntArrayInput `pulumi:"tagIds"`
	Tenant      pulumi.IntInput      `pulumi:"tenant"`
	Vid         pulumi.IntInput      `pulumi:"vid"`
}

func (GetVlansVlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVlansVlan)(nil)).Elem()
}

func (i GetVlansVlanArgs) ToGetVlansVlanOutput() GetVlansVlanOutput {
	return i.ToGetVlansVlanOutputWithContext(context.Background())
}

func (i GetVlansVlanArgs) ToGetVlansVlanOutputWithContext(ctx context.Context) GetVlansVlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVlansVlanOutput)
}

// GetVlansVlanArrayInput is an input type that accepts GetVlansVlanArray and GetVlansVlanArrayOutput values.
// You can construct a concrete instance of `GetVlansVlanArrayInput` via:
//
//	GetVlansVlanArray{ GetVlansVlanArgs{...} }
type GetVlansVlanArrayInput interface {
	pulumi.Input

	ToGetVlansVlanArrayOutput() GetVlansVlanArrayOutput
	ToGetVlansVlanArrayOutputWithContext(context.Context) GetVlansVlanArrayOutput
}

type GetVlansVlanArray []GetVlansVlanInput

func (GetVlansVlanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVlansVlan)(nil)).Elem()
}

func (i GetVlansVlanArray) ToGetVlansVlanArrayOutput() GetVlansVlanArrayOutput {
	return i.ToGetVlansVlanArrayOutputWithContext(context.Background())
}

func (i GetVlansVlanArray) ToGetVlansVlanArrayOutputWithContext(ctx context.Context) GetVlansVlanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVlansVlanArrayOutput)
}

type GetVlansVlanOutput struct{ *pulumi.OutputState }

func (GetVlansVlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVlansVlan)(nil)).Elem()
}

func (o GetVlansVlanOutput) ToGetVlansVlanOutput() GetVlansVlanOutput {
	return o
}

func (o GetVlansVlanOutput) ToGetVlansVlanOutputWithContext(ctx context.Context) GetVlansVlanOutput {
	return o
}

func (o GetVlansVlanOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetVlansVlan) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetVlansVlanOutput) GroupId() pulumi.IntOutput {
	return o.ApplyT(func(v GetVlansVlan) int { return v.GroupId }).(pulumi.IntOutput)
}

func (o GetVlansVlanOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVlansVlan) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetVlansVlanOutput) Role() pulumi.IntOutput {
	return o.ApplyT(func(v GetVlansVlan) int { return v.Role }).(pulumi.IntOutput)
}

func (o GetVlansVlanOutput) Site() pulumi.IntOutput {
	return o.ApplyT(func(v GetVlansVlan) int { return v.Site }).(pulumi.IntOutput)
}

func (o GetVlansVlanOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetVlansVlan) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetVlansVlanOutput) TagIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetVlansVlan) []int { return v.TagIds }).(pulumi.IntArrayOutput)
}

func (o GetVlansVlanOutput) Tenant() pulumi.IntOutput {
	return o.ApplyT(func(v GetVlansVlan) int { return v.Tenant }).(pulumi.IntOutput)
}

func (o GetVlansVlanOutput) Vid() pulumi.IntOutput {
	return o.ApplyT(func(v GetVlansVlan) int { return v.Vid }).(pulumi.IntOutput)
}

type GetVlansVlanArrayOutput struct{ *pulumi.OutputState }

func (GetVlansVlanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVlansVlan)(nil)).Elem()
}

func (o GetVlansVlanArrayOutput) ToGetVlansVlanArrayOutput() GetVlansVlanArrayOutput {
	return o
}

func (o GetVlansVlanArrayOutput) ToGetVlansVlanArrayOutputWithContext(ctx context.Context) GetVlansVlanArrayOutput {
	return o
}

func (o GetVlansVlanArrayOutput) Index(i pulumi.IntInput) GetVlansVlanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVlansVlan {
		return vs[0].([]GetVlansVlan)[vs[1].(int)]
	}).(GetVlansVlanOutput)
}

type GetVrfsFilter struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// GetVrfsFilterInput is an input type that accepts GetVrfsFilterArgs and GetVrfsFilterOutput values.
// You can construct a concrete instance of `GetVrfsFilterInput` via:
//
//	GetVrfsFilterArgs{...}
type GetVrfsFilterInput interface {
	pulumi.Input

	ToGetVrfsFilterOutput() GetVrfsFilterOutput
	ToGetVrfsFilterOutputWithContext(context.Context) GetVrfsFilterOutput
}

type GetVrfsFilterArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetVrfsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVrfsFilter)(nil)).Elem()
}

func (i GetVrfsFilterArgs) ToGetVrfsFilterOutput() GetVrfsFilterOutput {
	return i.ToGetVrfsFilterOutputWithContext(context.Background())
}

func (i GetVrfsFilterArgs) ToGetVrfsFilterOutputWithContext(ctx context.Context) GetVrfsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVrfsFilterOutput)
}

// GetVrfsFilterArrayInput is an input type that accepts GetVrfsFilterArray and GetVrfsFilterArrayOutput values.
// You can construct a concrete instance of `GetVrfsFilterArrayInput` via:
//
//	GetVrfsFilterArray{ GetVrfsFilterArgs{...} }
type GetVrfsFilterArrayInput interface {
	pulumi.Input

	ToGetVrfsFilterArrayOutput() GetVrfsFilterArrayOutput
	ToGetVrfsFilterArrayOutputWithContext(context.Context) GetVrfsFilterArrayOutput
}

type GetVrfsFilterArray []GetVrfsFilterInput

func (GetVrfsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVrfsFilter)(nil)).Elem()
}

func (i GetVrfsFilterArray) ToGetVrfsFilterArrayOutput() GetVrfsFilterArrayOutput {
	return i.ToGetVrfsFilterArrayOutputWithContext(context.Background())
}

func (i GetVrfsFilterArray) ToGetVrfsFilterArrayOutputWithContext(ctx context.Context) GetVrfsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVrfsFilterArrayOutput)
}

type GetVrfsFilterOutput struct{ *pulumi.OutputState }

func (GetVrfsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVrfsFilter)(nil)).Elem()
}

func (o GetVrfsFilterOutput) ToGetVrfsFilterOutput() GetVrfsFilterOutput {
	return o
}

func (o GetVrfsFilterOutput) ToGetVrfsFilterOutputWithContext(ctx context.Context) GetVrfsFilterOutput {
	return o
}

func (o GetVrfsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVrfsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetVrfsFilterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetVrfsFilter) string { return v.Value }).(pulumi.StringOutput)
}

type GetVrfsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetVrfsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVrfsFilter)(nil)).Elem()
}

func (o GetVrfsFilterArrayOutput) ToGetVrfsFilterArrayOutput() GetVrfsFilterArrayOutput {
	return o
}

func (o GetVrfsFilterArrayOutput) ToGetVrfsFilterArrayOutputWithContext(ctx context.Context) GetVrfsFilterArrayOutput {
	return o
}

func (o GetVrfsFilterArrayOutput) Index(i pulumi.IntInput) GetVrfsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVrfsFilter {
		return vs[0].([]GetVrfsFilter)[vs[1].(int)]
	}).(GetVrfsFilterOutput)
}

type GetVrfsVrf struct {
	Description string `pulumi:"description"`
	Id          int    `pulumi:"id"`
	Name        string `pulumi:"name"`
	Rd          string `pulumi:"rd"`
	Tenant      int    `pulumi:"tenant"`
}

// GetVrfsVrfInput is an input type that accepts GetVrfsVrfArgs and GetVrfsVrfOutput values.
// You can construct a concrete instance of `GetVrfsVrfInput` via:
//
//	GetVrfsVrfArgs{...}
type GetVrfsVrfInput interface {
	pulumi.Input

	ToGetVrfsVrfOutput() GetVrfsVrfOutput
	ToGetVrfsVrfOutputWithContext(context.Context) GetVrfsVrfOutput
}

type GetVrfsVrfArgs struct {
	Description pulumi.StringInput `pulumi:"description"`
	Id          pulumi.IntInput    `pulumi:"id"`
	Name        pulumi.StringInput `pulumi:"name"`
	Rd          pulumi.StringInput `pulumi:"rd"`
	Tenant      pulumi.IntInput    `pulumi:"tenant"`
}

func (GetVrfsVrfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVrfsVrf)(nil)).Elem()
}

func (i GetVrfsVrfArgs) ToGetVrfsVrfOutput() GetVrfsVrfOutput {
	return i.ToGetVrfsVrfOutputWithContext(context.Background())
}

func (i GetVrfsVrfArgs) ToGetVrfsVrfOutputWithContext(ctx context.Context) GetVrfsVrfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVrfsVrfOutput)
}

// GetVrfsVrfArrayInput is an input type that accepts GetVrfsVrfArray and GetVrfsVrfArrayOutput values.
// You can construct a concrete instance of `GetVrfsVrfArrayInput` via:
//
//	GetVrfsVrfArray{ GetVrfsVrfArgs{...} }
type GetVrfsVrfArrayInput interface {
	pulumi.Input

	ToGetVrfsVrfArrayOutput() GetVrfsVrfArrayOutput
	ToGetVrfsVrfArrayOutputWithContext(context.Context) GetVrfsVrfArrayOutput
}

type GetVrfsVrfArray []GetVrfsVrfInput

func (GetVrfsVrfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVrfsVrf)(nil)).Elem()
}

func (i GetVrfsVrfArray) ToGetVrfsVrfArrayOutput() GetVrfsVrfArrayOutput {
	return i.ToGetVrfsVrfArrayOutputWithContext(context.Background())
}

func (i GetVrfsVrfArray) ToGetVrfsVrfArrayOutputWithContext(ctx context.Context) GetVrfsVrfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVrfsVrfArrayOutput)
}

type GetVrfsVrfOutput struct{ *pulumi.OutputState }

func (GetVrfsVrfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVrfsVrf)(nil)).Elem()
}

func (o GetVrfsVrfOutput) ToGetVrfsVrfOutput() GetVrfsVrfOutput {
	return o
}

func (o GetVrfsVrfOutput) ToGetVrfsVrfOutputWithContext(ctx context.Context) GetVrfsVrfOutput {
	return o
}

func (o GetVrfsVrfOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetVrfsVrf) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetVrfsVrfOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetVrfsVrf) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetVrfsVrfOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVrfsVrf) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetVrfsVrfOutput) Rd() pulumi.StringOutput {
	return o.ApplyT(func(v GetVrfsVrf) string { return v.Rd }).(pulumi.StringOutput)
}

func (o GetVrfsVrfOutput) Tenant() pulumi.IntOutput {
	return o.ApplyT(func(v GetVrfsVrf) int { return v.Tenant }).(pulumi.IntOutput)
}

type GetVrfsVrfArrayOutput struct{ *pulumi.OutputState }

func (GetVrfsVrfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVrfsVrf)(nil)).Elem()
}

func (o GetVrfsVrfArrayOutput) ToGetVrfsVrfArrayOutput() GetVrfsVrfArrayOutput {
	return o
}

func (o GetVrfsVrfArrayOutput) ToGetVrfsVrfArrayOutputWithContext(ctx context.Context) GetVrfsVrfArrayOutput {
	return o
}

func (o GetVrfsVrfArrayOutput) Index(i pulumi.IntInput) GetVrfsVrfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVrfsVrf {
		return vs[0].([]GetVrfsVrf)[vs[1].(int)]
	}).(GetVrfsVrfOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IpAddressNatOutsideAddressInput)(nil)).Elem(), IpAddressNatOutsideAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpAddressNatOutsideAddressArrayInput)(nil)).Elem(), IpAddressNatOutsideAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAsnsAsnInput)(nil)).Elem(), GetAsnsAsnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAsnsAsnArrayInput)(nil)).Elem(), GetAsnsAsnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAsnsFilterInput)(nil)).Elem(), GetAsnsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAsnsFilterArrayInput)(nil)).Elem(), GetAsnsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAvailablePrefixPrefixesAvailableInput)(nil)).Elem(), GetAvailablePrefixPrefixesAvailableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAvailablePrefixPrefixesAvailableArrayInput)(nil)).Elem(), GetAvailablePrefixPrefixesAvailableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpAddressesFilterInput)(nil)).Elem(), GetIpAddressesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpAddressesFilterArrayInput)(nil)).Elem(), GetIpAddressesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpAddressesIpAddressInput)(nil)).Elem(), GetIpAddressesIpAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpAddressesIpAddressArrayInput)(nil)).Elem(), GetIpAddressesIpAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpAddressesIpAddressTagInput)(nil)).Elem(), GetIpAddressesIpAddressTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpAddressesIpAddressTagArrayInput)(nil)).Elem(), GetIpAddressesIpAddressTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpAddressesIpAddressTenantInput)(nil)).Elem(), GetIpAddressesIpAddressTenantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIpAddressesIpAddressTenantArrayInput)(nil)).Elem(), GetIpAddressesIpAddressTenantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrefixesFilterInput)(nil)).Elem(), GetPrefixesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrefixesFilterArrayInput)(nil)).Elem(), GetPrefixesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrefixesPrefixInput)(nil)).Elem(), GetPrefixesPrefixArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPrefixesPrefixArrayInput)(nil)).Elem(), GetPrefixesPrefixArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVlansFilterInput)(nil)).Elem(), GetVlansFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVlansFilterArrayInput)(nil)).Elem(), GetVlansFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVlansVlanInput)(nil)).Elem(), GetVlansVlanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVlansVlanArrayInput)(nil)).Elem(), GetVlansVlanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVrfsFilterInput)(nil)).Elem(), GetVrfsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVrfsFilterArrayInput)(nil)).Elem(), GetVrfsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVrfsVrfInput)(nil)).Elem(), GetVrfsVrfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVrfsVrfArrayInput)(nil)).Elem(), GetVrfsVrfArray{})
	pulumi.RegisterOutputType(IpAddressNatOutsideAddressOutput{})
	pulumi.RegisterOutputType(IpAddressNatOutsideAddressArrayOutput{})
	pulumi.RegisterOutputType(GetAsnsAsnOutput{})
	pulumi.RegisterOutputType(GetAsnsAsnArrayOutput{})
	pulumi.RegisterOutputType(GetAsnsFilterOutput{})
	pulumi.RegisterOutputType(GetAsnsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetAvailablePrefixPrefixesAvailableOutput{})
	pulumi.RegisterOutputType(GetAvailablePrefixPrefixesAvailableArrayOutput{})
	pulumi.RegisterOutputType(GetIpAddressesFilterOutput{})
	pulumi.RegisterOutputType(GetIpAddressesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetIpAddressesIpAddressOutput{})
	pulumi.RegisterOutputType(GetIpAddressesIpAddressArrayOutput{})
	pulumi.RegisterOutputType(GetIpAddressesIpAddressTagOutput{})
	pulumi.RegisterOutputType(GetIpAddressesIpAddressTagArrayOutput{})
	pulumi.RegisterOutputType(GetIpAddressesIpAddressTenantOutput{})
	pulumi.RegisterOutputType(GetIpAddressesIpAddressTenantArrayOutput{})
	pulumi.RegisterOutputType(GetPrefixesFilterOutput{})
	pulumi.RegisterOutputType(GetPrefixesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetPrefixesPrefixOutput{})
	pulumi.RegisterOutputType(GetPrefixesPrefixArrayOutput{})
	pulumi.RegisterOutputType(GetVlansFilterOutput{})
	pulumi.RegisterOutputType(GetVlansFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVlansVlanOutput{})
	pulumi.RegisterOutputType(GetVlansVlanArrayOutput{})
	pulumi.RegisterOutputType(GetVrfsFilterOutput{})
	pulumi.RegisterOutputType(GetVrfsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVrfsVrfOutput{})
	pulumi.RegisterOutputType(GetVrfsVrfArrayOutput{})
}
