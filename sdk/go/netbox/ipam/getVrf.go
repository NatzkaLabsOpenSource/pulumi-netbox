// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ipam

import (
	"context"
	"reflect"

	"github.com/NatzkaLabsOpenSource/pulumi-netbox/sdk/go/netbox/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/NatzkaLabsOpenSource/pulumi-netbox/sdk/go/netbox/ipam"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ipam.LookupVrf(ctx, &ipam.LookupVrfArgs{
//				Name: "cust-a-prod",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupVrf(ctx *pulumi.Context, args *LookupVrfArgs, opts ...pulumi.InvokeOption) (*LookupVrfResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVrfResult
	err := ctx.Invoke("netbox:ipam/getVrf:getVrf", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVrf.
type LookupVrfArgs struct {
	Name     string `pulumi:"name"`
	TenantId *int   `pulumi:"tenantId"`
}

// A collection of values returned by getVrf.
type LookupVrfResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id       string `pulumi:"id"`
	Name     string `pulumi:"name"`
	TenantId *int   `pulumi:"tenantId"`
}

func LookupVrfOutput(ctx *pulumi.Context, args LookupVrfOutputArgs, opts ...pulumi.InvokeOption) LookupVrfResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupVrfResultOutput, error) {
			args := v.(LookupVrfArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("netbox:ipam/getVrf:getVrf", args, LookupVrfResultOutput{}, options).(LookupVrfResultOutput), nil
		}).(LookupVrfResultOutput)
}

// A collection of arguments for invoking getVrf.
type LookupVrfOutputArgs struct {
	Name     pulumi.StringInput `pulumi:"name"`
	TenantId pulumi.IntPtrInput `pulumi:"tenantId"`
}

func (LookupVrfOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVrfArgs)(nil)).Elem()
}

// A collection of values returned by getVrf.
type LookupVrfResultOutput struct{ *pulumi.OutputState }

func (LookupVrfResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVrfResult)(nil)).Elem()
}

func (o LookupVrfResultOutput) ToLookupVrfResultOutput() LookupVrfResultOutput {
	return o
}

func (o LookupVrfResultOutput) ToLookupVrfResultOutputWithContext(ctx context.Context) LookupVrfResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupVrfResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVrfResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupVrfResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVrfResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupVrfResultOutput) TenantId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupVrfResult) *int { return v.TenantId }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVrfResultOutput{})
}
