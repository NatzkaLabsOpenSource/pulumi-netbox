// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package virt

import (
	"context"
	"reflect"

	"github.com/NatzkaLabsOpenSource/pulumi-netbox/sdk/go/netbox/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/NatzkaLabsOpenSource/pulumi-netbox/sdk/go/netbox/virt"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := virt.LookupCluster(ctx, &virt.LookupClusterArgs{
//				Name: pulumi.StringRef("vmw-cluster-01"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupCluster(ctx *pulumi.Context, args *LookupClusterArgs, opts ...pulumi.InvokeOption) (*LookupClusterResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupClusterResult
	err := ctx.Invoke("netbox:virt/getCluster:getCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCluster.
type LookupClusterArgs struct {
	// At least one of `name`, `siteId` or `id` must be given.
	Id *string `pulumi:"id"`
	// At least one of `name`, `siteId` or `id` must be given.
	Name *string `pulumi:"name"`
	// At least one of `name`, `siteId` or `id` must be given.
	SiteId *int `pulumi:"siteId"`
}

// A collection of values returned by getCluster.
type LookupClusterResult struct {
	ClusterGroupId int                    `pulumi:"clusterGroupId"`
	ClusterId      int                    `pulumi:"clusterId"`
	ClusterTypeId  int                    `pulumi:"clusterTypeId"`
	Comments       string                 `pulumi:"comments"`
	CustomFields   map[string]interface{} `pulumi:"customFields"`
	Description    string                 `pulumi:"description"`
	// At least one of `name`, `siteId` or `id` must be given.
	Id string `pulumi:"id"`
	// At least one of `name`, `siteId` or `id` must be given.
	Name *string `pulumi:"name"`
	// At least one of `name`, `siteId` or `id` must be given.
	SiteId int      `pulumi:"siteId"`
	Tags   []string `pulumi:"tags"`
}

func LookupClusterOutput(ctx *pulumi.Context, args LookupClusterOutputArgs, opts ...pulumi.InvokeOption) LookupClusterResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupClusterResult, error) {
			args := v.(LookupClusterArgs)
			r, err := LookupCluster(ctx, &args, opts...)
			var s LookupClusterResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupClusterResultOutput)
}

// A collection of arguments for invoking getCluster.
type LookupClusterOutputArgs struct {
	// At least one of `name`, `siteId` or `id` must be given.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// At least one of `name`, `siteId` or `id` must be given.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// At least one of `name`, `siteId` or `id` must be given.
	SiteId pulumi.IntPtrInput `pulumi:"siteId"`
}

func (LookupClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClusterArgs)(nil)).Elem()
}

// A collection of values returned by getCluster.
type LookupClusterResultOutput struct{ *pulumi.OutputState }

func (LookupClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClusterResult)(nil)).Elem()
}

func (o LookupClusterResultOutput) ToLookupClusterResultOutput() LookupClusterResultOutput {
	return o
}

func (o LookupClusterResultOutput) ToLookupClusterResultOutputWithContext(ctx context.Context) LookupClusterResultOutput {
	return o
}

func (o LookupClusterResultOutput) ClusterGroupId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupClusterResult) int { return v.ClusterGroupId }).(pulumi.IntOutput)
}

func (o LookupClusterResultOutput) ClusterId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupClusterResult) int { return v.ClusterId }).(pulumi.IntOutput)
}

func (o LookupClusterResultOutput) ClusterTypeId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupClusterResult) int { return v.ClusterTypeId }).(pulumi.IntOutput)
}

func (o LookupClusterResultOutput) Comments() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.Comments }).(pulumi.StringOutput)
}

func (o LookupClusterResultOutput) CustomFields() pulumi.MapOutput {
	return o.ApplyT(func(v LookupClusterResult) map[string]interface{} { return v.CustomFields }).(pulumi.MapOutput)
}

func (o LookupClusterResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.Description }).(pulumi.StringOutput)
}

// At least one of `name`, `siteId` or `id` must be given.
func (o LookupClusterResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupClusterResult) string { return v.Id }).(pulumi.StringOutput)
}

// At least one of `name`, `siteId` or `id` must be given.
func (o LookupClusterResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// At least one of `name`, `siteId` or `id` must be given.
func (o LookupClusterResultOutput) SiteId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupClusterResult) int { return v.SiteId }).(pulumi.IntOutput)
}

func (o LookupClusterResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupClusterResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupClusterResultOutput{})
}
