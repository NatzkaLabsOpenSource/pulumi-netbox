// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dcim

import (
	"context"
	"reflect"

	"github.com/NatzkaLabsOpenSource/pulumi-netbox/sdk/go/netbox/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type CableATermination struct {
	ObjectId   int    `pulumi:"objectId"`
	ObjectType string `pulumi:"objectType"`
}

// CableATerminationInput is an input type that accepts CableATerminationArgs and CableATerminationOutput values.
// You can construct a concrete instance of `CableATerminationInput` via:
//
//	CableATerminationArgs{...}
type CableATerminationInput interface {
	pulumi.Input

	ToCableATerminationOutput() CableATerminationOutput
	ToCableATerminationOutputWithContext(context.Context) CableATerminationOutput
}

type CableATerminationArgs struct {
	ObjectId   pulumi.IntInput    `pulumi:"objectId"`
	ObjectType pulumi.StringInput `pulumi:"objectType"`
}

func (CableATerminationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CableATermination)(nil)).Elem()
}

func (i CableATerminationArgs) ToCableATerminationOutput() CableATerminationOutput {
	return i.ToCableATerminationOutputWithContext(context.Background())
}

func (i CableATerminationArgs) ToCableATerminationOutputWithContext(ctx context.Context) CableATerminationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CableATerminationOutput)
}

// CableATerminationArrayInput is an input type that accepts CableATerminationArray and CableATerminationArrayOutput values.
// You can construct a concrete instance of `CableATerminationArrayInput` via:
//
//	CableATerminationArray{ CableATerminationArgs{...} }
type CableATerminationArrayInput interface {
	pulumi.Input

	ToCableATerminationArrayOutput() CableATerminationArrayOutput
	ToCableATerminationArrayOutputWithContext(context.Context) CableATerminationArrayOutput
}

type CableATerminationArray []CableATerminationInput

func (CableATerminationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CableATermination)(nil)).Elem()
}

func (i CableATerminationArray) ToCableATerminationArrayOutput() CableATerminationArrayOutput {
	return i.ToCableATerminationArrayOutputWithContext(context.Background())
}

func (i CableATerminationArray) ToCableATerminationArrayOutputWithContext(ctx context.Context) CableATerminationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CableATerminationArrayOutput)
}

type CableATerminationOutput struct{ *pulumi.OutputState }

func (CableATerminationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CableATermination)(nil)).Elem()
}

func (o CableATerminationOutput) ToCableATerminationOutput() CableATerminationOutput {
	return o
}

func (o CableATerminationOutput) ToCableATerminationOutputWithContext(ctx context.Context) CableATerminationOutput {
	return o
}

func (o CableATerminationOutput) ObjectId() pulumi.IntOutput {
	return o.ApplyT(func(v CableATermination) int { return v.ObjectId }).(pulumi.IntOutput)
}

func (o CableATerminationOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v CableATermination) string { return v.ObjectType }).(pulumi.StringOutput)
}

type CableATerminationArrayOutput struct{ *pulumi.OutputState }

func (CableATerminationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CableATermination)(nil)).Elem()
}

func (o CableATerminationArrayOutput) ToCableATerminationArrayOutput() CableATerminationArrayOutput {
	return o
}

func (o CableATerminationArrayOutput) ToCableATerminationArrayOutputWithContext(ctx context.Context) CableATerminationArrayOutput {
	return o
}

func (o CableATerminationArrayOutput) Index(i pulumi.IntInput) CableATerminationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CableATermination {
		return vs[0].([]CableATermination)[vs[1].(int)]
	}).(CableATerminationOutput)
}

type CableBTermination struct {
	ObjectId   int    `pulumi:"objectId"`
	ObjectType string `pulumi:"objectType"`
}

// CableBTerminationInput is an input type that accepts CableBTerminationArgs and CableBTerminationOutput values.
// You can construct a concrete instance of `CableBTerminationInput` via:
//
//	CableBTerminationArgs{...}
type CableBTerminationInput interface {
	pulumi.Input

	ToCableBTerminationOutput() CableBTerminationOutput
	ToCableBTerminationOutputWithContext(context.Context) CableBTerminationOutput
}

type CableBTerminationArgs struct {
	ObjectId   pulumi.IntInput    `pulumi:"objectId"`
	ObjectType pulumi.StringInput `pulumi:"objectType"`
}

func (CableBTerminationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CableBTermination)(nil)).Elem()
}

func (i CableBTerminationArgs) ToCableBTerminationOutput() CableBTerminationOutput {
	return i.ToCableBTerminationOutputWithContext(context.Background())
}

func (i CableBTerminationArgs) ToCableBTerminationOutputWithContext(ctx context.Context) CableBTerminationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CableBTerminationOutput)
}

// CableBTerminationArrayInput is an input type that accepts CableBTerminationArray and CableBTerminationArrayOutput values.
// You can construct a concrete instance of `CableBTerminationArrayInput` via:
//
//	CableBTerminationArray{ CableBTerminationArgs{...} }
type CableBTerminationArrayInput interface {
	pulumi.Input

	ToCableBTerminationArrayOutput() CableBTerminationArrayOutput
	ToCableBTerminationArrayOutputWithContext(context.Context) CableBTerminationArrayOutput
}

type CableBTerminationArray []CableBTerminationInput

func (CableBTerminationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CableBTermination)(nil)).Elem()
}

func (i CableBTerminationArray) ToCableBTerminationArrayOutput() CableBTerminationArrayOutput {
	return i.ToCableBTerminationArrayOutputWithContext(context.Background())
}

func (i CableBTerminationArray) ToCableBTerminationArrayOutputWithContext(ctx context.Context) CableBTerminationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CableBTerminationArrayOutput)
}

type CableBTerminationOutput struct{ *pulumi.OutputState }

func (CableBTerminationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CableBTermination)(nil)).Elem()
}

func (o CableBTerminationOutput) ToCableBTerminationOutput() CableBTerminationOutput {
	return o
}

func (o CableBTerminationOutput) ToCableBTerminationOutputWithContext(ctx context.Context) CableBTerminationOutput {
	return o
}

func (o CableBTerminationOutput) ObjectId() pulumi.IntOutput {
	return o.ApplyT(func(v CableBTermination) int { return v.ObjectId }).(pulumi.IntOutput)
}

func (o CableBTerminationOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v CableBTermination) string { return v.ObjectType }).(pulumi.StringOutput)
}

type CableBTerminationArrayOutput struct{ *pulumi.OutputState }

func (CableBTerminationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CableBTermination)(nil)).Elem()
}

func (o CableBTerminationArrayOutput) ToCableBTerminationArrayOutput() CableBTerminationArrayOutput {
	return o
}

func (o CableBTerminationArrayOutput) ToCableBTerminationArrayOutputWithContext(ctx context.Context) CableBTerminationArrayOutput {
	return o
}

func (o CableBTerminationArrayOutput) Index(i pulumi.IntInput) CableBTerminationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CableBTermination {
		return vs[0].([]CableBTermination)[vs[1].(int)]
	}).(CableBTerminationOutput)
}

type DeviceInterfaceMacAddress struct {
	Description *string `pulumi:"description"`
	Id          *int    `pulumi:"id"`
	MacAddress  *string `pulumi:"macAddress"`
}

// DeviceInterfaceMacAddressInput is an input type that accepts DeviceInterfaceMacAddressArgs and DeviceInterfaceMacAddressOutput values.
// You can construct a concrete instance of `DeviceInterfaceMacAddressInput` via:
//
//	DeviceInterfaceMacAddressArgs{...}
type DeviceInterfaceMacAddressInput interface {
	pulumi.Input

	ToDeviceInterfaceMacAddressOutput() DeviceInterfaceMacAddressOutput
	ToDeviceInterfaceMacAddressOutputWithContext(context.Context) DeviceInterfaceMacAddressOutput
}

type DeviceInterfaceMacAddressArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Id          pulumi.IntPtrInput    `pulumi:"id"`
	MacAddress  pulumi.StringPtrInput `pulumi:"macAddress"`
}

func (DeviceInterfaceMacAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceInterfaceMacAddress)(nil)).Elem()
}

func (i DeviceInterfaceMacAddressArgs) ToDeviceInterfaceMacAddressOutput() DeviceInterfaceMacAddressOutput {
	return i.ToDeviceInterfaceMacAddressOutputWithContext(context.Background())
}

func (i DeviceInterfaceMacAddressArgs) ToDeviceInterfaceMacAddressOutputWithContext(ctx context.Context) DeviceInterfaceMacAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceInterfaceMacAddressOutput)
}

// DeviceInterfaceMacAddressArrayInput is an input type that accepts DeviceInterfaceMacAddressArray and DeviceInterfaceMacAddressArrayOutput values.
// You can construct a concrete instance of `DeviceInterfaceMacAddressArrayInput` via:
//
//	DeviceInterfaceMacAddressArray{ DeviceInterfaceMacAddressArgs{...} }
type DeviceInterfaceMacAddressArrayInput interface {
	pulumi.Input

	ToDeviceInterfaceMacAddressArrayOutput() DeviceInterfaceMacAddressArrayOutput
	ToDeviceInterfaceMacAddressArrayOutputWithContext(context.Context) DeviceInterfaceMacAddressArrayOutput
}

type DeviceInterfaceMacAddressArray []DeviceInterfaceMacAddressInput

func (DeviceInterfaceMacAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeviceInterfaceMacAddress)(nil)).Elem()
}

func (i DeviceInterfaceMacAddressArray) ToDeviceInterfaceMacAddressArrayOutput() DeviceInterfaceMacAddressArrayOutput {
	return i.ToDeviceInterfaceMacAddressArrayOutputWithContext(context.Background())
}

func (i DeviceInterfaceMacAddressArray) ToDeviceInterfaceMacAddressArrayOutputWithContext(ctx context.Context) DeviceInterfaceMacAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceInterfaceMacAddressArrayOutput)
}

type DeviceInterfaceMacAddressOutput struct{ *pulumi.OutputState }

func (DeviceInterfaceMacAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceInterfaceMacAddress)(nil)).Elem()
}

func (o DeviceInterfaceMacAddressOutput) ToDeviceInterfaceMacAddressOutput() DeviceInterfaceMacAddressOutput {
	return o
}

func (o DeviceInterfaceMacAddressOutput) ToDeviceInterfaceMacAddressOutputWithContext(ctx context.Context) DeviceInterfaceMacAddressOutput {
	return o
}

func (o DeviceInterfaceMacAddressOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceInterfaceMacAddress) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DeviceInterfaceMacAddressOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeviceInterfaceMacAddress) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o DeviceInterfaceMacAddressOutput) MacAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceInterfaceMacAddress) *string { return v.MacAddress }).(pulumi.StringPtrOutput)
}

type DeviceInterfaceMacAddressArrayOutput struct{ *pulumi.OutputState }

func (DeviceInterfaceMacAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeviceInterfaceMacAddress)(nil)).Elem()
}

func (o DeviceInterfaceMacAddressArrayOutput) ToDeviceInterfaceMacAddressArrayOutput() DeviceInterfaceMacAddressArrayOutput {
	return o
}

func (o DeviceInterfaceMacAddressArrayOutput) ToDeviceInterfaceMacAddressArrayOutputWithContext(ctx context.Context) DeviceInterfaceMacAddressArrayOutput {
	return o
}

func (o DeviceInterfaceMacAddressArrayOutput) Index(i pulumi.IntInput) DeviceInterfaceMacAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeviceInterfaceMacAddress {
		return vs[0].([]DeviceInterfaceMacAddress)[vs[1].(int)]
	}).(DeviceInterfaceMacAddressOutput)
}

type GetDeviceInterfacesFilter struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// GetDeviceInterfacesFilterInput is an input type that accepts GetDeviceInterfacesFilterArgs and GetDeviceInterfacesFilterOutput values.
// You can construct a concrete instance of `GetDeviceInterfacesFilterInput` via:
//
//	GetDeviceInterfacesFilterArgs{...}
type GetDeviceInterfacesFilterInput interface {
	pulumi.Input

	ToGetDeviceInterfacesFilterOutput() GetDeviceInterfacesFilterOutput
	ToGetDeviceInterfacesFilterOutputWithContext(context.Context) GetDeviceInterfacesFilterOutput
}

type GetDeviceInterfacesFilterArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetDeviceInterfacesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeviceInterfacesFilter)(nil)).Elem()
}

func (i GetDeviceInterfacesFilterArgs) ToGetDeviceInterfacesFilterOutput() GetDeviceInterfacesFilterOutput {
	return i.ToGetDeviceInterfacesFilterOutputWithContext(context.Background())
}

func (i GetDeviceInterfacesFilterArgs) ToGetDeviceInterfacesFilterOutputWithContext(ctx context.Context) GetDeviceInterfacesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeviceInterfacesFilterOutput)
}

// GetDeviceInterfacesFilterArrayInput is an input type that accepts GetDeviceInterfacesFilterArray and GetDeviceInterfacesFilterArrayOutput values.
// You can construct a concrete instance of `GetDeviceInterfacesFilterArrayInput` via:
//
//	GetDeviceInterfacesFilterArray{ GetDeviceInterfacesFilterArgs{...} }
type GetDeviceInterfacesFilterArrayInput interface {
	pulumi.Input

	ToGetDeviceInterfacesFilterArrayOutput() GetDeviceInterfacesFilterArrayOutput
	ToGetDeviceInterfacesFilterArrayOutputWithContext(context.Context) GetDeviceInterfacesFilterArrayOutput
}

type GetDeviceInterfacesFilterArray []GetDeviceInterfacesFilterInput

func (GetDeviceInterfacesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeviceInterfacesFilter)(nil)).Elem()
}

func (i GetDeviceInterfacesFilterArray) ToGetDeviceInterfacesFilterArrayOutput() GetDeviceInterfacesFilterArrayOutput {
	return i.ToGetDeviceInterfacesFilterArrayOutputWithContext(context.Background())
}

func (i GetDeviceInterfacesFilterArray) ToGetDeviceInterfacesFilterArrayOutputWithContext(ctx context.Context) GetDeviceInterfacesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeviceInterfacesFilterArrayOutput)
}

type GetDeviceInterfacesFilterOutput struct{ *pulumi.OutputState }

func (GetDeviceInterfacesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeviceInterfacesFilter)(nil)).Elem()
}

func (o GetDeviceInterfacesFilterOutput) ToGetDeviceInterfacesFilterOutput() GetDeviceInterfacesFilterOutput {
	return o
}

func (o GetDeviceInterfacesFilterOutput) ToGetDeviceInterfacesFilterOutputWithContext(ctx context.Context) GetDeviceInterfacesFilterOutput {
	return o
}

func (o GetDeviceInterfacesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeviceInterfacesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDeviceInterfacesFilterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeviceInterfacesFilter) string { return v.Value }).(pulumi.StringOutput)
}

type GetDeviceInterfacesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetDeviceInterfacesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeviceInterfacesFilter)(nil)).Elem()
}

func (o GetDeviceInterfacesFilterArrayOutput) ToGetDeviceInterfacesFilterArrayOutput() GetDeviceInterfacesFilterArrayOutput {
	return o
}

func (o GetDeviceInterfacesFilterArrayOutput) ToGetDeviceInterfacesFilterArrayOutputWithContext(ctx context.Context) GetDeviceInterfacesFilterArrayOutput {
	return o
}

func (o GetDeviceInterfacesFilterArrayOutput) Index(i pulumi.IntInput) GetDeviceInterfacesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDeviceInterfacesFilter {
		return vs[0].([]GetDeviceInterfacesFilter)[vs[1].(int)]
	}).(GetDeviceInterfacesFilterOutput)
}

type GetDeviceInterfacesInterface struct {
	Description string `pulumi:"description"`
	DeviceId    int    `pulumi:"deviceId"`
	Enabled     bool   `pulumi:"enabled"`
	Id          int    `pulumi:"id"`
	// The MAC address as string from the first MAC address assigned to this interface, if any.
	MacAddress    string                                     `pulumi:"macAddress"`
	MacAddresses  []GetDeviceInterfacesInterfaceMacAddress   `pulumi:"macAddresses"`
	Mode          map[string]string                          `pulumi:"mode"`
	Mtu           int                                        `pulumi:"mtu"`
	Name          string                                     `pulumi:"name"`
	TagIds        []int                                      `pulumi:"tagIds"`
	TaggedVlans   []GetDeviceInterfacesInterfaceTaggedVlan   `pulumi:"taggedVlans"`
	UntaggedVlans []GetDeviceInterfacesInterfaceUntaggedVlan `pulumi:"untaggedVlans"`
}

// GetDeviceInterfacesInterfaceInput is an input type that accepts GetDeviceInterfacesInterfaceArgs and GetDeviceInterfacesInterfaceOutput values.
// You can construct a concrete instance of `GetDeviceInterfacesInterfaceInput` via:
//
//	GetDeviceInterfacesInterfaceArgs{...}
type GetDeviceInterfacesInterfaceInput interface {
	pulumi.Input

	ToGetDeviceInterfacesInterfaceOutput() GetDeviceInterfacesInterfaceOutput
	ToGetDeviceInterfacesInterfaceOutputWithContext(context.Context) GetDeviceInterfacesInterfaceOutput
}

type GetDeviceInterfacesInterfaceArgs struct {
	Description pulumi.StringInput `pulumi:"description"`
	DeviceId    pulumi.IntInput    `pulumi:"deviceId"`
	Enabled     pulumi.BoolInput   `pulumi:"enabled"`
	Id          pulumi.IntInput    `pulumi:"id"`
	// The MAC address as string from the first MAC address assigned to this interface, if any.
	MacAddress    pulumi.StringInput                                 `pulumi:"macAddress"`
	MacAddresses  GetDeviceInterfacesInterfaceMacAddressArrayInput   `pulumi:"macAddresses"`
	Mode          pulumi.StringMapInput                              `pulumi:"mode"`
	Mtu           pulumi.IntInput                                    `pulumi:"mtu"`
	Name          pulumi.StringInput                                 `pulumi:"name"`
	TagIds        pulumi.IntArrayInput                               `pulumi:"tagIds"`
	TaggedVlans   GetDeviceInterfacesInterfaceTaggedVlanArrayInput   `pulumi:"taggedVlans"`
	UntaggedVlans GetDeviceInterfacesInterfaceUntaggedVlanArrayInput `pulumi:"untaggedVlans"`
}

func (GetDeviceInterfacesInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeviceInterfacesInterface)(nil)).Elem()
}

func (i GetDeviceInterfacesInterfaceArgs) ToGetDeviceInterfacesInterfaceOutput() GetDeviceInterfacesInterfaceOutput {
	return i.ToGetDeviceInterfacesInterfaceOutputWithContext(context.Background())
}

func (i GetDeviceInterfacesInterfaceArgs) ToGetDeviceInterfacesInterfaceOutputWithContext(ctx context.Context) GetDeviceInterfacesInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeviceInterfacesInterfaceOutput)
}

// GetDeviceInterfacesInterfaceArrayInput is an input type that accepts GetDeviceInterfacesInterfaceArray and GetDeviceInterfacesInterfaceArrayOutput values.
// You can construct a concrete instance of `GetDeviceInterfacesInterfaceArrayInput` via:
//
//	GetDeviceInterfacesInterfaceArray{ GetDeviceInterfacesInterfaceArgs{...} }
type GetDeviceInterfacesInterfaceArrayInput interface {
	pulumi.Input

	ToGetDeviceInterfacesInterfaceArrayOutput() GetDeviceInterfacesInterfaceArrayOutput
	ToGetDeviceInterfacesInterfaceArrayOutputWithContext(context.Context) GetDeviceInterfacesInterfaceArrayOutput
}

type GetDeviceInterfacesInterfaceArray []GetDeviceInterfacesInterfaceInput

func (GetDeviceInterfacesInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeviceInterfacesInterface)(nil)).Elem()
}

func (i GetDeviceInterfacesInterfaceArray) ToGetDeviceInterfacesInterfaceArrayOutput() GetDeviceInterfacesInterfaceArrayOutput {
	return i.ToGetDeviceInterfacesInterfaceArrayOutputWithContext(context.Background())
}

func (i GetDeviceInterfacesInterfaceArray) ToGetDeviceInterfacesInterfaceArrayOutputWithContext(ctx context.Context) GetDeviceInterfacesInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeviceInterfacesInterfaceArrayOutput)
}

type GetDeviceInterfacesInterfaceOutput struct{ *pulumi.OutputState }

func (GetDeviceInterfacesInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeviceInterfacesInterface)(nil)).Elem()
}

func (o GetDeviceInterfacesInterfaceOutput) ToGetDeviceInterfacesInterfaceOutput() GetDeviceInterfacesInterfaceOutput {
	return o
}

func (o GetDeviceInterfacesInterfaceOutput) ToGetDeviceInterfacesInterfaceOutputWithContext(ctx context.Context) GetDeviceInterfacesInterfaceOutput {
	return o
}

func (o GetDeviceInterfacesInterfaceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeviceInterfacesInterface) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetDeviceInterfacesInterfaceOutput) DeviceId() pulumi.IntOutput {
	return o.ApplyT(func(v GetDeviceInterfacesInterface) int { return v.DeviceId }).(pulumi.IntOutput)
}

func (o GetDeviceInterfacesInterfaceOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDeviceInterfacesInterface) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetDeviceInterfacesInterfaceOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetDeviceInterfacesInterface) int { return v.Id }).(pulumi.IntOutput)
}

// The MAC address as string from the first MAC address assigned to this interface, if any.
func (o GetDeviceInterfacesInterfaceOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeviceInterfacesInterface) string { return v.MacAddress }).(pulumi.StringOutput)
}

func (o GetDeviceInterfacesInterfaceOutput) MacAddresses() GetDeviceInterfacesInterfaceMacAddressArrayOutput {
	return o.ApplyT(func(v GetDeviceInterfacesInterface) []GetDeviceInterfacesInterfaceMacAddress { return v.MacAddresses }).(GetDeviceInterfacesInterfaceMacAddressArrayOutput)
}

func (o GetDeviceInterfacesInterfaceOutput) Mode() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetDeviceInterfacesInterface) map[string]string { return v.Mode }).(pulumi.StringMapOutput)
}

func (o GetDeviceInterfacesInterfaceOutput) Mtu() pulumi.IntOutput {
	return o.ApplyT(func(v GetDeviceInterfacesInterface) int { return v.Mtu }).(pulumi.IntOutput)
}

func (o GetDeviceInterfacesInterfaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeviceInterfacesInterface) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDeviceInterfacesInterfaceOutput) TagIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetDeviceInterfacesInterface) []int { return v.TagIds }).(pulumi.IntArrayOutput)
}

func (o GetDeviceInterfacesInterfaceOutput) TaggedVlans() GetDeviceInterfacesInterfaceTaggedVlanArrayOutput {
	return o.ApplyT(func(v GetDeviceInterfacesInterface) []GetDeviceInterfacesInterfaceTaggedVlan { return v.TaggedVlans }).(GetDeviceInterfacesInterfaceTaggedVlanArrayOutput)
}

func (o GetDeviceInterfacesInterfaceOutput) UntaggedVlans() GetDeviceInterfacesInterfaceUntaggedVlanArrayOutput {
	return o.ApplyT(func(v GetDeviceInterfacesInterface) []GetDeviceInterfacesInterfaceUntaggedVlan {
		return v.UntaggedVlans
	}).(GetDeviceInterfacesInterfaceUntaggedVlanArrayOutput)
}

type GetDeviceInterfacesInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetDeviceInterfacesInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeviceInterfacesInterface)(nil)).Elem()
}

func (o GetDeviceInterfacesInterfaceArrayOutput) ToGetDeviceInterfacesInterfaceArrayOutput() GetDeviceInterfacesInterfaceArrayOutput {
	return o
}

func (o GetDeviceInterfacesInterfaceArrayOutput) ToGetDeviceInterfacesInterfaceArrayOutputWithContext(ctx context.Context) GetDeviceInterfacesInterfaceArrayOutput {
	return o
}

func (o GetDeviceInterfacesInterfaceArrayOutput) Index(i pulumi.IntInput) GetDeviceInterfacesInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDeviceInterfacesInterface {
		return vs[0].([]GetDeviceInterfacesInterface)[vs[1].(int)]
	}).(GetDeviceInterfacesInterfaceOutput)
}

type GetDeviceInterfacesInterfaceMacAddress struct {
	Description string `pulumi:"description"`
	Id          int    `pulumi:"id"`
	MacAddress  string `pulumi:"macAddress"`
}

// GetDeviceInterfacesInterfaceMacAddressInput is an input type that accepts GetDeviceInterfacesInterfaceMacAddressArgs and GetDeviceInterfacesInterfaceMacAddressOutput values.
// You can construct a concrete instance of `GetDeviceInterfacesInterfaceMacAddressInput` via:
//
//	GetDeviceInterfacesInterfaceMacAddressArgs{...}
type GetDeviceInterfacesInterfaceMacAddressInput interface {
	pulumi.Input

	ToGetDeviceInterfacesInterfaceMacAddressOutput() GetDeviceInterfacesInterfaceMacAddressOutput
	ToGetDeviceInterfacesInterfaceMacAddressOutputWithContext(context.Context) GetDeviceInterfacesInterfaceMacAddressOutput
}

type GetDeviceInterfacesInterfaceMacAddressArgs struct {
	Description pulumi.StringInput `pulumi:"description"`
	Id          pulumi.IntInput    `pulumi:"id"`
	MacAddress  pulumi.StringInput `pulumi:"macAddress"`
}

func (GetDeviceInterfacesInterfaceMacAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeviceInterfacesInterfaceMacAddress)(nil)).Elem()
}

func (i GetDeviceInterfacesInterfaceMacAddressArgs) ToGetDeviceInterfacesInterfaceMacAddressOutput() GetDeviceInterfacesInterfaceMacAddressOutput {
	return i.ToGetDeviceInterfacesInterfaceMacAddressOutputWithContext(context.Background())
}

func (i GetDeviceInterfacesInterfaceMacAddressArgs) ToGetDeviceInterfacesInterfaceMacAddressOutputWithContext(ctx context.Context) GetDeviceInterfacesInterfaceMacAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeviceInterfacesInterfaceMacAddressOutput)
}

// GetDeviceInterfacesInterfaceMacAddressArrayInput is an input type that accepts GetDeviceInterfacesInterfaceMacAddressArray and GetDeviceInterfacesInterfaceMacAddressArrayOutput values.
// You can construct a concrete instance of `GetDeviceInterfacesInterfaceMacAddressArrayInput` via:
//
//	GetDeviceInterfacesInterfaceMacAddressArray{ GetDeviceInterfacesInterfaceMacAddressArgs{...} }
type GetDeviceInterfacesInterfaceMacAddressArrayInput interface {
	pulumi.Input

	ToGetDeviceInterfacesInterfaceMacAddressArrayOutput() GetDeviceInterfacesInterfaceMacAddressArrayOutput
	ToGetDeviceInterfacesInterfaceMacAddressArrayOutputWithContext(context.Context) GetDeviceInterfacesInterfaceMacAddressArrayOutput
}

type GetDeviceInterfacesInterfaceMacAddressArray []GetDeviceInterfacesInterfaceMacAddressInput

func (GetDeviceInterfacesInterfaceMacAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeviceInterfacesInterfaceMacAddress)(nil)).Elem()
}

func (i GetDeviceInterfacesInterfaceMacAddressArray) ToGetDeviceInterfacesInterfaceMacAddressArrayOutput() GetDeviceInterfacesInterfaceMacAddressArrayOutput {
	return i.ToGetDeviceInterfacesInterfaceMacAddressArrayOutputWithContext(context.Background())
}

func (i GetDeviceInterfacesInterfaceMacAddressArray) ToGetDeviceInterfacesInterfaceMacAddressArrayOutputWithContext(ctx context.Context) GetDeviceInterfacesInterfaceMacAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeviceInterfacesInterfaceMacAddressArrayOutput)
}

type GetDeviceInterfacesInterfaceMacAddressOutput struct{ *pulumi.OutputState }

func (GetDeviceInterfacesInterfaceMacAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeviceInterfacesInterfaceMacAddress)(nil)).Elem()
}

func (o GetDeviceInterfacesInterfaceMacAddressOutput) ToGetDeviceInterfacesInterfaceMacAddressOutput() GetDeviceInterfacesInterfaceMacAddressOutput {
	return o
}

func (o GetDeviceInterfacesInterfaceMacAddressOutput) ToGetDeviceInterfacesInterfaceMacAddressOutputWithContext(ctx context.Context) GetDeviceInterfacesInterfaceMacAddressOutput {
	return o
}

func (o GetDeviceInterfacesInterfaceMacAddressOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeviceInterfacesInterfaceMacAddress) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetDeviceInterfacesInterfaceMacAddressOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetDeviceInterfacesInterfaceMacAddress) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetDeviceInterfacesInterfaceMacAddressOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeviceInterfacesInterfaceMacAddress) string { return v.MacAddress }).(pulumi.StringOutput)
}

type GetDeviceInterfacesInterfaceMacAddressArrayOutput struct{ *pulumi.OutputState }

func (GetDeviceInterfacesInterfaceMacAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeviceInterfacesInterfaceMacAddress)(nil)).Elem()
}

func (o GetDeviceInterfacesInterfaceMacAddressArrayOutput) ToGetDeviceInterfacesInterfaceMacAddressArrayOutput() GetDeviceInterfacesInterfaceMacAddressArrayOutput {
	return o
}

func (o GetDeviceInterfacesInterfaceMacAddressArrayOutput) ToGetDeviceInterfacesInterfaceMacAddressArrayOutputWithContext(ctx context.Context) GetDeviceInterfacesInterfaceMacAddressArrayOutput {
	return o
}

func (o GetDeviceInterfacesInterfaceMacAddressArrayOutput) Index(i pulumi.IntInput) GetDeviceInterfacesInterfaceMacAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDeviceInterfacesInterfaceMacAddress {
		return vs[0].([]GetDeviceInterfacesInterfaceMacAddress)[vs[1].(int)]
	}).(GetDeviceInterfacesInterfaceMacAddressOutput)
}

type GetDeviceInterfacesInterfaceTaggedVlan struct {
	Id   int    `pulumi:"id"`
	Name string `pulumi:"name"`
	Vid  int    `pulumi:"vid"`
}

// GetDeviceInterfacesInterfaceTaggedVlanInput is an input type that accepts GetDeviceInterfacesInterfaceTaggedVlanArgs and GetDeviceInterfacesInterfaceTaggedVlanOutput values.
// You can construct a concrete instance of `GetDeviceInterfacesInterfaceTaggedVlanInput` via:
//
//	GetDeviceInterfacesInterfaceTaggedVlanArgs{...}
type GetDeviceInterfacesInterfaceTaggedVlanInput interface {
	pulumi.Input

	ToGetDeviceInterfacesInterfaceTaggedVlanOutput() GetDeviceInterfacesInterfaceTaggedVlanOutput
	ToGetDeviceInterfacesInterfaceTaggedVlanOutputWithContext(context.Context) GetDeviceInterfacesInterfaceTaggedVlanOutput
}

type GetDeviceInterfacesInterfaceTaggedVlanArgs struct {
	Id   pulumi.IntInput    `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
	Vid  pulumi.IntInput    `pulumi:"vid"`
}

func (GetDeviceInterfacesInterfaceTaggedVlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeviceInterfacesInterfaceTaggedVlan)(nil)).Elem()
}

func (i GetDeviceInterfacesInterfaceTaggedVlanArgs) ToGetDeviceInterfacesInterfaceTaggedVlanOutput() GetDeviceInterfacesInterfaceTaggedVlanOutput {
	return i.ToGetDeviceInterfacesInterfaceTaggedVlanOutputWithContext(context.Background())
}

func (i GetDeviceInterfacesInterfaceTaggedVlanArgs) ToGetDeviceInterfacesInterfaceTaggedVlanOutputWithContext(ctx context.Context) GetDeviceInterfacesInterfaceTaggedVlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeviceInterfacesInterfaceTaggedVlanOutput)
}

// GetDeviceInterfacesInterfaceTaggedVlanArrayInput is an input type that accepts GetDeviceInterfacesInterfaceTaggedVlanArray and GetDeviceInterfacesInterfaceTaggedVlanArrayOutput values.
// You can construct a concrete instance of `GetDeviceInterfacesInterfaceTaggedVlanArrayInput` via:
//
//	GetDeviceInterfacesInterfaceTaggedVlanArray{ GetDeviceInterfacesInterfaceTaggedVlanArgs{...} }
type GetDeviceInterfacesInterfaceTaggedVlanArrayInput interface {
	pulumi.Input

	ToGetDeviceInterfacesInterfaceTaggedVlanArrayOutput() GetDeviceInterfacesInterfaceTaggedVlanArrayOutput
	ToGetDeviceInterfacesInterfaceTaggedVlanArrayOutputWithContext(context.Context) GetDeviceInterfacesInterfaceTaggedVlanArrayOutput
}

type GetDeviceInterfacesInterfaceTaggedVlanArray []GetDeviceInterfacesInterfaceTaggedVlanInput

func (GetDeviceInterfacesInterfaceTaggedVlanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeviceInterfacesInterfaceTaggedVlan)(nil)).Elem()
}

func (i GetDeviceInterfacesInterfaceTaggedVlanArray) ToGetDeviceInterfacesInterfaceTaggedVlanArrayOutput() GetDeviceInterfacesInterfaceTaggedVlanArrayOutput {
	return i.ToGetDeviceInterfacesInterfaceTaggedVlanArrayOutputWithContext(context.Background())
}

func (i GetDeviceInterfacesInterfaceTaggedVlanArray) ToGetDeviceInterfacesInterfaceTaggedVlanArrayOutputWithContext(ctx context.Context) GetDeviceInterfacesInterfaceTaggedVlanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeviceInterfacesInterfaceTaggedVlanArrayOutput)
}

type GetDeviceInterfacesInterfaceTaggedVlanOutput struct{ *pulumi.OutputState }

func (GetDeviceInterfacesInterfaceTaggedVlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeviceInterfacesInterfaceTaggedVlan)(nil)).Elem()
}

func (o GetDeviceInterfacesInterfaceTaggedVlanOutput) ToGetDeviceInterfacesInterfaceTaggedVlanOutput() GetDeviceInterfacesInterfaceTaggedVlanOutput {
	return o
}

func (o GetDeviceInterfacesInterfaceTaggedVlanOutput) ToGetDeviceInterfacesInterfaceTaggedVlanOutputWithContext(ctx context.Context) GetDeviceInterfacesInterfaceTaggedVlanOutput {
	return o
}

func (o GetDeviceInterfacesInterfaceTaggedVlanOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetDeviceInterfacesInterfaceTaggedVlan) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetDeviceInterfacesInterfaceTaggedVlanOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeviceInterfacesInterfaceTaggedVlan) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDeviceInterfacesInterfaceTaggedVlanOutput) Vid() pulumi.IntOutput {
	return o.ApplyT(func(v GetDeviceInterfacesInterfaceTaggedVlan) int { return v.Vid }).(pulumi.IntOutput)
}

type GetDeviceInterfacesInterfaceTaggedVlanArrayOutput struct{ *pulumi.OutputState }

func (GetDeviceInterfacesInterfaceTaggedVlanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeviceInterfacesInterfaceTaggedVlan)(nil)).Elem()
}

func (o GetDeviceInterfacesInterfaceTaggedVlanArrayOutput) ToGetDeviceInterfacesInterfaceTaggedVlanArrayOutput() GetDeviceInterfacesInterfaceTaggedVlanArrayOutput {
	return o
}

func (o GetDeviceInterfacesInterfaceTaggedVlanArrayOutput) ToGetDeviceInterfacesInterfaceTaggedVlanArrayOutputWithContext(ctx context.Context) GetDeviceInterfacesInterfaceTaggedVlanArrayOutput {
	return o
}

func (o GetDeviceInterfacesInterfaceTaggedVlanArrayOutput) Index(i pulumi.IntInput) GetDeviceInterfacesInterfaceTaggedVlanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDeviceInterfacesInterfaceTaggedVlan {
		return vs[0].([]GetDeviceInterfacesInterfaceTaggedVlan)[vs[1].(int)]
	}).(GetDeviceInterfacesInterfaceTaggedVlanOutput)
}

type GetDeviceInterfacesInterfaceUntaggedVlan struct {
	Id   int    `pulumi:"id"`
	Name string `pulumi:"name"`
	Vid  int    `pulumi:"vid"`
}

// GetDeviceInterfacesInterfaceUntaggedVlanInput is an input type that accepts GetDeviceInterfacesInterfaceUntaggedVlanArgs and GetDeviceInterfacesInterfaceUntaggedVlanOutput values.
// You can construct a concrete instance of `GetDeviceInterfacesInterfaceUntaggedVlanInput` via:
//
//	GetDeviceInterfacesInterfaceUntaggedVlanArgs{...}
type GetDeviceInterfacesInterfaceUntaggedVlanInput interface {
	pulumi.Input

	ToGetDeviceInterfacesInterfaceUntaggedVlanOutput() GetDeviceInterfacesInterfaceUntaggedVlanOutput
	ToGetDeviceInterfacesInterfaceUntaggedVlanOutputWithContext(context.Context) GetDeviceInterfacesInterfaceUntaggedVlanOutput
}

type GetDeviceInterfacesInterfaceUntaggedVlanArgs struct {
	Id   pulumi.IntInput    `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
	Vid  pulumi.IntInput    `pulumi:"vid"`
}

func (GetDeviceInterfacesInterfaceUntaggedVlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeviceInterfacesInterfaceUntaggedVlan)(nil)).Elem()
}

func (i GetDeviceInterfacesInterfaceUntaggedVlanArgs) ToGetDeviceInterfacesInterfaceUntaggedVlanOutput() GetDeviceInterfacesInterfaceUntaggedVlanOutput {
	return i.ToGetDeviceInterfacesInterfaceUntaggedVlanOutputWithContext(context.Background())
}

func (i GetDeviceInterfacesInterfaceUntaggedVlanArgs) ToGetDeviceInterfacesInterfaceUntaggedVlanOutputWithContext(ctx context.Context) GetDeviceInterfacesInterfaceUntaggedVlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeviceInterfacesInterfaceUntaggedVlanOutput)
}

// GetDeviceInterfacesInterfaceUntaggedVlanArrayInput is an input type that accepts GetDeviceInterfacesInterfaceUntaggedVlanArray and GetDeviceInterfacesInterfaceUntaggedVlanArrayOutput values.
// You can construct a concrete instance of `GetDeviceInterfacesInterfaceUntaggedVlanArrayInput` via:
//
//	GetDeviceInterfacesInterfaceUntaggedVlanArray{ GetDeviceInterfacesInterfaceUntaggedVlanArgs{...} }
type GetDeviceInterfacesInterfaceUntaggedVlanArrayInput interface {
	pulumi.Input

	ToGetDeviceInterfacesInterfaceUntaggedVlanArrayOutput() GetDeviceInterfacesInterfaceUntaggedVlanArrayOutput
	ToGetDeviceInterfacesInterfaceUntaggedVlanArrayOutputWithContext(context.Context) GetDeviceInterfacesInterfaceUntaggedVlanArrayOutput
}

type GetDeviceInterfacesInterfaceUntaggedVlanArray []GetDeviceInterfacesInterfaceUntaggedVlanInput

func (GetDeviceInterfacesInterfaceUntaggedVlanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeviceInterfacesInterfaceUntaggedVlan)(nil)).Elem()
}

func (i GetDeviceInterfacesInterfaceUntaggedVlanArray) ToGetDeviceInterfacesInterfaceUntaggedVlanArrayOutput() GetDeviceInterfacesInterfaceUntaggedVlanArrayOutput {
	return i.ToGetDeviceInterfacesInterfaceUntaggedVlanArrayOutputWithContext(context.Background())
}

func (i GetDeviceInterfacesInterfaceUntaggedVlanArray) ToGetDeviceInterfacesInterfaceUntaggedVlanArrayOutputWithContext(ctx context.Context) GetDeviceInterfacesInterfaceUntaggedVlanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeviceInterfacesInterfaceUntaggedVlanArrayOutput)
}

type GetDeviceInterfacesInterfaceUntaggedVlanOutput struct{ *pulumi.OutputState }

func (GetDeviceInterfacesInterfaceUntaggedVlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeviceInterfacesInterfaceUntaggedVlan)(nil)).Elem()
}

func (o GetDeviceInterfacesInterfaceUntaggedVlanOutput) ToGetDeviceInterfacesInterfaceUntaggedVlanOutput() GetDeviceInterfacesInterfaceUntaggedVlanOutput {
	return o
}

func (o GetDeviceInterfacesInterfaceUntaggedVlanOutput) ToGetDeviceInterfacesInterfaceUntaggedVlanOutputWithContext(ctx context.Context) GetDeviceInterfacesInterfaceUntaggedVlanOutput {
	return o
}

func (o GetDeviceInterfacesInterfaceUntaggedVlanOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetDeviceInterfacesInterfaceUntaggedVlan) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetDeviceInterfacesInterfaceUntaggedVlanOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeviceInterfacesInterfaceUntaggedVlan) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDeviceInterfacesInterfaceUntaggedVlanOutput) Vid() pulumi.IntOutput {
	return o.ApplyT(func(v GetDeviceInterfacesInterfaceUntaggedVlan) int { return v.Vid }).(pulumi.IntOutput)
}

type GetDeviceInterfacesInterfaceUntaggedVlanArrayOutput struct{ *pulumi.OutputState }

func (GetDeviceInterfacesInterfaceUntaggedVlanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeviceInterfacesInterfaceUntaggedVlan)(nil)).Elem()
}

func (o GetDeviceInterfacesInterfaceUntaggedVlanArrayOutput) ToGetDeviceInterfacesInterfaceUntaggedVlanArrayOutput() GetDeviceInterfacesInterfaceUntaggedVlanArrayOutput {
	return o
}

func (o GetDeviceInterfacesInterfaceUntaggedVlanArrayOutput) ToGetDeviceInterfacesInterfaceUntaggedVlanArrayOutputWithContext(ctx context.Context) GetDeviceInterfacesInterfaceUntaggedVlanArrayOutput {
	return o
}

func (o GetDeviceInterfacesInterfaceUntaggedVlanArrayOutput) Index(i pulumi.IntInput) GetDeviceInterfacesInterfaceUntaggedVlanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDeviceInterfacesInterfaceUntaggedVlan {
		return vs[0].([]GetDeviceInterfacesInterfaceUntaggedVlan)[vs[1].(int)]
	}).(GetDeviceInterfacesInterfaceUntaggedVlanOutput)
}

type GetDevicesDevice struct {
	AssetTag         string            `pulumi:"assetTag"`
	ClusterId        int               `pulumi:"clusterId"`
	Comments         string            `pulumi:"comments"`
	ConfigContext    string            `pulumi:"configContext"`
	CustomFields     map[string]string `pulumi:"customFields"`
	Description      string            `pulumi:"description"`
	DeviceId         int               `pulumi:"deviceId"`
	DeviceTypeId     int               `pulumi:"deviceTypeId"`
	LocalContextData string            `pulumi:"localContextData"`
	LocationId       int               `pulumi:"locationId"`
	ManufacturerId   int               `pulumi:"manufacturerId"`
	Model            string            `pulumi:"model"`
	Name             string            `pulumi:"name"`
	OobIp            string            `pulumi:"oobIp"`
	PlatformId       int               `pulumi:"platformId"`
	PrimaryIpv4      string            `pulumi:"primaryIpv4"`
	PrimaryIpv6      string            `pulumi:"primaryIpv6"`
	RackFace         string            `pulumi:"rackFace"`
	RackId           int               `pulumi:"rackId"`
	RackPosition     float64           `pulumi:"rackPosition"`
	RoleId           int               `pulumi:"roleId"`
	Serial           string            `pulumi:"serial"`
	SiteId           int               `pulumi:"siteId"`
	Status           string            `pulumi:"status"`
	Tags             []string          `pulumi:"tags"`
	TenantId         int               `pulumi:"tenantId"`
}

// GetDevicesDeviceInput is an input type that accepts GetDevicesDeviceArgs and GetDevicesDeviceOutput values.
// You can construct a concrete instance of `GetDevicesDeviceInput` via:
//
//	GetDevicesDeviceArgs{...}
type GetDevicesDeviceInput interface {
	pulumi.Input

	ToGetDevicesDeviceOutput() GetDevicesDeviceOutput
	ToGetDevicesDeviceOutputWithContext(context.Context) GetDevicesDeviceOutput
}

type GetDevicesDeviceArgs struct {
	AssetTag         pulumi.StringInput      `pulumi:"assetTag"`
	ClusterId        pulumi.IntInput         `pulumi:"clusterId"`
	Comments         pulumi.StringInput      `pulumi:"comments"`
	ConfigContext    pulumi.StringInput      `pulumi:"configContext"`
	CustomFields     pulumi.StringMapInput   `pulumi:"customFields"`
	Description      pulumi.StringInput      `pulumi:"description"`
	DeviceId         pulumi.IntInput         `pulumi:"deviceId"`
	DeviceTypeId     pulumi.IntInput         `pulumi:"deviceTypeId"`
	LocalContextData pulumi.StringInput      `pulumi:"localContextData"`
	LocationId       pulumi.IntInput         `pulumi:"locationId"`
	ManufacturerId   pulumi.IntInput         `pulumi:"manufacturerId"`
	Model            pulumi.StringInput      `pulumi:"model"`
	Name             pulumi.StringInput      `pulumi:"name"`
	OobIp            pulumi.StringInput      `pulumi:"oobIp"`
	PlatformId       pulumi.IntInput         `pulumi:"platformId"`
	PrimaryIpv4      pulumi.StringInput      `pulumi:"primaryIpv4"`
	PrimaryIpv6      pulumi.StringInput      `pulumi:"primaryIpv6"`
	RackFace         pulumi.StringInput      `pulumi:"rackFace"`
	RackId           pulumi.IntInput         `pulumi:"rackId"`
	RackPosition     pulumi.Float64Input     `pulumi:"rackPosition"`
	RoleId           pulumi.IntInput         `pulumi:"roleId"`
	Serial           pulumi.StringInput      `pulumi:"serial"`
	SiteId           pulumi.IntInput         `pulumi:"siteId"`
	Status           pulumi.StringInput      `pulumi:"status"`
	Tags             pulumi.StringArrayInput `pulumi:"tags"`
	TenantId         pulumi.IntInput         `pulumi:"tenantId"`
}

func (GetDevicesDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesDevice)(nil)).Elem()
}

func (i GetDevicesDeviceArgs) ToGetDevicesDeviceOutput() GetDevicesDeviceOutput {
	return i.ToGetDevicesDeviceOutputWithContext(context.Background())
}

func (i GetDevicesDeviceArgs) ToGetDevicesDeviceOutputWithContext(ctx context.Context) GetDevicesDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesDeviceOutput)
}

// GetDevicesDeviceArrayInput is an input type that accepts GetDevicesDeviceArray and GetDevicesDeviceArrayOutput values.
// You can construct a concrete instance of `GetDevicesDeviceArrayInput` via:
//
//	GetDevicesDeviceArray{ GetDevicesDeviceArgs{...} }
type GetDevicesDeviceArrayInput interface {
	pulumi.Input

	ToGetDevicesDeviceArrayOutput() GetDevicesDeviceArrayOutput
	ToGetDevicesDeviceArrayOutputWithContext(context.Context) GetDevicesDeviceArrayOutput
}

type GetDevicesDeviceArray []GetDevicesDeviceInput

func (GetDevicesDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevicesDevice)(nil)).Elem()
}

func (i GetDevicesDeviceArray) ToGetDevicesDeviceArrayOutput() GetDevicesDeviceArrayOutput {
	return i.ToGetDevicesDeviceArrayOutputWithContext(context.Background())
}

func (i GetDevicesDeviceArray) ToGetDevicesDeviceArrayOutputWithContext(ctx context.Context) GetDevicesDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesDeviceArrayOutput)
}

type GetDevicesDeviceOutput struct{ *pulumi.OutputState }

func (GetDevicesDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesDevice)(nil)).Elem()
}

func (o GetDevicesDeviceOutput) ToGetDevicesDeviceOutput() GetDevicesDeviceOutput {
	return o
}

func (o GetDevicesDeviceOutput) ToGetDevicesDeviceOutputWithContext(ctx context.Context) GetDevicesDeviceOutput {
	return o
}

func (o GetDevicesDeviceOutput) AssetTag() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesDevice) string { return v.AssetTag }).(pulumi.StringOutput)
}

func (o GetDevicesDeviceOutput) ClusterId() pulumi.IntOutput {
	return o.ApplyT(func(v GetDevicesDevice) int { return v.ClusterId }).(pulumi.IntOutput)
}

func (o GetDevicesDeviceOutput) Comments() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesDevice) string { return v.Comments }).(pulumi.StringOutput)
}

func (o GetDevicesDeviceOutput) ConfigContext() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesDevice) string { return v.ConfigContext }).(pulumi.StringOutput)
}

func (o GetDevicesDeviceOutput) CustomFields() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetDevicesDevice) map[string]string { return v.CustomFields }).(pulumi.StringMapOutput)
}

func (o GetDevicesDeviceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesDevice) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetDevicesDeviceOutput) DeviceId() pulumi.IntOutput {
	return o.ApplyT(func(v GetDevicesDevice) int { return v.DeviceId }).(pulumi.IntOutput)
}

func (o GetDevicesDeviceOutput) DeviceTypeId() pulumi.IntOutput {
	return o.ApplyT(func(v GetDevicesDevice) int { return v.DeviceTypeId }).(pulumi.IntOutput)
}

func (o GetDevicesDeviceOutput) LocalContextData() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesDevice) string { return v.LocalContextData }).(pulumi.StringOutput)
}

func (o GetDevicesDeviceOutput) LocationId() pulumi.IntOutput {
	return o.ApplyT(func(v GetDevicesDevice) int { return v.LocationId }).(pulumi.IntOutput)
}

func (o GetDevicesDeviceOutput) ManufacturerId() pulumi.IntOutput {
	return o.ApplyT(func(v GetDevicesDevice) int { return v.ManufacturerId }).(pulumi.IntOutput)
}

func (o GetDevicesDeviceOutput) Model() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesDevice) string { return v.Model }).(pulumi.StringOutput)
}

func (o GetDevicesDeviceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesDevice) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDevicesDeviceOutput) OobIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesDevice) string { return v.OobIp }).(pulumi.StringOutput)
}

func (o GetDevicesDeviceOutput) PlatformId() pulumi.IntOutput {
	return o.ApplyT(func(v GetDevicesDevice) int { return v.PlatformId }).(pulumi.IntOutput)
}

func (o GetDevicesDeviceOutput) PrimaryIpv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesDevice) string { return v.PrimaryIpv4 }).(pulumi.StringOutput)
}

func (o GetDevicesDeviceOutput) PrimaryIpv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesDevice) string { return v.PrimaryIpv6 }).(pulumi.StringOutput)
}

func (o GetDevicesDeviceOutput) RackFace() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesDevice) string { return v.RackFace }).(pulumi.StringOutput)
}

func (o GetDevicesDeviceOutput) RackId() pulumi.IntOutput {
	return o.ApplyT(func(v GetDevicesDevice) int { return v.RackId }).(pulumi.IntOutput)
}

func (o GetDevicesDeviceOutput) RackPosition() pulumi.Float64Output {
	return o.ApplyT(func(v GetDevicesDevice) float64 { return v.RackPosition }).(pulumi.Float64Output)
}

func (o GetDevicesDeviceOutput) RoleId() pulumi.IntOutput {
	return o.ApplyT(func(v GetDevicesDevice) int { return v.RoleId }).(pulumi.IntOutput)
}

func (o GetDevicesDeviceOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesDevice) string { return v.Serial }).(pulumi.StringOutput)
}

func (o GetDevicesDeviceOutput) SiteId() pulumi.IntOutput {
	return o.ApplyT(func(v GetDevicesDevice) int { return v.SiteId }).(pulumi.IntOutput)
}

func (o GetDevicesDeviceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesDevice) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetDevicesDeviceOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDevicesDevice) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o GetDevicesDeviceOutput) TenantId() pulumi.IntOutput {
	return o.ApplyT(func(v GetDevicesDevice) int { return v.TenantId }).(pulumi.IntOutput)
}

type GetDevicesDeviceArrayOutput struct{ *pulumi.OutputState }

func (GetDevicesDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevicesDevice)(nil)).Elem()
}

func (o GetDevicesDeviceArrayOutput) ToGetDevicesDeviceArrayOutput() GetDevicesDeviceArrayOutput {
	return o
}

func (o GetDevicesDeviceArrayOutput) ToGetDevicesDeviceArrayOutputWithContext(ctx context.Context) GetDevicesDeviceArrayOutput {
	return o
}

func (o GetDevicesDeviceArrayOutput) Index(i pulumi.IntInput) GetDevicesDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDevicesDevice {
		return vs[0].([]GetDevicesDevice)[vs[1].(int)]
	}).(GetDevicesDeviceOutput)
}

type GetDevicesFilter struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// GetDevicesFilterInput is an input type that accepts GetDevicesFilterArgs and GetDevicesFilterOutput values.
// You can construct a concrete instance of `GetDevicesFilterInput` via:
//
//	GetDevicesFilterArgs{...}
type GetDevicesFilterInput interface {
	pulumi.Input

	ToGetDevicesFilterOutput() GetDevicesFilterOutput
	ToGetDevicesFilterOutputWithContext(context.Context) GetDevicesFilterOutput
}

type GetDevicesFilterArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetDevicesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesFilter)(nil)).Elem()
}

func (i GetDevicesFilterArgs) ToGetDevicesFilterOutput() GetDevicesFilterOutput {
	return i.ToGetDevicesFilterOutputWithContext(context.Background())
}

func (i GetDevicesFilterArgs) ToGetDevicesFilterOutputWithContext(ctx context.Context) GetDevicesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesFilterOutput)
}

// GetDevicesFilterArrayInput is an input type that accepts GetDevicesFilterArray and GetDevicesFilterArrayOutput values.
// You can construct a concrete instance of `GetDevicesFilterArrayInput` via:
//
//	GetDevicesFilterArray{ GetDevicesFilterArgs{...} }
type GetDevicesFilterArrayInput interface {
	pulumi.Input

	ToGetDevicesFilterArrayOutput() GetDevicesFilterArrayOutput
	ToGetDevicesFilterArrayOutputWithContext(context.Context) GetDevicesFilterArrayOutput
}

type GetDevicesFilterArray []GetDevicesFilterInput

func (GetDevicesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevicesFilter)(nil)).Elem()
}

func (i GetDevicesFilterArray) ToGetDevicesFilterArrayOutput() GetDevicesFilterArrayOutput {
	return i.ToGetDevicesFilterArrayOutputWithContext(context.Background())
}

func (i GetDevicesFilterArray) ToGetDevicesFilterArrayOutputWithContext(ctx context.Context) GetDevicesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicesFilterArrayOutput)
}

type GetDevicesFilterOutput struct{ *pulumi.OutputState }

func (GetDevicesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicesFilter)(nil)).Elem()
}

func (o GetDevicesFilterOutput) ToGetDevicesFilterOutput() GetDevicesFilterOutput {
	return o
}

func (o GetDevicesFilterOutput) ToGetDevicesFilterOutputWithContext(ctx context.Context) GetDevicesFilterOutput {
	return o
}

func (o GetDevicesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDevicesFilterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicesFilter) string { return v.Value }).(pulumi.StringOutput)
}

type GetDevicesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetDevicesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevicesFilter)(nil)).Elem()
}

func (o GetDevicesFilterArrayOutput) ToGetDevicesFilterArrayOutput() GetDevicesFilterArrayOutput {
	return o
}

func (o GetDevicesFilterArrayOutput) ToGetDevicesFilterArrayOutputWithContext(ctx context.Context) GetDevicesFilterArrayOutput {
	return o
}

func (o GetDevicesFilterArrayOutput) Index(i pulumi.IntInput) GetDevicesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDevicesFilter {
		return vs[0].([]GetDevicesFilter)[vs[1].(int)]
	}).(GetDevicesFilterOutput)
}

type GetLocationsFilter struct {
	// The name of the field to filter on. Supported fields are: .
	Name string `pulumi:"name"`
	// The value to pass to the specified filter.
	Value string `pulumi:"value"`
}

// GetLocationsFilterInput is an input type that accepts GetLocationsFilterArgs and GetLocationsFilterOutput values.
// You can construct a concrete instance of `GetLocationsFilterInput` via:
//
//	GetLocationsFilterArgs{...}
type GetLocationsFilterInput interface {
	pulumi.Input

	ToGetLocationsFilterOutput() GetLocationsFilterOutput
	ToGetLocationsFilterOutputWithContext(context.Context) GetLocationsFilterOutput
}

type GetLocationsFilterArgs struct {
	// The name of the field to filter on. Supported fields are: .
	Name pulumi.StringInput `pulumi:"name"`
	// The value to pass to the specified filter.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetLocationsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationsFilter)(nil)).Elem()
}

func (i GetLocationsFilterArgs) ToGetLocationsFilterOutput() GetLocationsFilterOutput {
	return i.ToGetLocationsFilterOutputWithContext(context.Background())
}

func (i GetLocationsFilterArgs) ToGetLocationsFilterOutputWithContext(ctx context.Context) GetLocationsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationsFilterOutput)
}

// GetLocationsFilterArrayInput is an input type that accepts GetLocationsFilterArray and GetLocationsFilterArrayOutput values.
// You can construct a concrete instance of `GetLocationsFilterArrayInput` via:
//
//	GetLocationsFilterArray{ GetLocationsFilterArgs{...} }
type GetLocationsFilterArrayInput interface {
	pulumi.Input

	ToGetLocationsFilterArrayOutput() GetLocationsFilterArrayOutput
	ToGetLocationsFilterArrayOutputWithContext(context.Context) GetLocationsFilterArrayOutput
}

type GetLocationsFilterArray []GetLocationsFilterInput

func (GetLocationsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationsFilter)(nil)).Elem()
}

func (i GetLocationsFilterArray) ToGetLocationsFilterArrayOutput() GetLocationsFilterArrayOutput {
	return i.ToGetLocationsFilterArrayOutputWithContext(context.Background())
}

func (i GetLocationsFilterArray) ToGetLocationsFilterArrayOutputWithContext(ctx context.Context) GetLocationsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationsFilterArrayOutput)
}

type GetLocationsFilterOutput struct{ *pulumi.OutputState }

func (GetLocationsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationsFilter)(nil)).Elem()
}

func (o GetLocationsFilterOutput) ToGetLocationsFilterOutput() GetLocationsFilterOutput {
	return o
}

func (o GetLocationsFilterOutput) ToGetLocationsFilterOutputWithContext(ctx context.Context) GetLocationsFilterOutput {
	return o
}

// The name of the field to filter on. Supported fields are: .
func (o GetLocationsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationsFilter) string { return v.Name }).(pulumi.StringOutput)
}

// The value to pass to the specified filter.
func (o GetLocationsFilterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationsFilter) string { return v.Value }).(pulumi.StringOutput)
}

type GetLocationsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetLocationsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationsFilter)(nil)).Elem()
}

func (o GetLocationsFilterArrayOutput) ToGetLocationsFilterArrayOutput() GetLocationsFilterArrayOutput {
	return o
}

func (o GetLocationsFilterArrayOutput) ToGetLocationsFilterArrayOutputWithContext(ctx context.Context) GetLocationsFilterArrayOutput {
	return o
}

func (o GetLocationsFilterArrayOutput) Index(i pulumi.IntInput) GetLocationsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLocationsFilter {
		return vs[0].([]GetLocationsFilter)[vs[1].(int)]
	}).(GetLocationsFilterOutput)
}

type GetLocationsLocation struct {
	Description string  `pulumi:"description"`
	Facility    string  `pulumi:"facility"`
	Id          string  `pulumi:"id"`
	Name        *string `pulumi:"name"`
	ParentId    int     `pulumi:"parentId"`
	SiteId      int     `pulumi:"siteId"`
	Slug        *string `pulumi:"slug"`
	Status      string  `pulumi:"status"`
	TenantId    int     `pulumi:"tenantId"`
}

// GetLocationsLocationInput is an input type that accepts GetLocationsLocationArgs and GetLocationsLocationOutput values.
// You can construct a concrete instance of `GetLocationsLocationInput` via:
//
//	GetLocationsLocationArgs{...}
type GetLocationsLocationInput interface {
	pulumi.Input

	ToGetLocationsLocationOutput() GetLocationsLocationOutput
	ToGetLocationsLocationOutputWithContext(context.Context) GetLocationsLocationOutput
}

type GetLocationsLocationArgs struct {
	Description pulumi.StringInput    `pulumi:"description"`
	Facility    pulumi.StringInput    `pulumi:"facility"`
	Id          pulumi.StringInput    `pulumi:"id"`
	Name        pulumi.StringPtrInput `pulumi:"name"`
	ParentId    pulumi.IntInput       `pulumi:"parentId"`
	SiteId      pulumi.IntInput       `pulumi:"siteId"`
	Slug        pulumi.StringPtrInput `pulumi:"slug"`
	Status      pulumi.StringInput    `pulumi:"status"`
	TenantId    pulumi.IntInput       `pulumi:"tenantId"`
}

func (GetLocationsLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationsLocation)(nil)).Elem()
}

func (i GetLocationsLocationArgs) ToGetLocationsLocationOutput() GetLocationsLocationOutput {
	return i.ToGetLocationsLocationOutputWithContext(context.Background())
}

func (i GetLocationsLocationArgs) ToGetLocationsLocationOutputWithContext(ctx context.Context) GetLocationsLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationsLocationOutput)
}

// GetLocationsLocationArrayInput is an input type that accepts GetLocationsLocationArray and GetLocationsLocationArrayOutput values.
// You can construct a concrete instance of `GetLocationsLocationArrayInput` via:
//
//	GetLocationsLocationArray{ GetLocationsLocationArgs{...} }
type GetLocationsLocationArrayInput interface {
	pulumi.Input

	ToGetLocationsLocationArrayOutput() GetLocationsLocationArrayOutput
	ToGetLocationsLocationArrayOutputWithContext(context.Context) GetLocationsLocationArrayOutput
}

type GetLocationsLocationArray []GetLocationsLocationInput

func (GetLocationsLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationsLocation)(nil)).Elem()
}

func (i GetLocationsLocationArray) ToGetLocationsLocationArrayOutput() GetLocationsLocationArrayOutput {
	return i.ToGetLocationsLocationArrayOutputWithContext(context.Background())
}

func (i GetLocationsLocationArray) ToGetLocationsLocationArrayOutputWithContext(ctx context.Context) GetLocationsLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocationsLocationArrayOutput)
}

type GetLocationsLocationOutput struct{ *pulumi.OutputState }

func (GetLocationsLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationsLocation)(nil)).Elem()
}

func (o GetLocationsLocationOutput) ToGetLocationsLocationOutput() GetLocationsLocationOutput {
	return o
}

func (o GetLocationsLocationOutput) ToGetLocationsLocationOutputWithContext(ctx context.Context) GetLocationsLocationOutput {
	return o
}

func (o GetLocationsLocationOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationsLocation) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetLocationsLocationOutput) Facility() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationsLocation) string { return v.Facility }).(pulumi.StringOutput)
}

func (o GetLocationsLocationOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationsLocation) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetLocationsLocationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLocationsLocation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetLocationsLocationOutput) ParentId() pulumi.IntOutput {
	return o.ApplyT(func(v GetLocationsLocation) int { return v.ParentId }).(pulumi.IntOutput)
}

func (o GetLocationsLocationOutput) SiteId() pulumi.IntOutput {
	return o.ApplyT(func(v GetLocationsLocation) int { return v.SiteId }).(pulumi.IntOutput)
}

func (o GetLocationsLocationOutput) Slug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLocationsLocation) *string { return v.Slug }).(pulumi.StringPtrOutput)
}

func (o GetLocationsLocationOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationsLocation) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetLocationsLocationOutput) TenantId() pulumi.IntOutput {
	return o.ApplyT(func(v GetLocationsLocation) int { return v.TenantId }).(pulumi.IntOutput)
}

type GetLocationsLocationArrayOutput struct{ *pulumi.OutputState }

func (GetLocationsLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocationsLocation)(nil)).Elem()
}

func (o GetLocationsLocationArrayOutput) ToGetLocationsLocationArrayOutput() GetLocationsLocationArrayOutput {
	return o
}

func (o GetLocationsLocationArrayOutput) ToGetLocationsLocationArrayOutputWithContext(ctx context.Context) GetLocationsLocationArrayOutput {
	return o
}

func (o GetLocationsLocationArrayOutput) Index(i pulumi.IntInput) GetLocationsLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLocationsLocation {
		return vs[0].([]GetLocationsLocation)[vs[1].(int)]
	}).(GetLocationsLocationOutput)
}

type GetRacksFilter struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// GetRacksFilterInput is an input type that accepts GetRacksFilterArgs and GetRacksFilterOutput values.
// You can construct a concrete instance of `GetRacksFilterInput` via:
//
//	GetRacksFilterArgs{...}
type GetRacksFilterInput interface {
	pulumi.Input

	ToGetRacksFilterOutput() GetRacksFilterOutput
	ToGetRacksFilterOutputWithContext(context.Context) GetRacksFilterOutput
}

type GetRacksFilterArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetRacksFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRacksFilter)(nil)).Elem()
}

func (i GetRacksFilterArgs) ToGetRacksFilterOutput() GetRacksFilterOutput {
	return i.ToGetRacksFilterOutputWithContext(context.Background())
}

func (i GetRacksFilterArgs) ToGetRacksFilterOutputWithContext(ctx context.Context) GetRacksFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRacksFilterOutput)
}

// GetRacksFilterArrayInput is an input type that accepts GetRacksFilterArray and GetRacksFilterArrayOutput values.
// You can construct a concrete instance of `GetRacksFilterArrayInput` via:
//
//	GetRacksFilterArray{ GetRacksFilterArgs{...} }
type GetRacksFilterArrayInput interface {
	pulumi.Input

	ToGetRacksFilterArrayOutput() GetRacksFilterArrayOutput
	ToGetRacksFilterArrayOutputWithContext(context.Context) GetRacksFilterArrayOutput
}

type GetRacksFilterArray []GetRacksFilterInput

func (GetRacksFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRacksFilter)(nil)).Elem()
}

func (i GetRacksFilterArray) ToGetRacksFilterArrayOutput() GetRacksFilterArrayOutput {
	return i.ToGetRacksFilterArrayOutputWithContext(context.Background())
}

func (i GetRacksFilterArray) ToGetRacksFilterArrayOutputWithContext(ctx context.Context) GetRacksFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRacksFilterArrayOutput)
}

type GetRacksFilterOutput struct{ *pulumi.OutputState }

func (GetRacksFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRacksFilter)(nil)).Elem()
}

func (o GetRacksFilterOutput) ToGetRacksFilterOutput() GetRacksFilterOutput {
	return o
}

func (o GetRacksFilterOutput) ToGetRacksFilterOutputWithContext(ctx context.Context) GetRacksFilterOutput {
	return o
}

func (o GetRacksFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRacksFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetRacksFilterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetRacksFilter) string { return v.Value }).(pulumi.StringOutput)
}

type GetRacksFilterArrayOutput struct{ *pulumi.OutputState }

func (GetRacksFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRacksFilter)(nil)).Elem()
}

func (o GetRacksFilterArrayOutput) ToGetRacksFilterArrayOutput() GetRacksFilterArrayOutput {
	return o
}

func (o GetRacksFilterArrayOutput) ToGetRacksFilterArrayOutputWithContext(ctx context.Context) GetRacksFilterArrayOutput {
	return o
}

func (o GetRacksFilterArrayOutput) Index(i pulumi.IntInput) GetRacksFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRacksFilter {
		return vs[0].([]GetRacksFilter)[vs[1].(int)]
	}).(GetRacksFilterOutput)
}

type GetRacksRack struct {
	AssetTag      string            `pulumi:"assetTag"`
	Comments      string            `pulumi:"comments"`
	CustomFields  map[string]string `pulumi:"customFields"`
	DescUnits     bool              `pulumi:"descUnits"`
	Description   string            `pulumi:"description"`
	FacilityId    string            `pulumi:"facilityId"`
	Id            int               `pulumi:"id"`
	LocationId    int               `pulumi:"locationId"`
	MaxWeight     int               `pulumi:"maxWeight"`
	MountingDepth int               `pulumi:"mountingDepth"`
	Name          string            `pulumi:"name"`
	OuterDepth    int               `pulumi:"outerDepth"`
	OuterUnit     string            `pulumi:"outerUnit"`
	OuterWidth    int               `pulumi:"outerWidth"`
	RoleId        int               `pulumi:"roleId"`
	Serial        string            `pulumi:"serial"`
	SiteId        int               `pulumi:"siteId"`
	Status        string            `pulumi:"status"`
	Tags          []string          `pulumi:"tags"`
	TenantId      int               `pulumi:"tenantId"`
	TypeId        int               `pulumi:"typeId"`
	UHeight       int               `pulumi:"uHeight"`
	Weight        float64           `pulumi:"weight"`
	WeightUnit    string            `pulumi:"weightUnit"`
	Width         int               `pulumi:"width"`
}

// GetRacksRackInput is an input type that accepts GetRacksRackArgs and GetRacksRackOutput values.
// You can construct a concrete instance of `GetRacksRackInput` via:
//
//	GetRacksRackArgs{...}
type GetRacksRackInput interface {
	pulumi.Input

	ToGetRacksRackOutput() GetRacksRackOutput
	ToGetRacksRackOutputWithContext(context.Context) GetRacksRackOutput
}

type GetRacksRackArgs struct {
	AssetTag      pulumi.StringInput      `pulumi:"assetTag"`
	Comments      pulumi.StringInput      `pulumi:"comments"`
	CustomFields  pulumi.StringMapInput   `pulumi:"customFields"`
	DescUnits     pulumi.BoolInput        `pulumi:"descUnits"`
	Description   pulumi.StringInput      `pulumi:"description"`
	FacilityId    pulumi.StringInput      `pulumi:"facilityId"`
	Id            pulumi.IntInput         `pulumi:"id"`
	LocationId    pulumi.IntInput         `pulumi:"locationId"`
	MaxWeight     pulumi.IntInput         `pulumi:"maxWeight"`
	MountingDepth pulumi.IntInput         `pulumi:"mountingDepth"`
	Name          pulumi.StringInput      `pulumi:"name"`
	OuterDepth    pulumi.IntInput         `pulumi:"outerDepth"`
	OuterUnit     pulumi.StringInput      `pulumi:"outerUnit"`
	OuterWidth    pulumi.IntInput         `pulumi:"outerWidth"`
	RoleId        pulumi.IntInput         `pulumi:"roleId"`
	Serial        pulumi.StringInput      `pulumi:"serial"`
	SiteId        pulumi.IntInput         `pulumi:"siteId"`
	Status        pulumi.StringInput      `pulumi:"status"`
	Tags          pulumi.StringArrayInput `pulumi:"tags"`
	TenantId      pulumi.IntInput         `pulumi:"tenantId"`
	TypeId        pulumi.IntInput         `pulumi:"typeId"`
	UHeight       pulumi.IntInput         `pulumi:"uHeight"`
	Weight        pulumi.Float64Input     `pulumi:"weight"`
	WeightUnit    pulumi.StringInput      `pulumi:"weightUnit"`
	Width         pulumi.IntInput         `pulumi:"width"`
}

func (GetRacksRackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRacksRack)(nil)).Elem()
}

func (i GetRacksRackArgs) ToGetRacksRackOutput() GetRacksRackOutput {
	return i.ToGetRacksRackOutputWithContext(context.Background())
}

func (i GetRacksRackArgs) ToGetRacksRackOutputWithContext(ctx context.Context) GetRacksRackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRacksRackOutput)
}

// GetRacksRackArrayInput is an input type that accepts GetRacksRackArray and GetRacksRackArrayOutput values.
// You can construct a concrete instance of `GetRacksRackArrayInput` via:
//
//	GetRacksRackArray{ GetRacksRackArgs{...} }
type GetRacksRackArrayInput interface {
	pulumi.Input

	ToGetRacksRackArrayOutput() GetRacksRackArrayOutput
	ToGetRacksRackArrayOutputWithContext(context.Context) GetRacksRackArrayOutput
}

type GetRacksRackArray []GetRacksRackInput

func (GetRacksRackArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRacksRack)(nil)).Elem()
}

func (i GetRacksRackArray) ToGetRacksRackArrayOutput() GetRacksRackArrayOutput {
	return i.ToGetRacksRackArrayOutputWithContext(context.Background())
}

func (i GetRacksRackArray) ToGetRacksRackArrayOutputWithContext(ctx context.Context) GetRacksRackArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRacksRackArrayOutput)
}

type GetRacksRackOutput struct{ *pulumi.OutputState }

func (GetRacksRackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRacksRack)(nil)).Elem()
}

func (o GetRacksRackOutput) ToGetRacksRackOutput() GetRacksRackOutput {
	return o
}

func (o GetRacksRackOutput) ToGetRacksRackOutputWithContext(ctx context.Context) GetRacksRackOutput {
	return o
}

func (o GetRacksRackOutput) AssetTag() pulumi.StringOutput {
	return o.ApplyT(func(v GetRacksRack) string { return v.AssetTag }).(pulumi.StringOutput)
}

func (o GetRacksRackOutput) Comments() pulumi.StringOutput {
	return o.ApplyT(func(v GetRacksRack) string { return v.Comments }).(pulumi.StringOutput)
}

func (o GetRacksRackOutput) CustomFields() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetRacksRack) map[string]string { return v.CustomFields }).(pulumi.StringMapOutput)
}

func (o GetRacksRackOutput) DescUnits() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRacksRack) bool { return v.DescUnits }).(pulumi.BoolOutput)
}

func (o GetRacksRackOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetRacksRack) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetRacksRackOutput) FacilityId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRacksRack) string { return v.FacilityId }).(pulumi.StringOutput)
}

func (o GetRacksRackOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRacksRack) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetRacksRackOutput) LocationId() pulumi.IntOutput {
	return o.ApplyT(func(v GetRacksRack) int { return v.LocationId }).(pulumi.IntOutput)
}

func (o GetRacksRackOutput) MaxWeight() pulumi.IntOutput {
	return o.ApplyT(func(v GetRacksRack) int { return v.MaxWeight }).(pulumi.IntOutput)
}

func (o GetRacksRackOutput) MountingDepth() pulumi.IntOutput {
	return o.ApplyT(func(v GetRacksRack) int { return v.MountingDepth }).(pulumi.IntOutput)
}

func (o GetRacksRackOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRacksRack) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetRacksRackOutput) OuterDepth() pulumi.IntOutput {
	return o.ApplyT(func(v GetRacksRack) int { return v.OuterDepth }).(pulumi.IntOutput)
}

func (o GetRacksRackOutput) OuterUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetRacksRack) string { return v.OuterUnit }).(pulumi.StringOutput)
}

func (o GetRacksRackOutput) OuterWidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetRacksRack) int { return v.OuterWidth }).(pulumi.IntOutput)
}

func (o GetRacksRackOutput) RoleId() pulumi.IntOutput {
	return o.ApplyT(func(v GetRacksRack) int { return v.RoleId }).(pulumi.IntOutput)
}

func (o GetRacksRackOutput) Serial() pulumi.StringOutput {
	return o.ApplyT(func(v GetRacksRack) string { return v.Serial }).(pulumi.StringOutput)
}

func (o GetRacksRackOutput) SiteId() pulumi.IntOutput {
	return o.ApplyT(func(v GetRacksRack) int { return v.SiteId }).(pulumi.IntOutput)
}

func (o GetRacksRackOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRacksRack) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetRacksRackOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRacksRack) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o GetRacksRackOutput) TenantId() pulumi.IntOutput {
	return o.ApplyT(func(v GetRacksRack) int { return v.TenantId }).(pulumi.IntOutput)
}

func (o GetRacksRackOutput) TypeId() pulumi.IntOutput {
	return o.ApplyT(func(v GetRacksRack) int { return v.TypeId }).(pulumi.IntOutput)
}

func (o GetRacksRackOutput) UHeight() pulumi.IntOutput {
	return o.ApplyT(func(v GetRacksRack) int { return v.UHeight }).(pulumi.IntOutput)
}

func (o GetRacksRackOutput) Weight() pulumi.Float64Output {
	return o.ApplyT(func(v GetRacksRack) float64 { return v.Weight }).(pulumi.Float64Output)
}

func (o GetRacksRackOutput) WeightUnit() pulumi.StringOutput {
	return o.ApplyT(func(v GetRacksRack) string { return v.WeightUnit }).(pulumi.StringOutput)
}

func (o GetRacksRackOutput) Width() pulumi.IntOutput {
	return o.ApplyT(func(v GetRacksRack) int { return v.Width }).(pulumi.IntOutput)
}

type GetRacksRackArrayOutput struct{ *pulumi.OutputState }

func (GetRacksRackArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRacksRack)(nil)).Elem()
}

func (o GetRacksRackArrayOutput) ToGetRacksRackArrayOutput() GetRacksRackArrayOutput {
	return o
}

func (o GetRacksRackArrayOutput) ToGetRacksRackArrayOutputWithContext(ctx context.Context) GetRacksRackArrayOutput {
	return o
}

func (o GetRacksRackArrayOutput) Index(i pulumi.IntInput) GetRacksRackOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRacksRack {
		return vs[0].([]GetRacksRack)[vs[1].(int)]
	}).(GetRacksRackOutput)
}

type GetRegionFilter struct {
	// The ID of this resource.
	Id   *int    `pulumi:"id"`
	Name *string `pulumi:"name"`
	Slug *string `pulumi:"slug"`
}

// GetRegionFilterInput is an input type that accepts GetRegionFilterArgs and GetRegionFilterOutput values.
// You can construct a concrete instance of `GetRegionFilterInput` via:
//
//	GetRegionFilterArgs{...}
type GetRegionFilterInput interface {
	pulumi.Input

	ToGetRegionFilterOutput() GetRegionFilterOutput
	ToGetRegionFilterOutputWithContext(context.Context) GetRegionFilterOutput
}

type GetRegionFilterArgs struct {
	// The ID of this resource.
	Id   pulumi.IntPtrInput    `pulumi:"id"`
	Name pulumi.StringPtrInput `pulumi:"name"`
	Slug pulumi.StringPtrInput `pulumi:"slug"`
}

func (GetRegionFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionFilter)(nil)).Elem()
}

func (i GetRegionFilterArgs) ToGetRegionFilterOutput() GetRegionFilterOutput {
	return i.ToGetRegionFilterOutputWithContext(context.Background())
}

func (i GetRegionFilterArgs) ToGetRegionFilterOutputWithContext(ctx context.Context) GetRegionFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionFilterOutput)
}

// GetRegionFilterArrayInput is an input type that accepts GetRegionFilterArray and GetRegionFilterArrayOutput values.
// You can construct a concrete instance of `GetRegionFilterArrayInput` via:
//
//	GetRegionFilterArray{ GetRegionFilterArgs{...} }
type GetRegionFilterArrayInput interface {
	pulumi.Input

	ToGetRegionFilterArrayOutput() GetRegionFilterArrayOutput
	ToGetRegionFilterArrayOutputWithContext(context.Context) GetRegionFilterArrayOutput
}

type GetRegionFilterArray []GetRegionFilterInput

func (GetRegionFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionFilter)(nil)).Elem()
}

func (i GetRegionFilterArray) ToGetRegionFilterArrayOutput() GetRegionFilterArrayOutput {
	return i.ToGetRegionFilterArrayOutputWithContext(context.Background())
}

func (i GetRegionFilterArray) ToGetRegionFilterArrayOutputWithContext(ctx context.Context) GetRegionFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionFilterArrayOutput)
}

type GetRegionFilterOutput struct{ *pulumi.OutputState }

func (GetRegionFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionFilter)(nil)).Elem()
}

func (o GetRegionFilterOutput) ToGetRegionFilterOutput() GetRegionFilterOutput {
	return o
}

func (o GetRegionFilterOutput) ToGetRegionFilterOutputWithContext(ctx context.Context) GetRegionFilterOutput {
	return o
}

// The ID of this resource.
func (o GetRegionFilterOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetRegionFilter) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o GetRegionFilterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRegionFilter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetRegionFilterOutput) Slug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRegionFilter) *string { return v.Slug }).(pulumi.StringPtrOutput)
}

type GetRegionFilterArrayOutput struct{ *pulumi.OutputState }

func (GetRegionFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionFilter)(nil)).Elem()
}

func (o GetRegionFilterArrayOutput) ToGetRegionFilterArrayOutput() GetRegionFilterArrayOutput {
	return o
}

func (o GetRegionFilterArrayOutput) ToGetRegionFilterArrayOutputWithContext(ctx context.Context) GetRegionFilterArrayOutput {
	return o
}

func (o GetRegionFilterArrayOutput) Index(i pulumi.IntInput) GetRegionFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRegionFilter {
		return vs[0].([]GetRegionFilter)[vs[1].(int)]
	}).(GetRegionFilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CableATerminationInput)(nil)).Elem(), CableATerminationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CableATerminationArrayInput)(nil)).Elem(), CableATerminationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CableBTerminationInput)(nil)).Elem(), CableBTerminationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CableBTerminationArrayInput)(nil)).Elem(), CableBTerminationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceInterfaceMacAddressInput)(nil)).Elem(), DeviceInterfaceMacAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceInterfaceMacAddressArrayInput)(nil)).Elem(), DeviceInterfaceMacAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeviceInterfacesFilterInput)(nil)).Elem(), GetDeviceInterfacesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeviceInterfacesFilterArrayInput)(nil)).Elem(), GetDeviceInterfacesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeviceInterfacesInterfaceInput)(nil)).Elem(), GetDeviceInterfacesInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeviceInterfacesInterfaceArrayInput)(nil)).Elem(), GetDeviceInterfacesInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeviceInterfacesInterfaceMacAddressInput)(nil)).Elem(), GetDeviceInterfacesInterfaceMacAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeviceInterfacesInterfaceMacAddressArrayInput)(nil)).Elem(), GetDeviceInterfacesInterfaceMacAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeviceInterfacesInterfaceTaggedVlanInput)(nil)).Elem(), GetDeviceInterfacesInterfaceTaggedVlanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeviceInterfacesInterfaceTaggedVlanArrayInput)(nil)).Elem(), GetDeviceInterfacesInterfaceTaggedVlanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeviceInterfacesInterfaceUntaggedVlanInput)(nil)).Elem(), GetDeviceInterfacesInterfaceUntaggedVlanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeviceInterfacesInterfaceUntaggedVlanArrayInput)(nil)).Elem(), GetDeviceInterfacesInterfaceUntaggedVlanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesDeviceInput)(nil)).Elem(), GetDevicesDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesDeviceArrayInput)(nil)).Elem(), GetDevicesDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesFilterInput)(nil)).Elem(), GetDevicesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicesFilterArrayInput)(nil)).Elem(), GetDevicesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationsFilterInput)(nil)).Elem(), GetLocationsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationsFilterArrayInput)(nil)).Elem(), GetLocationsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationsLocationInput)(nil)).Elem(), GetLocationsLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLocationsLocationArrayInput)(nil)).Elem(), GetLocationsLocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRacksFilterInput)(nil)).Elem(), GetRacksFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRacksFilterArrayInput)(nil)).Elem(), GetRacksFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRacksRackInput)(nil)).Elem(), GetRacksRackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRacksRackArrayInput)(nil)).Elem(), GetRacksRackArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionFilterInput)(nil)).Elem(), GetRegionFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionFilterArrayInput)(nil)).Elem(), GetRegionFilterArray{})
	pulumi.RegisterOutputType(CableATerminationOutput{})
	pulumi.RegisterOutputType(CableATerminationArrayOutput{})
	pulumi.RegisterOutputType(CableBTerminationOutput{})
	pulumi.RegisterOutputType(CableBTerminationArrayOutput{})
	pulumi.RegisterOutputType(DeviceInterfaceMacAddressOutput{})
	pulumi.RegisterOutputType(DeviceInterfaceMacAddressArrayOutput{})
	pulumi.RegisterOutputType(GetDeviceInterfacesFilterOutput{})
	pulumi.RegisterOutputType(GetDeviceInterfacesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetDeviceInterfacesInterfaceOutput{})
	pulumi.RegisterOutputType(GetDeviceInterfacesInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetDeviceInterfacesInterfaceMacAddressOutput{})
	pulumi.RegisterOutputType(GetDeviceInterfacesInterfaceMacAddressArrayOutput{})
	pulumi.RegisterOutputType(GetDeviceInterfacesInterfaceTaggedVlanOutput{})
	pulumi.RegisterOutputType(GetDeviceInterfacesInterfaceTaggedVlanArrayOutput{})
	pulumi.RegisterOutputType(GetDeviceInterfacesInterfaceUntaggedVlanOutput{})
	pulumi.RegisterOutputType(GetDeviceInterfacesInterfaceUntaggedVlanArrayOutput{})
	pulumi.RegisterOutputType(GetDevicesDeviceOutput{})
	pulumi.RegisterOutputType(GetDevicesDeviceArrayOutput{})
	pulumi.RegisterOutputType(GetDevicesFilterOutput{})
	pulumi.RegisterOutputType(GetDevicesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetLocationsFilterOutput{})
	pulumi.RegisterOutputType(GetLocationsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetLocationsLocationOutput{})
	pulumi.RegisterOutputType(GetLocationsLocationArrayOutput{})
	pulumi.RegisterOutputType(GetRacksFilterOutput{})
	pulumi.RegisterOutputType(GetRacksFilterArrayOutput{})
	pulumi.RegisterOutputType(GetRacksRackOutput{})
	pulumi.RegisterOutputType(GetRacksRackArrayOutput{})
	pulumi.RegisterOutputType(GetRegionFilterOutput{})
	pulumi.RegisterOutputType(GetRegionFilterArrayOutput{})
}
