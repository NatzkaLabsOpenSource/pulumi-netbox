// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dcim

import (
	"context"
	"reflect"

	"github.com/NatzkaLabsOpenSource/pulumi-netbox/sdk/go/netbox/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetLocations(ctx *pulumi.Context, args *GetLocationsArgs, opts ...pulumi.InvokeOption) (*GetLocationsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetLocationsResult
	err := ctx.Invoke("netbox:dcim/getLocations:getLocations", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLocations.
type GetLocationsArgs struct {
	// A list of filter to apply to the API query when requesting locations.
	Filters []GetLocationsFilter `pulumi:"filters"`
	// The limit of objects to return from the API lookup. Defaults to `0`.
	Limit *int `pulumi:"limit"`
	// A list of tags to filter on.
	Tags []string `pulumi:"tags"`
}

// A collection of values returned by getLocations.
type GetLocationsResult struct {
	// A list of filter to apply to the API query when requesting locations.
	Filters []GetLocationsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The limit of objects to return from the API lookup. Defaults to `0`.
	Limit     *int                   `pulumi:"limit"`
	Locations []GetLocationsLocation `pulumi:"locations"`
	// A list of tags to filter on.
	Tags []string `pulumi:"tags"`
}

func GetLocationsOutput(ctx *pulumi.Context, args GetLocationsOutputArgs, opts ...pulumi.InvokeOption) GetLocationsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetLocationsResultOutput, error) {
			args := v.(GetLocationsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("netbox:dcim/getLocations:getLocations", args, GetLocationsResultOutput{}, options).(GetLocationsResultOutput), nil
		}).(GetLocationsResultOutput)
}

// A collection of arguments for invoking getLocations.
type GetLocationsOutputArgs struct {
	// A list of filter to apply to the API query when requesting locations.
	Filters GetLocationsFilterArrayInput `pulumi:"filters"`
	// The limit of objects to return from the API lookup. Defaults to `0`.
	Limit pulumi.IntPtrInput `pulumi:"limit"`
	// A list of tags to filter on.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetLocationsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationsArgs)(nil)).Elem()
}

// A collection of values returned by getLocations.
type GetLocationsResultOutput struct{ *pulumi.OutputState }

func (GetLocationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationsResult)(nil)).Elem()
}

func (o GetLocationsResultOutput) ToGetLocationsResultOutput() GetLocationsResultOutput {
	return o
}

func (o GetLocationsResultOutput) ToGetLocationsResultOutputWithContext(ctx context.Context) GetLocationsResultOutput {
	return o
}

// A list of filter to apply to the API query when requesting locations.
func (o GetLocationsResultOutput) Filters() GetLocationsFilterArrayOutput {
	return o.ApplyT(func(v GetLocationsResult) []GetLocationsFilter { return v.Filters }).(GetLocationsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetLocationsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The limit of objects to return from the API lookup. Defaults to `0`.
func (o GetLocationsResultOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetLocationsResult) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

func (o GetLocationsResultOutput) Locations() GetLocationsLocationArrayOutput {
	return o.ApplyT(func(v GetLocationsResult) []GetLocationsLocation { return v.Locations }).(GetLocationsLocationArrayOutput)
}

// A list of tags to filter on.
func (o GetLocationsResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLocationsResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLocationsResultOutput{})
}
