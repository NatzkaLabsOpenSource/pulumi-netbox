// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package netbox

import (
	"context"
	"reflect"

	"github.com/NatzkaLabsOpenSource/pulumi-netbox/sdk/go/netbox/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetIpRanges(ctx *pulumi.Context, args *GetIpRangesArgs, opts ...pulumi.InvokeOption) (*GetIpRangesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetIpRangesResult
	err := ctx.Invoke("netbox:index/getIpRanges:getIpRanges", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIpRanges.
type GetIpRangesArgs struct {
	Filters []GetIpRangesFilter `pulumi:"filters"`
	// Defaults to `1000`.
	Limit *int `pulumi:"limit"`
}

// A collection of values returned by getIpRanges.
type GetIpRangesResult struct {
	Filters []GetIpRangesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id       string               `pulumi:"id"`
	IpRanges []GetIpRangesIpRange `pulumi:"ipRanges"`
	// Defaults to `1000`.
	Limit *int `pulumi:"limit"`
}

func GetIpRangesOutput(ctx *pulumi.Context, args GetIpRangesOutputArgs, opts ...pulumi.InvokeOption) GetIpRangesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetIpRangesResultOutput, error) {
			args := v.(GetIpRangesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("netbox:index/getIpRanges:getIpRanges", args, GetIpRangesResultOutput{}, options).(GetIpRangesResultOutput), nil
		}).(GetIpRangesResultOutput)
}

// A collection of arguments for invoking getIpRanges.
type GetIpRangesOutputArgs struct {
	Filters GetIpRangesFilterArrayInput `pulumi:"filters"`
	// Defaults to `1000`.
	Limit pulumi.IntPtrInput `pulumi:"limit"`
}

func (GetIpRangesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpRangesArgs)(nil)).Elem()
}

// A collection of values returned by getIpRanges.
type GetIpRangesResultOutput struct{ *pulumi.OutputState }

func (GetIpRangesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpRangesResult)(nil)).Elem()
}

func (o GetIpRangesResultOutput) ToGetIpRangesResultOutput() GetIpRangesResultOutput {
	return o
}

func (o GetIpRangesResultOutput) ToGetIpRangesResultOutputWithContext(ctx context.Context) GetIpRangesResultOutput {
	return o
}

func (o GetIpRangesResultOutput) Filters() GetIpRangesFilterArrayOutput {
	return o.ApplyT(func(v GetIpRangesResult) []GetIpRangesFilter { return v.Filters }).(GetIpRangesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetIpRangesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpRangesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetIpRangesResultOutput) IpRanges() GetIpRangesIpRangeArrayOutput {
	return o.ApplyT(func(v GetIpRangesResult) []GetIpRangesIpRange { return v.IpRanges }).(GetIpRangesIpRangeArrayOutput)
}

// Defaults to `1000`.
func (o GetIpRangesResultOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetIpRangesResult) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIpRangesResultOutput{})
}
