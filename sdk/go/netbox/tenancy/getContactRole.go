// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tenancy

import (
	"context"
	"reflect"

	"github.com/NatzkaLabsOpenSource/pulumi-netbox/sdk/go/netbox/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupContactRole(ctx *pulumi.Context, args *LookupContactRoleArgs, opts ...pulumi.InvokeOption) (*LookupContactRoleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupContactRoleResult
	err := ctx.Invoke("netbox:tenancy/getContactRole:getContactRole", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getContactRole.
type LookupContactRoleArgs struct {
	// At least one of `name` or `slug` must be given.
	Name *string `pulumi:"name"`
	// At least one of `name` or `slug` must be given.
	Slug *string `pulumi:"slug"`
}

// A collection of values returned by getContactRole.
type LookupContactRoleResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// At least one of `name` or `slug` must be given.
	Name string `pulumi:"name"`
	// At least one of `name` or `slug` must be given.
	Slug string `pulumi:"slug"`
}

func LookupContactRoleOutput(ctx *pulumi.Context, args LookupContactRoleOutputArgs, opts ...pulumi.InvokeOption) LookupContactRoleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupContactRoleResult, error) {
			args := v.(LookupContactRoleArgs)
			r, err := LookupContactRole(ctx, &args, opts...)
			var s LookupContactRoleResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupContactRoleResultOutput)
}

// A collection of arguments for invoking getContactRole.
type LookupContactRoleOutputArgs struct {
	// At least one of `name` or `slug` must be given.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// At least one of `name` or `slug` must be given.
	Slug pulumi.StringPtrInput `pulumi:"slug"`
}

func (LookupContactRoleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupContactRoleArgs)(nil)).Elem()
}

// A collection of values returned by getContactRole.
type LookupContactRoleResultOutput struct{ *pulumi.OutputState }

func (LookupContactRoleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupContactRoleResult)(nil)).Elem()
}

func (o LookupContactRoleResultOutput) ToLookupContactRoleResultOutput() LookupContactRoleResultOutput {
	return o
}

func (o LookupContactRoleResultOutput) ToLookupContactRoleResultOutputWithContext(ctx context.Context) LookupContactRoleResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupContactRoleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContactRoleResult) string { return v.Id }).(pulumi.StringOutput)
}

// At least one of `name` or `slug` must be given.
func (o LookupContactRoleResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContactRoleResult) string { return v.Name }).(pulumi.StringOutput)
}

// At least one of `name` or `slug` must be given.
func (o LookupContactRoleResultOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContactRoleResult) string { return v.Slug }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupContactRoleResultOutput{})
}
