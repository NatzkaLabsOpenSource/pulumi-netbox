// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tenancy

import (
	"context"
	"reflect"

	"github.com/NatzkaLabsOpenSource/pulumi-netbox/sdk/go/netbox/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type GetTenantsFilter struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// GetTenantsFilterInput is an input type that accepts GetTenantsFilterArgs and GetTenantsFilterOutput values.
// You can construct a concrete instance of `GetTenantsFilterInput` via:
//
//	GetTenantsFilterArgs{...}
type GetTenantsFilterInput interface {
	pulumi.Input

	ToGetTenantsFilterOutput() GetTenantsFilterOutput
	ToGetTenantsFilterOutputWithContext(context.Context) GetTenantsFilterOutput
}

type GetTenantsFilterArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetTenantsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTenantsFilter)(nil)).Elem()
}

func (i GetTenantsFilterArgs) ToGetTenantsFilterOutput() GetTenantsFilterOutput {
	return i.ToGetTenantsFilterOutputWithContext(context.Background())
}

func (i GetTenantsFilterArgs) ToGetTenantsFilterOutputWithContext(ctx context.Context) GetTenantsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTenantsFilterOutput)
}

// GetTenantsFilterArrayInput is an input type that accepts GetTenantsFilterArray and GetTenantsFilterArrayOutput values.
// You can construct a concrete instance of `GetTenantsFilterArrayInput` via:
//
//	GetTenantsFilterArray{ GetTenantsFilterArgs{...} }
type GetTenantsFilterArrayInput interface {
	pulumi.Input

	ToGetTenantsFilterArrayOutput() GetTenantsFilterArrayOutput
	ToGetTenantsFilterArrayOutputWithContext(context.Context) GetTenantsFilterArrayOutput
}

type GetTenantsFilterArray []GetTenantsFilterInput

func (GetTenantsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTenantsFilter)(nil)).Elem()
}

func (i GetTenantsFilterArray) ToGetTenantsFilterArrayOutput() GetTenantsFilterArrayOutput {
	return i.ToGetTenantsFilterArrayOutputWithContext(context.Background())
}

func (i GetTenantsFilterArray) ToGetTenantsFilterArrayOutputWithContext(ctx context.Context) GetTenantsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTenantsFilterArrayOutput)
}

type GetTenantsFilterOutput struct{ *pulumi.OutputState }

func (GetTenantsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTenantsFilter)(nil)).Elem()
}

func (o GetTenantsFilterOutput) ToGetTenantsFilterOutput() GetTenantsFilterOutput {
	return o
}

func (o GetTenantsFilterOutput) ToGetTenantsFilterOutputWithContext(ctx context.Context) GetTenantsFilterOutput {
	return o
}

func (o GetTenantsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTenantsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetTenantsFilterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetTenantsFilter) string { return v.Value }).(pulumi.StringOutput)
}

type GetTenantsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetTenantsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTenantsFilter)(nil)).Elem()
}

func (o GetTenantsFilterArrayOutput) ToGetTenantsFilterArrayOutput() GetTenantsFilterArrayOutput {
	return o
}

func (o GetTenantsFilterArrayOutput) ToGetTenantsFilterArrayOutputWithContext(ctx context.Context) GetTenantsFilterArrayOutput {
	return o
}

func (o GetTenantsFilterArrayOutput) Index(i pulumi.IntInput) GetTenantsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTenantsFilter {
		return vs[0].([]GetTenantsFilter)[vs[1].(int)]
	}).(GetTenantsFilterOutput)
}

type GetTenantsTenant struct {
	CircuitCount   int                           `pulumi:"circuitCount"`
	ClusterCount   int                           `pulumi:"clusterCount"`
	Comments       string                        `pulumi:"comments"`
	Created        string                        `pulumi:"created"`
	CustomFields   map[string]interface{}        `pulumi:"customFields"`
	Description    string                        `pulumi:"description"`
	DeviceCount    int                           `pulumi:"deviceCount"`
	Id             int                           `pulumi:"id"`
	IpAddressCount int                           `pulumi:"ipAddressCount"`
	LastUpdated    string                        `pulumi:"lastUpdated"`
	Name           string                        `pulumi:"name"`
	PrefixCount    int                           `pulumi:"prefixCount"`
	RackCount      int                           `pulumi:"rackCount"`
	SiteCount      int                           `pulumi:"siteCount"`
	Slug           string                        `pulumi:"slug"`
	TenantGroups   []GetTenantsTenantTenantGroup `pulumi:"tenantGroups"`
	VlanCount      int                           `pulumi:"vlanCount"`
	VmCount        int                           `pulumi:"vmCount"`
	VrfCount       int                           `pulumi:"vrfCount"`
}

// GetTenantsTenantInput is an input type that accepts GetTenantsTenantArgs and GetTenantsTenantOutput values.
// You can construct a concrete instance of `GetTenantsTenantInput` via:
//
//	GetTenantsTenantArgs{...}
type GetTenantsTenantInput interface {
	pulumi.Input

	ToGetTenantsTenantOutput() GetTenantsTenantOutput
	ToGetTenantsTenantOutputWithContext(context.Context) GetTenantsTenantOutput
}

type GetTenantsTenantArgs struct {
	CircuitCount   pulumi.IntInput                       `pulumi:"circuitCount"`
	ClusterCount   pulumi.IntInput                       `pulumi:"clusterCount"`
	Comments       pulumi.StringInput                    `pulumi:"comments"`
	Created        pulumi.StringInput                    `pulumi:"created"`
	CustomFields   pulumi.MapInput                       `pulumi:"customFields"`
	Description    pulumi.StringInput                    `pulumi:"description"`
	DeviceCount    pulumi.IntInput                       `pulumi:"deviceCount"`
	Id             pulumi.IntInput                       `pulumi:"id"`
	IpAddressCount pulumi.IntInput                       `pulumi:"ipAddressCount"`
	LastUpdated    pulumi.StringInput                    `pulumi:"lastUpdated"`
	Name           pulumi.StringInput                    `pulumi:"name"`
	PrefixCount    pulumi.IntInput                       `pulumi:"prefixCount"`
	RackCount      pulumi.IntInput                       `pulumi:"rackCount"`
	SiteCount      pulumi.IntInput                       `pulumi:"siteCount"`
	Slug           pulumi.StringInput                    `pulumi:"slug"`
	TenantGroups   GetTenantsTenantTenantGroupArrayInput `pulumi:"tenantGroups"`
	VlanCount      pulumi.IntInput                       `pulumi:"vlanCount"`
	VmCount        pulumi.IntInput                       `pulumi:"vmCount"`
	VrfCount       pulumi.IntInput                       `pulumi:"vrfCount"`
}

func (GetTenantsTenantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTenantsTenant)(nil)).Elem()
}

func (i GetTenantsTenantArgs) ToGetTenantsTenantOutput() GetTenantsTenantOutput {
	return i.ToGetTenantsTenantOutputWithContext(context.Background())
}

func (i GetTenantsTenantArgs) ToGetTenantsTenantOutputWithContext(ctx context.Context) GetTenantsTenantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTenantsTenantOutput)
}

// GetTenantsTenantArrayInput is an input type that accepts GetTenantsTenantArray and GetTenantsTenantArrayOutput values.
// You can construct a concrete instance of `GetTenantsTenantArrayInput` via:
//
//	GetTenantsTenantArray{ GetTenantsTenantArgs{...} }
type GetTenantsTenantArrayInput interface {
	pulumi.Input

	ToGetTenantsTenantArrayOutput() GetTenantsTenantArrayOutput
	ToGetTenantsTenantArrayOutputWithContext(context.Context) GetTenantsTenantArrayOutput
}

type GetTenantsTenantArray []GetTenantsTenantInput

func (GetTenantsTenantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTenantsTenant)(nil)).Elem()
}

func (i GetTenantsTenantArray) ToGetTenantsTenantArrayOutput() GetTenantsTenantArrayOutput {
	return i.ToGetTenantsTenantArrayOutputWithContext(context.Background())
}

func (i GetTenantsTenantArray) ToGetTenantsTenantArrayOutputWithContext(ctx context.Context) GetTenantsTenantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTenantsTenantArrayOutput)
}

type GetTenantsTenantOutput struct{ *pulumi.OutputState }

func (GetTenantsTenantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTenantsTenant)(nil)).Elem()
}

func (o GetTenantsTenantOutput) ToGetTenantsTenantOutput() GetTenantsTenantOutput {
	return o
}

func (o GetTenantsTenantOutput) ToGetTenantsTenantOutputWithContext(ctx context.Context) GetTenantsTenantOutput {
	return o
}

func (o GetTenantsTenantOutput) CircuitCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTenantsTenant) int { return v.CircuitCount }).(pulumi.IntOutput)
}

func (o GetTenantsTenantOutput) ClusterCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTenantsTenant) int { return v.ClusterCount }).(pulumi.IntOutput)
}

func (o GetTenantsTenantOutput) Comments() pulumi.StringOutput {
	return o.ApplyT(func(v GetTenantsTenant) string { return v.Comments }).(pulumi.StringOutput)
}

func (o GetTenantsTenantOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetTenantsTenant) string { return v.Created }).(pulumi.StringOutput)
}

func (o GetTenantsTenantOutput) CustomFields() pulumi.MapOutput {
	return o.ApplyT(func(v GetTenantsTenant) map[string]interface{} { return v.CustomFields }).(pulumi.MapOutput)
}

func (o GetTenantsTenantOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTenantsTenant) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetTenantsTenantOutput) DeviceCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTenantsTenant) int { return v.DeviceCount }).(pulumi.IntOutput)
}

func (o GetTenantsTenantOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetTenantsTenant) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetTenantsTenantOutput) IpAddressCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTenantsTenant) int { return v.IpAddressCount }).(pulumi.IntOutput)
}

func (o GetTenantsTenantOutput) LastUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v GetTenantsTenant) string { return v.LastUpdated }).(pulumi.StringOutput)
}

func (o GetTenantsTenantOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTenantsTenant) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetTenantsTenantOutput) PrefixCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTenantsTenant) int { return v.PrefixCount }).(pulumi.IntOutput)
}

func (o GetTenantsTenantOutput) RackCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTenantsTenant) int { return v.RackCount }).(pulumi.IntOutput)
}

func (o GetTenantsTenantOutput) SiteCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTenantsTenant) int { return v.SiteCount }).(pulumi.IntOutput)
}

func (o GetTenantsTenantOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v GetTenantsTenant) string { return v.Slug }).(pulumi.StringOutput)
}

func (o GetTenantsTenantOutput) TenantGroups() GetTenantsTenantTenantGroupArrayOutput {
	return o.ApplyT(func(v GetTenantsTenant) []GetTenantsTenantTenantGroup { return v.TenantGroups }).(GetTenantsTenantTenantGroupArrayOutput)
}

func (o GetTenantsTenantOutput) VlanCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTenantsTenant) int { return v.VlanCount }).(pulumi.IntOutput)
}

func (o GetTenantsTenantOutput) VmCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTenantsTenant) int { return v.VmCount }).(pulumi.IntOutput)
}

func (o GetTenantsTenantOutput) VrfCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTenantsTenant) int { return v.VrfCount }).(pulumi.IntOutput)
}

type GetTenantsTenantArrayOutput struct{ *pulumi.OutputState }

func (GetTenantsTenantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTenantsTenant)(nil)).Elem()
}

func (o GetTenantsTenantArrayOutput) ToGetTenantsTenantArrayOutput() GetTenantsTenantArrayOutput {
	return o
}

func (o GetTenantsTenantArrayOutput) ToGetTenantsTenantArrayOutputWithContext(ctx context.Context) GetTenantsTenantArrayOutput {
	return o
}

func (o GetTenantsTenantArrayOutput) Index(i pulumi.IntInput) GetTenantsTenantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTenantsTenant {
		return vs[0].([]GetTenantsTenant)[vs[1].(int)]
	}).(GetTenantsTenantOutput)
}

type GetTenantsTenantTenantGroup struct {
	Id          int    `pulumi:"id"`
	Name        string `pulumi:"name"`
	Slug        string `pulumi:"slug"`
	TenantCount int    `pulumi:"tenantCount"`
}

// GetTenantsTenantTenantGroupInput is an input type that accepts GetTenantsTenantTenantGroupArgs and GetTenantsTenantTenantGroupOutput values.
// You can construct a concrete instance of `GetTenantsTenantTenantGroupInput` via:
//
//	GetTenantsTenantTenantGroupArgs{...}
type GetTenantsTenantTenantGroupInput interface {
	pulumi.Input

	ToGetTenantsTenantTenantGroupOutput() GetTenantsTenantTenantGroupOutput
	ToGetTenantsTenantTenantGroupOutputWithContext(context.Context) GetTenantsTenantTenantGroupOutput
}

type GetTenantsTenantTenantGroupArgs struct {
	Id          pulumi.IntInput    `pulumi:"id"`
	Name        pulumi.StringInput `pulumi:"name"`
	Slug        pulumi.StringInput `pulumi:"slug"`
	TenantCount pulumi.IntInput    `pulumi:"tenantCount"`
}

func (GetTenantsTenantTenantGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTenantsTenantTenantGroup)(nil)).Elem()
}

func (i GetTenantsTenantTenantGroupArgs) ToGetTenantsTenantTenantGroupOutput() GetTenantsTenantTenantGroupOutput {
	return i.ToGetTenantsTenantTenantGroupOutputWithContext(context.Background())
}

func (i GetTenantsTenantTenantGroupArgs) ToGetTenantsTenantTenantGroupOutputWithContext(ctx context.Context) GetTenantsTenantTenantGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTenantsTenantTenantGroupOutput)
}

// GetTenantsTenantTenantGroupArrayInput is an input type that accepts GetTenantsTenantTenantGroupArray and GetTenantsTenantTenantGroupArrayOutput values.
// You can construct a concrete instance of `GetTenantsTenantTenantGroupArrayInput` via:
//
//	GetTenantsTenantTenantGroupArray{ GetTenantsTenantTenantGroupArgs{...} }
type GetTenantsTenantTenantGroupArrayInput interface {
	pulumi.Input

	ToGetTenantsTenantTenantGroupArrayOutput() GetTenantsTenantTenantGroupArrayOutput
	ToGetTenantsTenantTenantGroupArrayOutputWithContext(context.Context) GetTenantsTenantTenantGroupArrayOutput
}

type GetTenantsTenantTenantGroupArray []GetTenantsTenantTenantGroupInput

func (GetTenantsTenantTenantGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTenantsTenantTenantGroup)(nil)).Elem()
}

func (i GetTenantsTenantTenantGroupArray) ToGetTenantsTenantTenantGroupArrayOutput() GetTenantsTenantTenantGroupArrayOutput {
	return i.ToGetTenantsTenantTenantGroupArrayOutputWithContext(context.Background())
}

func (i GetTenantsTenantTenantGroupArray) ToGetTenantsTenantTenantGroupArrayOutputWithContext(ctx context.Context) GetTenantsTenantTenantGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTenantsTenantTenantGroupArrayOutput)
}

type GetTenantsTenantTenantGroupOutput struct{ *pulumi.OutputState }

func (GetTenantsTenantTenantGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTenantsTenantTenantGroup)(nil)).Elem()
}

func (o GetTenantsTenantTenantGroupOutput) ToGetTenantsTenantTenantGroupOutput() GetTenantsTenantTenantGroupOutput {
	return o
}

func (o GetTenantsTenantTenantGroupOutput) ToGetTenantsTenantTenantGroupOutputWithContext(ctx context.Context) GetTenantsTenantTenantGroupOutput {
	return o
}

func (o GetTenantsTenantTenantGroupOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetTenantsTenantTenantGroup) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetTenantsTenantTenantGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTenantsTenantTenantGroup) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetTenantsTenantTenantGroupOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v GetTenantsTenantTenantGroup) string { return v.Slug }).(pulumi.StringOutput)
}

func (o GetTenantsTenantTenantGroupOutput) TenantCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTenantsTenantTenantGroup) int { return v.TenantCount }).(pulumi.IntOutput)
}

type GetTenantsTenantTenantGroupArrayOutput struct{ *pulumi.OutputState }

func (GetTenantsTenantTenantGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTenantsTenantTenantGroup)(nil)).Elem()
}

func (o GetTenantsTenantTenantGroupArrayOutput) ToGetTenantsTenantTenantGroupArrayOutput() GetTenantsTenantTenantGroupArrayOutput {
	return o
}

func (o GetTenantsTenantTenantGroupArrayOutput) ToGetTenantsTenantTenantGroupArrayOutputWithContext(ctx context.Context) GetTenantsTenantTenantGroupArrayOutput {
	return o
}

func (o GetTenantsTenantTenantGroupArrayOutput) Index(i pulumi.IntInput) GetTenantsTenantTenantGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTenantsTenantTenantGroup {
		return vs[0].([]GetTenantsTenantTenantGroup)[vs[1].(int)]
	}).(GetTenantsTenantTenantGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetTenantsFilterInput)(nil)).Elem(), GetTenantsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTenantsFilterArrayInput)(nil)).Elem(), GetTenantsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTenantsTenantInput)(nil)).Elem(), GetTenantsTenantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTenantsTenantArrayInput)(nil)).Elem(), GetTenantsTenantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTenantsTenantTenantGroupInput)(nil)).Elem(), GetTenantsTenantTenantGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTenantsTenantTenantGroupArrayInput)(nil)).Elem(), GetTenantsTenantTenantGroupArray{})
	pulumi.RegisterOutputType(GetTenantsFilterOutput{})
	pulumi.RegisterOutputType(GetTenantsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetTenantsTenantOutput{})
	pulumi.RegisterOutputType(GetTenantsTenantArrayOutput{})
	pulumi.RegisterOutputType(GetTenantsTenantTenantGroupOutput{})
	pulumi.RegisterOutputType(GetTenantsTenantTenantGroupArrayOutput{})
}
