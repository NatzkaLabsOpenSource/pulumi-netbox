// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getDevicePowerPorts(args?: GetDevicePowerPortsArgs, opts?: pulumi.InvokeOptions): Promise<GetDevicePowerPortsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("netbox:index/getDevicePowerPorts:getDevicePowerPorts", {
        "filters": args.filters,
        "limit": args.limit,
        "nameRegex": args.nameRegex,
    }, opts);
}

/**
 * A collection of arguments for invoking getDevicePowerPorts.
 */
export interface GetDevicePowerPortsArgs {
    filters?: inputs.GetDevicePowerPortsFilter[];
    limit?: number;
    nameRegex?: string;
}

/**
 * A collection of values returned by getDevicePowerPorts.
 */
export interface GetDevicePowerPortsResult {
    readonly filters?: outputs.GetDevicePowerPortsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly limit?: number;
    readonly nameRegex?: string;
    readonly powerPorts: outputs.GetDevicePowerPortsPowerPort[];
}
export function getDevicePowerPortsOutput(args?: GetDevicePowerPortsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDevicePowerPortsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("netbox:index/getDevicePowerPorts:getDevicePowerPorts", {
        "filters": args.filters,
        "limit": args.limit,
        "nameRegex": args.nameRegex,
    }, opts);
}

/**
 * A collection of arguments for invoking getDevicePowerPorts.
 */
export interface GetDevicePowerPortsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.GetDevicePowerPortsFilterArgs>[]>;
    limit?: pulumi.Input<number>;
    nameRegex?: pulumi.Input<string>;
}
