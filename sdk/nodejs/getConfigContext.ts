// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getConfigContext(args: GetConfigContextArgs, opts?: pulumi.InvokeOptions): Promise<GetConfigContextResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("netbox:index/getConfigContext:getConfigContext", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getConfigContext.
 */
export interface GetConfigContextArgs {
    name: string;
}

/**
 * A collection of values returned by getConfigContext.
 */
export interface GetConfigContextResult {
    readonly clusterGroups: number[];
    readonly clusterTypes: number[];
    readonly clusters: number[];
    readonly data: string;
    readonly description: string;
    readonly deviceTypes: number[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly locations: number[];
    readonly name: string;
    readonly platforms: number[];
    readonly regions: number[];
    readonly roles: number[];
    readonly siteGroups: number[];
    readonly sites: number[];
    readonly tags: string[];
    readonly tenantGroups: number[];
    readonly tenants: number[];
    readonly weight: number;
}
export function getConfigContextOutput(args: GetConfigContextOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetConfigContextResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("netbox:index/getConfigContext:getConfigContext", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getConfigContext.
 */
export interface GetConfigContextOutputArgs {
    name: pulumi.Input<string>;
}
