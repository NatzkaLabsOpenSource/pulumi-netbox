// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ContactArgs, ContactState } from "./contact";
export type Contact = import("./contact").Contact;
export const Contact: typeof import("./contact").Contact = null as any;
utilities.lazyLoad(exports, ["Contact"], () => require("./contact"));

export { ContactAssignmentArgs, ContactAssignmentState } from "./contactAssignment";
export type ContactAssignment = import("./contactAssignment").ContactAssignment;
export const ContactAssignment: typeof import("./contactAssignment").ContactAssignment = null as any;
utilities.lazyLoad(exports, ["ContactAssignment"], () => require("./contactAssignment"));

export { ContactGroupArgs, ContactGroupState } from "./contactGroup";
export type ContactGroup = import("./contactGroup").ContactGroup;
export const ContactGroup: typeof import("./contactGroup").ContactGroup = null as any;
utilities.lazyLoad(exports, ["ContactGroup"], () => require("./contactGroup"));

export { ContactRoleArgs, ContactRoleState } from "./contactRole";
export type ContactRole = import("./contactRole").ContactRole;
export const ContactRole: typeof import("./contactRole").ContactRole = null as any;
utilities.lazyLoad(exports, ["ContactRole"], () => require("./contactRole"));

export { GetContactArgs, GetContactResult, GetContactOutputArgs } from "./getContact";
export const getContact: typeof import("./getContact").getContact = null as any;
export const getContactOutput: typeof import("./getContact").getContactOutput = null as any;
utilities.lazyLoad(exports, ["getContact","getContactOutput"], () => require("./getContact"));

export { GetContactGroupArgs, GetContactGroupResult, GetContactGroupOutputArgs } from "./getContactGroup";
export const getContactGroup: typeof import("./getContactGroup").getContactGroup = null as any;
export const getContactGroupOutput: typeof import("./getContactGroup").getContactGroupOutput = null as any;
utilities.lazyLoad(exports, ["getContactGroup","getContactGroupOutput"], () => require("./getContactGroup"));

export { GetContactRoleArgs, GetContactRoleResult, GetContactRoleOutputArgs } from "./getContactRole";
export const getContactRole: typeof import("./getContactRole").getContactRole = null as any;
export const getContactRoleOutput: typeof import("./getContactRole").getContactRoleOutput = null as any;
utilities.lazyLoad(exports, ["getContactRole","getContactRoleOutput"], () => require("./getContactRole"));

export { GetTenantArgs, GetTenantResult, GetTenantOutputArgs } from "./getTenant";
export const getTenant: typeof import("./getTenant").getTenant = null as any;
export const getTenantOutput: typeof import("./getTenant").getTenantOutput = null as any;
utilities.lazyLoad(exports, ["getTenant","getTenantOutput"], () => require("./getTenant"));

export { GetTenantGroupArgs, GetTenantGroupResult, GetTenantGroupOutputArgs } from "./getTenantGroup";
export const getTenantGroup: typeof import("./getTenantGroup").getTenantGroup = null as any;
export const getTenantGroupOutput: typeof import("./getTenantGroup").getTenantGroupOutput = null as any;
utilities.lazyLoad(exports, ["getTenantGroup","getTenantGroupOutput"], () => require("./getTenantGroup"));

export { GetTenantsArgs, GetTenantsResult, GetTenantsOutputArgs } from "./getTenants";
export const getTenants: typeof import("./getTenants").getTenants = null as any;
export const getTenantsOutput: typeof import("./getTenants").getTenantsOutput = null as any;
utilities.lazyLoad(exports, ["getTenants","getTenantsOutput"], () => require("./getTenants"));

export { TenantArgs, TenantState } from "./tenant";
export type Tenant = import("./tenant").Tenant;
export const Tenant: typeof import("./tenant").Tenant = null as any;
utilities.lazyLoad(exports, ["Tenant"], () => require("./tenant"));

export { TenantGroupArgs, TenantGroupState } from "./tenantGroup";
export type TenantGroup = import("./tenantGroup").TenantGroup;
export const TenantGroup: typeof import("./tenantGroup").TenantGroup = null as any;
utilities.lazyLoad(exports, ["TenantGroup"], () => require("./tenantGroup"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "netbox:tenancy/contact:Contact":
                return new Contact(name, <any>undefined, { urn })
            case "netbox:tenancy/contactAssignment:ContactAssignment":
                return new ContactAssignment(name, <any>undefined, { urn })
            case "netbox:tenancy/contactGroup:ContactGroup":
                return new ContactGroup(name, <any>undefined, { urn })
            case "netbox:tenancy/contactRole:ContactRole":
                return new ContactRole(name, <any>undefined, { urn })
            case "netbox:tenancy/tenant:Tenant":
                return new Tenant(name, <any>undefined, { urn })
            case "netbox:tenancy/tenantGroup:TenantGroup":
                return new TenantGroup(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("netbox", "tenancy/contact", _module)
pulumi.runtime.registerResourceModule("netbox", "tenancy/contactAssignment", _module)
pulumi.runtime.registerResourceModule("netbox", "tenancy/contactGroup", _module)
pulumi.runtime.registerResourceModule("netbox", "tenancy/contactRole", _module)
pulumi.runtime.registerResourceModule("netbox", "tenancy/tenant", _module)
pulumi.runtime.registerResourceModule("netbox", "tenancy/tenantGroup", _module)
