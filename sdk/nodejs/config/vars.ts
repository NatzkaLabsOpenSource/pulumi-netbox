// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("netbox");

/**
 * Flag to set whether to allow https with invalid certificates. Can be set via the `NETBOX_ALLOW_INSECURE_HTTPS`
 * environment variable. Defaults to `false`.
 */
export declare const allowInsecureHttps: boolean | undefined;
Object.defineProperty(exports, "allowInsecureHttps", {
    get() {
        return __config.getObject<boolean>("allowInsecureHttps");
    },
    enumerable: true,
});

/**
 * Netbox API authentication token. Can be set via the `NETBOX_API_TOKEN` environment variable.
 */
export declare const apiToken: string | undefined;
Object.defineProperty(exports, "apiToken", {
    get() {
        return __config.get("apiToken");
    },
    enumerable: true,
});

/**
 * Tags to add to every resource managed by this provider
 */
export declare const defaultTags: string[] | undefined;
Object.defineProperty(exports, "defaultTags", {
    get() {
        return __config.getObject<string[]>("defaultTags");
    },
    enumerable: true,
});

/**
 * Set these header on all requests to Netbox. Can be set via the `NETBOX_HEADERS` environment variable.
 */
export declare const headers: {[key: string]: string} | undefined;
Object.defineProperty(exports, "headers", {
    get() {
        return __config.getObject<{[key: string]: string}>("headers");
    },
    enumerable: true,
});

/**
 * Netbox API HTTP request timeout in seconds. Can be set via the `NETBOX_REQUEST_TIMEOUT` environment variable.
 */
export declare const requestTimeout: number | undefined;
Object.defineProperty(exports, "requestTimeout", {
    get() {
        return __config.getObject<number>("requestTimeout");
    },
    enumerable: true,
});

/**
 * Location of Netbox server including scheme (http or https) and optional port. Can be set via the `NETBOX_SERVER_URL`
 * environment variable.
 */
export declare const serverUrl: string | undefined;
Object.defineProperty(exports, "serverUrl", {
    get() {
        return __config.get("serverUrl");
    },
    enumerable: true,
});

export declare const skipVersionCheck: boolean | undefined;
Object.defineProperty(exports, "skipVersionCheck", {
    get() {
        return __config.getObject<boolean>("skipVersionCheck");
    },
    enumerable: true,
});

/**
 * If true, strip trailing slashes from the `serverUrl` parameter and print a warning when doing so. Note that using
 * trailing slashes in the `serverUrl` parameter will usually lead to errors. Can be set via the
 * `NETBOX_STRIP_TRAILING_SLASHES_FROM_URL` environment variable. Defaults to `true`.
 */
export declare const stripTrailingSlashesFromUrl: boolean | undefined;
Object.defineProperty(exports, "stripTrailingSlashesFromUrl", {
    get() {
        return __config.getObject<boolean>("stripTrailingSlashesFromUrl");
    },
    enumerable: true,
});

