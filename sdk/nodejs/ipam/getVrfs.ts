// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getVrfs(args?: GetVrfsArgs, opts?: pulumi.InvokeOptions): Promise<GetVrfsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("netbox:ipam/getVrfs:getVrfs", {
        "filters": args.filters,
        "limit": args.limit,
    }, opts);
}

/**
 * A collection of arguments for invoking getVrfs.
 */
export interface GetVrfsArgs {
    filters?: inputs.ipam.GetVrfsFilter[];
    /**
     * Defaults to `0`.
     */
    limit?: number;
}

/**
 * A collection of values returned by getVrfs.
 */
export interface GetVrfsResult {
    readonly filters?: outputs.ipam.GetVrfsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Defaults to `0`.
     */
    readonly limit?: number;
    readonly vrfs: outputs.ipam.GetVrfsVrf[];
}
export function getVrfsOutput(args?: GetVrfsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetVrfsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("netbox:ipam/getVrfs:getVrfs", {
        "filters": args.filters,
        "limit": args.limit,
    }, opts);
}

/**
 * A collection of arguments for invoking getVrfs.
 */
export interface GetVrfsOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.ipam.GetVrfsFilterArgs>[]>;
    /**
     * Defaults to `0`.
     */
    limit?: pulumi.Input<number>;
}
