// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getAvailablePrefix(args: GetAvailablePrefixArgs, opts?: pulumi.InvokeOptions): Promise<GetAvailablePrefixResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("netbox:ipam/getAvailablePrefix:getAvailablePrefix", {
        "prefixId": args.prefixId,
    }, opts);
}

/**
 * A collection of arguments for invoking getAvailablePrefix.
 */
export interface GetAvailablePrefixArgs {
    prefixId: number;
}

/**
 * A collection of values returned by getAvailablePrefix.
 */
export interface GetAvailablePrefixResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly prefixId: number;
    readonly prefixesAvailables: outputs.ipam.GetAvailablePrefixPrefixesAvailable[];
}
export function getAvailablePrefixOutput(args: GetAvailablePrefixOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAvailablePrefixResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("netbox:ipam/getAvailablePrefix:getAvailablePrefix", {
        "prefixId": args.prefixId,
    }, opts);
}

/**
 * A collection of arguments for invoking getAvailablePrefix.
 */
export interface GetAvailablePrefixOutputArgs {
    prefixId: pulumi.Input<number>;
}
