// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as netbox from "@pulumi/netbox";
 *
 * const asn1 = netbox.ipam.getAsn({
 *     asn: "1111",
 *     tag: "tag-1",
 * });
 * const asn2 = netbox.ipam.getAsn({
 *     tag: "tag-1",
 *     tagN: "tag-2",
 * });
 * ```
 */
export function getAsn(args?: GetAsnArgs, opts?: pulumi.InvokeOptions): Promise<GetAsnResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("netbox:ipam/getAsn:getAsn", {
        "asn": args.asn,
        "tag": args.tag,
        "tagN": args.tagN,
    }, opts);
}

/**
 * A collection of arguments for invoking getAsn.
 */
export interface GetAsnArgs {
    /**
     * At least one of `asn` or `tag` must be given.
     */
    asn?: string;
    /**
     * Tag to include in the data source filter (must match the tag's slug). At least one of `asn` or `tag` must be given.
     */
    tag?: string;
    /**
     * Tag to exclude from the data source filter (must match the tag's slug).
     * Refer to [Netbox's documentation](https://demo.netbox.dev/static/docs/rest-api/filtering/#lookup-expressions)
     * for more information on available lookup expressions.
     */
    tagN?: string;
}

/**
 * A collection of values returned by getAsn.
 */
export interface GetAsnResult {
    /**
     * At least one of `asn` or `tag` must be given.
     */
    readonly asn?: string;
    readonly description: string;
    /**
     * The ID of this resource.
     */
    readonly id: number;
    /**
     * Tag to include in the data source filter (must match the tag's slug). At least one of `asn` or `tag` must be given.
     */
    readonly tag?: string;
    /**
     * Tag to exclude from the data source filter (must match the tag's slug).
     * Refer to [Netbox's documentation](https://demo.netbox.dev/static/docs/rest-api/filtering/#lookup-expressions)
     * for more information on available lookup expressions.
     */
    readonly tagN?: string;
    readonly tags: string[];
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as netbox from "@pulumi/netbox";
 *
 * const asn1 = netbox.ipam.getAsn({
 *     asn: "1111",
 *     tag: "tag-1",
 * });
 * const asn2 = netbox.ipam.getAsn({
 *     tag: "tag-1",
 *     tagN: "tag-2",
 * });
 * ```
 */
export function getAsnOutput(args?: GetAsnOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAsnResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("netbox:ipam/getAsn:getAsn", {
        "asn": args.asn,
        "tag": args.tag,
        "tagN": args.tagN,
    }, opts);
}

/**
 * A collection of arguments for invoking getAsn.
 */
export interface GetAsnOutputArgs {
    /**
     * At least one of `asn` or `tag` must be given.
     */
    asn?: pulumi.Input<string>;
    /**
     * Tag to include in the data source filter (must match the tag's slug). At least one of `asn` or `tag` must be given.
     */
    tag?: pulumi.Input<string>;
    /**
     * Tag to exclude from the data source filter (must match the tag's slug).
     * Refer to [Netbox's documentation](https://demo.netbox.dev/static/docs/rest-api/filtering/#lookup-expressions)
     * for more information on available lookup expressions.
     */
    tagN?: pulumi.Input<string>;
}
