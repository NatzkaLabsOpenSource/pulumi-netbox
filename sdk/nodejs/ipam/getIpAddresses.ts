// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getIpAddresses(args?: GetIpAddressesArgs, opts?: pulumi.InvokeOptions): Promise<GetIpAddressesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("netbox:ipam/getIpAddresses:getIpAddresses", {
        "filters": args.filters,
        "limit": args.limit,
    }, opts);
}

/**
 * A collection of arguments for invoking getIpAddresses.
 */
export interface GetIpAddressesArgs {
    filters?: inputs.ipam.GetIpAddressesFilter[];
    /**
     * Defaults to `1000`.
     */
    limit?: number;
}

/**
 * A collection of values returned by getIpAddresses.
 */
export interface GetIpAddressesResult {
    readonly filters?: outputs.ipam.GetIpAddressesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ipAddresses: outputs.ipam.GetIpAddressesIpAddress[];
    /**
     * Defaults to `1000`.
     */
    readonly limit?: number;
}
export function getIpAddressesOutput(args?: GetIpAddressesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetIpAddressesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("netbox:ipam/getIpAddresses:getIpAddresses", {
        "filters": args.filters,
        "limit": args.limit,
    }, opts);
}

/**
 * A collection of arguments for invoking getIpAddresses.
 */
export interface GetIpAddressesOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.ipam.GetIpAddressesFilterArgs>[]>;
    /**
     * Defaults to `1000`.
     */
    limit?: pulumi.Input<number>;
}
