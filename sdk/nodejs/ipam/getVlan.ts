// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as netbox from "@pulumi/netbox";
 *
 * // Get VLAN by name
 * const vlan1 = netbox.ipam.getVlan({
 *     name: "vlan-1",
 * });
 * // Get VLAN by VID and IPAM role ID
 * const vlan2 = netbox.ipam.getVlan({
 *     vid: 1234,
 *     role: example.id,
 * });
 * // Get VLAN by name and tenant ID
 * const vlan3 = netbox.ipam.getVlan({
 *     name: "vlan-3",
 *     tenant: exampleNetboxTenant.id,
 * });
 * ```
 */
export function getVlan(args?: GetVlanArgs, opts?: pulumi.InvokeOptions): Promise<GetVlanResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("netbox:ipam/getVlan:getVlan", {
        "groupId": args.groupId,
        "name": args.name,
        "role": args.role,
        "tenant": args.tenant,
        "vid": args.vid,
    }, opts);
}

/**
 * A collection of arguments for invoking getVlan.
 */
export interface GetVlanArgs {
    groupId?: number;
    name?: string;
    role?: number;
    tenant?: number;
    vid?: number;
}

/**
 * A collection of values returned by getVlan.
 */
export interface GetVlanResult {
    readonly description: string;
    readonly groupId: number;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name?: string;
    readonly role: number;
    readonly site: number;
    readonly status: string;
    readonly tenant: number;
    readonly vid?: number;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as netbox from "@pulumi/netbox";
 *
 * // Get VLAN by name
 * const vlan1 = netbox.ipam.getVlan({
 *     name: "vlan-1",
 * });
 * // Get VLAN by VID and IPAM role ID
 * const vlan2 = netbox.ipam.getVlan({
 *     vid: 1234,
 *     role: example.id,
 * });
 * // Get VLAN by name and tenant ID
 * const vlan3 = netbox.ipam.getVlan({
 *     name: "vlan-3",
 *     tenant: exampleNetboxTenant.id,
 * });
 * ```
 */
export function getVlanOutput(args?: GetVlanOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetVlanResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("netbox:ipam/getVlan:getVlan", {
        "groupId": args.groupId,
        "name": args.name,
        "role": args.role,
        "tenant": args.tenant,
        "vid": args.vid,
    }, opts);
}

/**
 * A collection of arguments for invoking getVlan.
 */
export interface GetVlanOutputArgs {
    groupId?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    role?: pulumi.Input<number>;
    tenant?: pulumi.Input<number>;
    vid?: pulumi.Input<number>;
}
