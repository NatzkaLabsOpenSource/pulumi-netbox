// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getDeviceInterfaces(args?: GetDeviceInterfacesArgs, opts?: pulumi.InvokeOptions): Promise<GetDeviceInterfacesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("netbox:dcim/getDeviceInterfaces:getDeviceInterfaces", {
        "filters": args.filters,
        "limit": args.limit,
        "nameRegex": args.nameRegex,
    }, opts);
}

/**
 * A collection of arguments for invoking getDeviceInterfaces.
 */
export interface GetDeviceInterfacesArgs {
    filters?: inputs.dcim.GetDeviceInterfacesFilter[];
    limit?: number;
    nameRegex?: string;
}

/**
 * A collection of values returned by getDeviceInterfaces.
 */
export interface GetDeviceInterfacesResult {
    readonly filters?: outputs.dcim.GetDeviceInterfacesFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly interfaces: outputs.dcim.GetDeviceInterfacesInterface[];
    readonly limit?: number;
    readonly nameRegex?: string;
}
export function getDeviceInterfacesOutput(args?: GetDeviceInterfacesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDeviceInterfacesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("netbox:dcim/getDeviceInterfaces:getDeviceInterfaces", {
        "filters": args.filters,
        "limit": args.limit,
        "nameRegex": args.nameRegex,
    }, opts);
}

/**
 * A collection of arguments for invoking getDeviceInterfaces.
 */
export interface GetDeviceInterfacesOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.dcim.GetDeviceInterfacesFilterArgs>[]>;
    limit?: pulumi.Input<number>;
    nameRegex?: pulumi.Input<string>;
}
