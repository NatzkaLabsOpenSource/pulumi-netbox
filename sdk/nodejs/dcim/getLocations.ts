// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getLocations(args?: GetLocationsArgs, opts?: pulumi.InvokeOptions): Promise<GetLocationsResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("netbox:dcim/getLocations:getLocations", {
        "filters": args.filters,
        "limit": args.limit,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getLocations.
 */
export interface GetLocationsArgs {
    /**
     * A list of filter to apply to the API query when requesting locations.
     */
    filters?: inputs.dcim.GetLocationsFilter[];
    /**
     * The limit of objects to return from the API lookup. Defaults to `0`.
     */
    limit?: number;
    /**
     * A list of tags to filter on.
     */
    tags?: string[];
}

/**
 * A collection of values returned by getLocations.
 */
export interface GetLocationsResult {
    /**
     * A list of filter to apply to the API query when requesting locations.
     */
    readonly filters?: outputs.dcim.GetLocationsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The limit of objects to return from the API lookup. Defaults to `0`.
     */
    readonly limit?: number;
    readonly locations: outputs.dcim.GetLocationsLocation[];
    /**
     * A list of tags to filter on.
     */
    readonly tags?: string[];
}
export function getLocationsOutput(args?: GetLocationsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLocationsResult> {
    return pulumi.output(args).apply((a: any) => getLocations(a, opts))
}

/**
 * A collection of arguments for invoking getLocations.
 */
export interface GetLocationsOutputArgs {
    /**
     * A list of filter to apply to the API query when requesting locations.
     */
    filters?: pulumi.Input<pulumi.Input<inputs.dcim.GetLocationsFilterArgs>[]>;
    /**
     * The limit of objects to return from the API lookup. Defaults to `0`.
     */
    limit?: pulumi.Input<number>;
    /**
     * A list of tags to filter on.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
}
