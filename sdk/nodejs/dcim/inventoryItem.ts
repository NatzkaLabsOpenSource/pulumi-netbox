// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * From the [official documentation](https://docs.netbox.dev/en/stable/models/dcim/inventoryitem/):
 *
 * > Inventory items represent hardware components installed within a device, such as a power supply or CPU or line card. They are intended to be used primarily for inventory purposes.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as netbox from "@natzkalabsopensource/pulumi-netbox";
 *
 * // Note that some terraform code is not included in the example for brevity
 * const testDevice = new netbox.dcim.Device("testDevice", {
 *     deviceTypeId: netbox_device_type.test.id,
 *     tenantId: netbox_tenant.test.id,
 *     roleId: netbox_device_role.test.id,
 *     siteId: netbox_site.test.id,
 * });
 * const testDeviceRearPort = new netbox.dcim.DeviceRearPort("testDeviceRearPort", {
 *     deviceId: testDevice.id,
 *     type: "8p8c",
 *     positions: 1,
 *     markConnected: true,
 * });
 * const parent = new netbox.dcim.InventoryItem("parent", {deviceId: testDevice.id});
 * const testInventoryItem = new netbox.dcim.InventoryItem("testInventoryItem", {
 *     deviceId: testDevice.id,
 *     parentId: parent.id,
 *     componentType: "dcim.rearport",
 *     componentId: testDeviceRearPort.id,
 * });
 * ```
 */
export class InventoryItem extends pulumi.CustomResource {
    /**
     * Get an existing InventoryItem resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InventoryItemState, opts?: pulumi.CustomResourceOptions): InventoryItem {
        return new InventoryItem(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'netbox:dcim/inventoryItem:InventoryItem';

    /**
     * Returns true if the given object is an instance of InventoryItem.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is InventoryItem {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InventoryItem.__pulumiType;
    }

    public readonly assetTag!: pulumi.Output<string | undefined>;
    /**
     * Required when `componentType` is set.
     */
    public readonly componentId!: pulumi.Output<number | undefined>;
    public readonly componentType!: pulumi.Output<string | undefined>;
    public readonly customFields!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly deviceId!: pulumi.Output<number>;
    /**
     * Defaults to `false`.
     */
    public readonly discovered!: pulumi.Output<boolean | undefined>;
    public readonly label!: pulumi.Output<string | undefined>;
    public readonly manufacturerId!: pulumi.Output<number | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly parentId!: pulumi.Output<number | undefined>;
    public readonly partId!: pulumi.Output<string | undefined>;
    public readonly roleId!: pulumi.Output<number | undefined>;
    public readonly serial!: pulumi.Output<string | undefined>;
    public readonly tags!: pulumi.Output<string[] | undefined>;

    /**
     * Create a InventoryItem resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InventoryItemArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InventoryItemArgs | InventoryItemState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InventoryItemState | undefined;
            resourceInputs["assetTag"] = state ? state.assetTag : undefined;
            resourceInputs["componentId"] = state ? state.componentId : undefined;
            resourceInputs["componentType"] = state ? state.componentType : undefined;
            resourceInputs["customFields"] = state ? state.customFields : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["deviceId"] = state ? state.deviceId : undefined;
            resourceInputs["discovered"] = state ? state.discovered : undefined;
            resourceInputs["label"] = state ? state.label : undefined;
            resourceInputs["manufacturerId"] = state ? state.manufacturerId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["parentId"] = state ? state.parentId : undefined;
            resourceInputs["partId"] = state ? state.partId : undefined;
            resourceInputs["roleId"] = state ? state.roleId : undefined;
            resourceInputs["serial"] = state ? state.serial : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as InventoryItemArgs | undefined;
            if ((!args || args.deviceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deviceId'");
            }
            resourceInputs["assetTag"] = args ? args.assetTag : undefined;
            resourceInputs["componentId"] = args ? args.componentId : undefined;
            resourceInputs["componentType"] = args ? args.componentType : undefined;
            resourceInputs["customFields"] = args ? args.customFields : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["deviceId"] = args ? args.deviceId : undefined;
            resourceInputs["discovered"] = args ? args.discovered : undefined;
            resourceInputs["label"] = args ? args.label : undefined;
            resourceInputs["manufacturerId"] = args ? args.manufacturerId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["parentId"] = args ? args.parentId : undefined;
            resourceInputs["partId"] = args ? args.partId : undefined;
            resourceInputs["roleId"] = args ? args.roleId : undefined;
            resourceInputs["serial"] = args ? args.serial : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(InventoryItem.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering InventoryItem resources.
 */
export interface InventoryItemState {
    assetTag?: pulumi.Input<string>;
    /**
     * Required when `componentType` is set.
     */
    componentId?: pulumi.Input<number>;
    componentType?: pulumi.Input<string>;
    customFields?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    description?: pulumi.Input<string>;
    deviceId?: pulumi.Input<number>;
    /**
     * Defaults to `false`.
     */
    discovered?: pulumi.Input<boolean>;
    label?: pulumi.Input<string>;
    manufacturerId?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    parentId?: pulumi.Input<number>;
    partId?: pulumi.Input<string>;
    roleId?: pulumi.Input<number>;
    serial?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a InventoryItem resource.
 */
export interface InventoryItemArgs {
    assetTag?: pulumi.Input<string>;
    /**
     * Required when `componentType` is set.
     */
    componentId?: pulumi.Input<number>;
    componentType?: pulumi.Input<string>;
    customFields?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    description?: pulumi.Input<string>;
    deviceId: pulumi.Input<number>;
    /**
     * Defaults to `false`.
     */
    discovered?: pulumi.Input<boolean>;
    label?: pulumi.Input<string>;
    manufacturerId?: pulumi.Input<number>;
    name?: pulumi.Input<string>;
    parentId?: pulumi.Input<number>;
    partId?: pulumi.Input<string>;
    roleId?: pulumi.Input<number>;
    serial?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
}
