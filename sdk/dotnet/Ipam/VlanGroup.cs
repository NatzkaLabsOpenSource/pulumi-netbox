// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Netbox.Ipam
{
    /// <summary>
    /// &gt; A VLAN Group represents a collection of VLANs. Generally, these are limited by one of a number of scopes such as "Site" or "Virtualization Cluster".
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Netbox = Pulumi.Netbox;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     //Basic VLAN Group example
    ///     var example1 = new Netbox.Ipam.VlanGroup("example1", new()
    ///     {
    ///         Name = "example1",
    ///         Slug = "example1",
    ///     });
    /// 
    ///     //Full VLAN Group example
    ///     var example2 = new Netbox.Ipam.VlanGroup("example2", new()
    ///     {
    ///         Name = "Second Example",
    ///         Slug = "example2",
    ///         ScopeType = "dcim.site",
    ///         ScopeId = example.Id,
    ///         Description = "Second Example VLAN Group",
    ///         Tags = new[]
    ///         {
    ///             exampleNetboxTag.Id,
    ///         },
    ///         VidRanges = new[]
    ///         {
    ///             new[]
    ///             {
    ///                 1,
    ///                 2,
    ///             },
    ///             new[]
    ///             {
    ///                 3,
    ///                 4,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [NetboxResourceType("netbox:ipam/vlanGroup:VlanGroup")]
    public partial class VlanGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Defaults to `""`.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Required when `scope_type` is set.
        /// </summary>
        [Output("scopeId")]
        public Output<int?> ScopeId { get; private set; } = null!;

        /// <summary>
        /// Valid values are `dcim.location`, `dcim.site`, `dcim.sitegroup`, `dcim.region`, `dcim.rack`, `virtualization.cluster` and `virtualization.clustergroup`.
        /// </summary>
        [Output("scopeType")]
        public Output<string?> ScopeType { get; private set; } = null!;

        [Output("slug")]
        public Output<string> Slug { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;

        [Output("vidRanges")]
        public Output<ImmutableArray<ImmutableArray<int>>> VidRanges { get; private set; } = null!;


        /// <summary>
        /// Create a VlanGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VlanGroup(string name, VlanGroupArgs args, CustomResourceOptions? options = null)
            : base("netbox:ipam/vlanGroup:VlanGroup", name, args ?? new VlanGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VlanGroup(string name, Input<string> id, VlanGroupState? state = null, CustomResourceOptions? options = null)
            : base("netbox:ipam/vlanGroup:VlanGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/NatzkaLabsOpenSource/pulumi-netbox",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VlanGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VlanGroup Get(string name, Input<string> id, VlanGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new VlanGroup(name, id, state, options);
        }
    }

    public sealed class VlanGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Defaults to `""`.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Required when `scope_type` is set.
        /// </summary>
        [Input("scopeId")]
        public Input<int>? ScopeId { get; set; }

        /// <summary>
        /// Valid values are `dcim.location`, `dcim.site`, `dcim.sitegroup`, `dcim.region`, `dcim.rack`, `virtualization.cluster` and `virtualization.clustergroup`.
        /// </summary>
        [Input("scopeType")]
        public Input<string>? ScopeType { get; set; }

        [Input("slug", required: true)]
        public Input<string> Slug { get; set; } = null!;

        [Input("tags")]
        private InputList<string>? _tags;
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        [Input("vidRanges", required: true)]
        private InputList<ImmutableArray<int>>? _vidRanges;
        public InputList<ImmutableArray<int>> VidRanges
        {
            get => _vidRanges ?? (_vidRanges = new InputList<ImmutableArray<int>>());
            set => _vidRanges = value;
        }

        public VlanGroupArgs()
        {
        }
        public static new VlanGroupArgs Empty => new VlanGroupArgs();
    }

    public sealed class VlanGroupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Defaults to `""`.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Required when `scope_type` is set.
        /// </summary>
        [Input("scopeId")]
        public Input<int>? ScopeId { get; set; }

        /// <summary>
        /// Valid values are `dcim.location`, `dcim.site`, `dcim.sitegroup`, `dcim.region`, `dcim.rack`, `virtualization.cluster` and `virtualization.clustergroup`.
        /// </summary>
        [Input("scopeType")]
        public Input<string>? ScopeType { get; set; }

        [Input("slug")]
        public Input<string>? Slug { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        [Input("vidRanges")]
        private InputList<ImmutableArray<int>>? _vidRanges;
        public InputList<ImmutableArray<int>> VidRanges
        {
            get => _vidRanges ?? (_vidRanges = new InputList<ImmutableArray<int>>());
            set => _vidRanges = value;
        }

        public VlanGroupState()
        {
        }
        public static new VlanGroupState Empty => new VlanGroupState();
    }
}
