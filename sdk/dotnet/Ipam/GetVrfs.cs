// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Netbox.Ipam
{
    public static class GetVrfs
    {
        public static Task<GetVrfsResult> InvokeAsync(GetVrfsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVrfsResult>("netbox:ipam/getVrfs:getVrfs", args ?? new GetVrfsArgs(), options.WithDefaults());

        public static Output<GetVrfsResult> Invoke(GetVrfsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVrfsResult>("netbox:ipam/getVrfs:getVrfs", args ?? new GetVrfsInvokeArgs(), options.WithDefaults());

        public static Output<GetVrfsResult> Invoke(GetVrfsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetVrfsResult>("netbox:ipam/getVrfs:getVrfs", args ?? new GetVrfsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVrfsArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetVrfsFilterArgs>? _filters;
        public List<Inputs.GetVrfsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetVrfsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Defaults to `0`.
        /// </summary>
        [Input("limit")]
        public int? Limit { get; set; }

        public GetVrfsArgs()
        {
        }
        public static new GetVrfsArgs Empty => new GetVrfsArgs();
    }

    public sealed class GetVrfsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetVrfsFilterInputArgs>? _filters;
        public InputList<Inputs.GetVrfsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetVrfsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Defaults to `0`.
        /// </summary>
        [Input("limit")]
        public Input<int>? Limit { get; set; }

        public GetVrfsInvokeArgs()
        {
        }
        public static new GetVrfsInvokeArgs Empty => new GetVrfsInvokeArgs();
    }


    [OutputType]
    public sealed class GetVrfsResult
    {
        public readonly ImmutableArray<Outputs.GetVrfsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Defaults to `0`.
        /// </summary>
        public readonly int? Limit;
        public readonly ImmutableArray<Outputs.GetVrfsVrfResult> Vrfs;

        [OutputConstructor]
        private GetVrfsResult(
            ImmutableArray<Outputs.GetVrfsFilterResult> filters,

            string id,

            int? limit,

            ImmutableArray<Outputs.GetVrfsVrfResult> vrfs)
        {
            Filters = filters;
            Id = id;
            Limit = limit;
            Vrfs = vrfs;
        }
    }
}
