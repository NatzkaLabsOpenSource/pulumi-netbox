// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Netbox
{
    /// <summary>
    /// From the [official documentation](https://docs.netbox.dev/en/stable/customization/custom-fields/#custom-fields):
    /// 
    /// &gt; Each model in NetBox is represented in the database as a discrete table, and each attribute of a model exists as a column within its table. For example, sites are stored in the dcim_site table, which has columns named name, facility, physical_address, and so on. As new attributes are added to objects throughout the development of NetBox, tables are expanded to include new rows.
    /// &gt; 
    /// &gt; However, some users might want to store additional object attributes that are somewhat esoteric in nature, and that would not make sense to include in the core NetBox database schema. For instance, suppose your organization needs to associate each device with a ticket number correlating it with an internal support system record. This is certainly a legitimate use for NetBox, but it's not a common enough need to warrant including a field for every NetBox installation. Instead, you can create a custom field to hold this data.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Netbox = Pulumi.Netbox;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test = new Netbox.CustomField("test", new()
    ///     {
    ///         Name = "test",
    ///         Type = "text",
    ///         ContentTypes = new[]
    ///         {
    ///             "virtualization.vminterface",
    ///         },
    ///         Weight = 100,
    ///         ValidationRegex = "^.*$",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [NetboxResourceType("netbox:index/customField:CustomField")]
    public partial class CustomField : global::Pulumi.CustomResource
    {
        [Output("choiceSetId")]
        public Output<int?> ChoiceSetId { get; private set; } = null!;

        [Output("contentTypes")]
        public Output<ImmutableArray<string>> ContentTypes { get; private set; } = null!;

        [Output("default")]
        public Output<string?> Default { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("groupName")]
        public Output<string?> GroupName { get; private set; } = null!;

        [Output("label")]
        public Output<string?> Label { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("required")]
        public Output<bool?> Required { get; private set; } = null!;

        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        [Output("validationMaximum")]
        public Output<int?> ValidationMaximum { get; private set; } = null!;

        [Output("validationMinimum")]
        public Output<int?> ValidationMinimum { get; private set; } = null!;

        [Output("validationRegex")]
        public Output<string?> ValidationRegex { get; private set; } = null!;

        [Output("weight")]
        public Output<int> Weight { get; private set; } = null!;


        /// <summary>
        /// Create a CustomField resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CustomField(string name, CustomFieldArgs args, CustomResourceOptions? options = null)
            : base("netbox:index/customField:CustomField", name, args ?? new CustomFieldArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CustomField(string name, Input<string> id, CustomFieldState? state = null, CustomResourceOptions? options = null)
            : base("netbox:index/customField:CustomField", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/NatzkaLabsOpenSource/pulumi-netbox",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CustomField resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CustomField Get(string name, Input<string> id, CustomFieldState? state = null, CustomResourceOptions? options = null)
        {
            return new CustomField(name, id, state, options);
        }
    }

    public sealed class CustomFieldArgs : global::Pulumi.ResourceArgs
    {
        [Input("choiceSetId")]
        public Input<int>? ChoiceSetId { get; set; }

        [Input("contentTypes", required: true)]
        private InputList<string>? _contentTypes;
        public InputList<string> ContentTypes
        {
            get => _contentTypes ?? (_contentTypes = new InputList<string>());
            set => _contentTypes = value;
        }

        [Input("default")]
        public Input<string>? Default { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("groupName")]
        public Input<string>? GroupName { get; set; }

        [Input("label")]
        public Input<string>? Label { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("required")]
        public Input<bool>? Required { get; set; }

        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        [Input("validationMaximum")]
        public Input<int>? ValidationMaximum { get; set; }

        [Input("validationMinimum")]
        public Input<int>? ValidationMinimum { get; set; }

        [Input("validationRegex")]
        public Input<string>? ValidationRegex { get; set; }

        [Input("weight", required: true)]
        public Input<int> Weight { get; set; } = null!;

        public CustomFieldArgs()
        {
        }
        public static new CustomFieldArgs Empty => new CustomFieldArgs();
    }

    public sealed class CustomFieldState : global::Pulumi.ResourceArgs
    {
        [Input("choiceSetId")]
        public Input<int>? ChoiceSetId { get; set; }

        [Input("contentTypes")]
        private InputList<string>? _contentTypes;
        public InputList<string> ContentTypes
        {
            get => _contentTypes ?? (_contentTypes = new InputList<string>());
            set => _contentTypes = value;
        }

        [Input("default")]
        public Input<string>? Default { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("groupName")]
        public Input<string>? GroupName { get; set; }

        [Input("label")]
        public Input<string>? Label { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("required")]
        public Input<bool>? Required { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        [Input("validationMaximum")]
        public Input<int>? ValidationMaximum { get; set; }

        [Input("validationMinimum")]
        public Input<int>? ValidationMinimum { get; set; }

        [Input("validationRegex")]
        public Input<string>? ValidationRegex { get; set; }

        [Input("weight")]
        public Input<int>? Weight { get; set; }

        public CustomFieldState()
        {
        }
        public static new CustomFieldState Empty => new CustomFieldState();
    }
}
