// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Netbox.Tenancy
{
    public static class GetTenant
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Netbox = Pulumi.Netbox;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var customerA = Netbox.Tenancy.GetTenant.Invoke(new()
        ///     {
        ///         Name = "Customer A",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetTenantResult> InvokeAsync(GetTenantArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTenantResult>("netbox:tenancy/getTenant:getTenant", args ?? new GetTenantArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Netbox = Pulumi.Netbox;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var customerA = Netbox.Tenancy.GetTenant.Invoke(new()
        ///     {
        ///         Name = "Customer A",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTenantResult> Invoke(GetTenantInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTenantResult>("netbox:tenancy/getTenant:getTenant", args ?? new GetTenantInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Netbox = Pulumi.Netbox;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var customerA = Netbox.Tenancy.GetTenant.Invoke(new()
        ///     {
        ///         Name = "Customer A",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTenantResult> Invoke(GetTenantInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetTenantResult>("netbox:tenancy/getTenant:getTenant", args ?? new GetTenantInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTenantArgs : global::Pulumi.InvokeArgs
    {
        [Input("description")]
        public string? Description { get; set; }

        /// <summary>
        /// At least one of `name` or `slug` must be given.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// At least one of `name` or `slug` must be given.
        /// </summary>
        [Input("slug")]
        public string? Slug { get; set; }

        public GetTenantArgs()
        {
        }
        public static new GetTenantArgs Empty => new GetTenantArgs();
    }

    public sealed class GetTenantInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// At least one of `name` or `slug` must be given.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// At least one of `name` or `slug` must be given.
        /// </summary>
        [Input("slug")]
        public Input<string>? Slug { get; set; }

        public GetTenantInvokeArgs()
        {
        }
        public static new GetTenantInvokeArgs Empty => new GetTenantInvokeArgs();
    }


    [OutputType]
    public sealed class GetTenantResult
    {
        public readonly string? Description;
        public readonly int GroupId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// At least one of `name` or `slug` must be given.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// At least one of `name` or `slug` must be given.
        /// </summary>
        public readonly string Slug;

        [OutputConstructor]
        private GetTenantResult(
            string? description,

            int groupId,

            string id,

            string name,

            string slug)
        {
            Description = description;
            GroupId = groupId;
            Id = id;
            Name = name;
            Slug = slug;
        }
    }
}
