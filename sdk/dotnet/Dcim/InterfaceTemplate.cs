// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Netbox.Dcim
{
    /// <summary>
    /// From the [official documentation](https://docs.netbox.dev/en/stable/models/dcim/interfacetemplate/):
    /// 
    /// &gt; A template for a network interface that will be created on all instantiations of the parent device type. See the interface documentation for more detail.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Netbox = Pulumi.Netbox;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test = new Netbox.Dcim.Manufacturer("test", new()
    ///     {
    ///         Name = "my-manufacturer",
    ///     });
    /// 
    ///     var testDeviceType = new Netbox.Dcim.DeviceType("test", new()
    ///     {
    ///         Model = "test-model",
    ///         Slug = "test-model",
    ///         PartNumber = "test-part-number",
    ///         ManufacturerId = test.Id,
    ///     });
    /// 
    ///     var testInterfaceTemplate = new Netbox.Dcim.InterfaceTemplate("test", new()
    ///     {
    ///         Name = "eth0",
    ///         Description = "eth0 description",
    ///         Label = "eth0 label",
    ///         DeviceTypeId = testDeviceType.Id,
    ///         Type = "100base-tx",
    ///         MgmtOnly = true,
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [NetboxResourceType("netbox:dcim/interfaceTemplate:InterfaceTemplate")]
    public partial class InterfaceTemplate : global::Pulumi.CustomResource
    {
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Exactly one of `device_type_id` or `module_type_id` must be given.
        /// </summary>
        [Output("deviceTypeId")]
        public Output<int?> DeviceTypeId { get; private set; } = null!;

        [Output("label")]
        public Output<string?> Label { get; private set; } = null!;

        [Output("mgmtOnly")]
        public Output<bool?> MgmtOnly { get; private set; } = null!;

        /// <summary>
        /// Exactly one of `device_type_id` or `module_type_id` must be given.
        /// </summary>
        [Output("moduleTypeId")]
        public Output<int?> ModuleTypeId { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a InterfaceTemplate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public InterfaceTemplate(string name, InterfaceTemplateArgs args, CustomResourceOptions? options = null)
            : base("netbox:dcim/interfaceTemplate:InterfaceTemplate", name, args ?? new InterfaceTemplateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private InterfaceTemplate(string name, Input<string> id, InterfaceTemplateState? state = null, CustomResourceOptions? options = null)
            : base("netbox:dcim/interfaceTemplate:InterfaceTemplate", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/NatzkaLabsOpenSource/pulumi-netbox",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing InterfaceTemplate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static InterfaceTemplate Get(string name, Input<string> id, InterfaceTemplateState? state = null, CustomResourceOptions? options = null)
        {
            return new InterfaceTemplate(name, id, state, options);
        }
    }

    public sealed class InterfaceTemplateArgs : global::Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Exactly one of `device_type_id` or `module_type_id` must be given.
        /// </summary>
        [Input("deviceTypeId")]
        public Input<int>? DeviceTypeId { get; set; }

        [Input("label")]
        public Input<string>? Label { get; set; }

        [Input("mgmtOnly")]
        public Input<bool>? MgmtOnly { get; set; }

        /// <summary>
        /// Exactly one of `device_type_id` or `module_type_id` must be given.
        /// </summary>
        [Input("moduleTypeId")]
        public Input<int>? ModuleTypeId { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public InterfaceTemplateArgs()
        {
        }
        public static new InterfaceTemplateArgs Empty => new InterfaceTemplateArgs();
    }

    public sealed class InterfaceTemplateState : global::Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Exactly one of `device_type_id` or `module_type_id` must be given.
        /// </summary>
        [Input("deviceTypeId")]
        public Input<int>? DeviceTypeId { get; set; }

        [Input("label")]
        public Input<string>? Label { get; set; }

        [Input("mgmtOnly")]
        public Input<bool>? MgmtOnly { get; set; }

        /// <summary>
        /// Exactly one of `device_type_id` or `module_type_id` must be given.
        /// </summary>
        [Input("moduleTypeId")]
        public Input<int>? ModuleTypeId { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        public InterfaceTemplateState()
        {
        }
        public static new InterfaceTemplateState Empty => new InterfaceTemplateState();
    }
}
