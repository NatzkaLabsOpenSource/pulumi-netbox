// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Netbox.Dcim
{
    public static class GetRackRole
    {
        public static Task<GetRackRoleResult> InvokeAsync(GetRackRoleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRackRoleResult>("netbox:dcim/getRackRole:getRackRole", args ?? new GetRackRoleArgs(), options.WithDefaults());

        public static Output<GetRackRoleResult> Invoke(GetRackRoleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRackRoleResult>("netbox:dcim/getRackRole:getRackRole", args ?? new GetRackRoleInvokeArgs(), options.WithDefaults());

        public static Output<GetRackRoleResult> Invoke(GetRackRoleInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRackRoleResult>("netbox:dcim/getRackRole:getRackRole", args ?? new GetRackRoleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRackRoleArgs : global::Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetRackRoleArgs()
        {
        }
        public static new GetRackRoleArgs Empty => new GetRackRoleArgs();
    }

    public sealed class GetRackRoleInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetRackRoleInvokeArgs()
        {
        }
        public static new GetRackRoleInvokeArgs Empty => new GetRackRoleInvokeArgs();
    }


    [OutputType]
    public sealed class GetRackRoleResult
    {
        public readonly string ColorHex;
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string Slug;
        public readonly ImmutableArray<string> Tags;

        [OutputConstructor]
        private GetRackRoleResult(
            string colorHex,

            string description,

            string id,

            string name,

            string slug,

            ImmutableArray<string> tags)
        {
            ColorHex = colorHex;
            Description = description;
            Id = id;
            Name = name;
            Slug = slug;
            Tags = tags;
        }
    }
}
