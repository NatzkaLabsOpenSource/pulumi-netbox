// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Netbox.Dcim
{
    /// <summary>
    /// From the [official documentation](https://docs.netbox.dev/en/stable/features/facilities/#site-groups):
    /// 
    /// &gt; Like regions, site groups can be arranged in a recursive hierarchy for grouping sites. However, whereas regions are intended for geographic organization, site groups may be used for functional grouping. For example, you might classify sites as corporate, branch, or customer sites in addition to where they are physically located.
    /// &gt; 
    /// &gt; The use of both regions and site groups affords to independent but complementary dimensions across which sites can be organized.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Netbox = Pulumi.Netbox;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var parent = new Netbox.Dcim.SiteGroup("parent", new()
    ///     {
    ///         Name = "parent",
    ///         Description = "sample description",
    ///     });
    /// 
    ///     var child = new Netbox.Dcim.SiteGroup("child", new()
    ///     {
    ///         Name = "child",
    ///         Description = "sample description",
    ///         ParentId = parent.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [NetboxResourceType("netbox:dcim/siteGroup:SiteGroup")]
    public partial class SiteGroup : global::Pulumi.CustomResource
    {
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("parentId")]
        public Output<int?> ParentId { get; private set; } = null!;

        [Output("slug")]
        public Output<string> Slug { get; private set; } = null!;


        /// <summary>
        /// Create a SiteGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SiteGroup(string name, SiteGroupArgs? args = null, CustomResourceOptions? options = null)
            : base("netbox:dcim/siteGroup:SiteGroup", name, args ?? new SiteGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SiteGroup(string name, Input<string> id, SiteGroupState? state = null, CustomResourceOptions? options = null)
            : base("netbox:dcim/siteGroup:SiteGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/NatzkaLabsOpenSource/pulumi-netbox",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SiteGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SiteGroup Get(string name, Input<string> id, SiteGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new SiteGroup(name, id, state, options);
        }
    }

    public sealed class SiteGroupArgs : global::Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("parentId")]
        public Input<int>? ParentId { get; set; }

        [Input("slug")]
        public Input<string>? Slug { get; set; }

        public SiteGroupArgs()
        {
        }
        public static new SiteGroupArgs Empty => new SiteGroupArgs();
    }

    public sealed class SiteGroupState : global::Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("parentId")]
        public Input<int>? ParentId { get; set; }

        [Input("slug")]
        public Input<string>? Slug { get; set; }

        public SiteGroupState()
        {
        }
        public static new SiteGroupState Empty => new SiteGroupState();
    }
}
