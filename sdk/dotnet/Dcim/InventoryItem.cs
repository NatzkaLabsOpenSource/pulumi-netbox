// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Netbox.Dcim
{
    /// <summary>
    /// From the [official documentation](https://docs.netbox.dev/en/stable/models/dcim/inventoryitem/):
    /// 
    /// &gt; Inventory items represent hardware components installed within a device, such as a power supply or CPU or line card. They are intended to be used primarily for inventory purposes.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Netbox = Pulumi.Netbox;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Note that some terraform code is not included in the example for brevity
    ///     var test = new Netbox.Dcim.Device("test", new()
    ///     {
    ///         Name = "%[1]s",
    ///         DeviceTypeId = testNetboxDeviceType.Id,
    ///         TenantId = testNetboxTenant.Id,
    ///         RoleId = testNetboxDeviceRole.Id,
    ///         SiteId = testNetboxSite.Id,
    ///     });
    /// 
    ///     var testDeviceRearPort = new Netbox.Dcim.DeviceRearPort("test", new()
    ///     {
    ///         DeviceId = test.Id,
    ///         Name = "rear port",
    ///         Type = "8p8c",
    ///         Positions = 1,
    ///         MarkConnected = true,
    ///     });
    /// 
    ///     var parent = new Netbox.Dcim.InventoryItem("parent", new()
    ///     {
    ///         DeviceId = test.Id,
    ///         Name = "Parent Item",
    ///     });
    /// 
    ///     var testInventoryItem = new Netbox.Dcim.InventoryItem("test", new()
    ///     {
    ///         DeviceId = test.Id,
    ///         Name = "Child Item",
    ///         ParentId = parent.Id,
    ///         ComponentType = "dcim.rearport",
    ///         ComponentId = testDeviceRearPort.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [NetboxResourceType("netbox:dcim/inventoryItem:InventoryItem")]
    public partial class InventoryItem : global::Pulumi.CustomResource
    {
        [Output("assetTag")]
        public Output<string?> AssetTag { get; private set; } = null!;

        /// <summary>
        /// Required when `component_type` is set.
        /// </summary>
        [Output("componentId")]
        public Output<int?> ComponentId { get; private set; } = null!;

        [Output("componentType")]
        public Output<string?> ComponentType { get; private set; } = null!;

        [Output("customFields")]
        public Output<ImmutableDictionary<string, string>?> CustomFields { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("deviceId")]
        public Output<int> DeviceId { get; private set; } = null!;

        /// <summary>
        /// Defaults to `false`.
        /// </summary>
        [Output("discovered")]
        public Output<bool?> Discovered { get; private set; } = null!;

        [Output("label")]
        public Output<string?> Label { get; private set; } = null!;

        [Output("manufacturerId")]
        public Output<int?> ManufacturerId { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("parentId")]
        public Output<int?> ParentId { get; private set; } = null!;

        [Output("partId")]
        public Output<string?> PartId { get; private set; } = null!;

        [Output("roleId")]
        public Output<int?> RoleId { get; private set; } = null!;

        [Output("serial")]
        public Output<string?> Serial { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a InventoryItem resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public InventoryItem(string name, InventoryItemArgs args, CustomResourceOptions? options = null)
            : base("netbox:dcim/inventoryItem:InventoryItem", name, args ?? new InventoryItemArgs(), MakeResourceOptions(options, ""))
        {
        }

        private InventoryItem(string name, Input<string> id, InventoryItemState? state = null, CustomResourceOptions? options = null)
            : base("netbox:dcim/inventoryItem:InventoryItem", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/NatzkaLabsOpenSource/pulumi-netbox",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing InventoryItem resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static InventoryItem Get(string name, Input<string> id, InventoryItemState? state = null, CustomResourceOptions? options = null)
        {
            return new InventoryItem(name, id, state, options);
        }
    }

    public sealed class InventoryItemArgs : global::Pulumi.ResourceArgs
    {
        [Input("assetTag")]
        public Input<string>? AssetTag { get; set; }

        /// <summary>
        /// Required when `component_type` is set.
        /// </summary>
        [Input("componentId")]
        public Input<int>? ComponentId { get; set; }

        [Input("componentType")]
        public Input<string>? ComponentType { get; set; }

        [Input("customFields")]
        private InputMap<string>? _customFields;
        public InputMap<string> CustomFields
        {
            get => _customFields ?? (_customFields = new InputMap<string>());
            set => _customFields = value;
        }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("deviceId", required: true)]
        public Input<int> DeviceId { get; set; } = null!;

        /// <summary>
        /// Defaults to `false`.
        /// </summary>
        [Input("discovered")]
        public Input<bool>? Discovered { get; set; }

        [Input("label")]
        public Input<string>? Label { get; set; }

        [Input("manufacturerId")]
        public Input<int>? ManufacturerId { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("parentId")]
        public Input<int>? ParentId { get; set; }

        [Input("partId")]
        public Input<string>? PartId { get; set; }

        [Input("roleId")]
        public Input<int>? RoleId { get; set; }

        [Input("serial")]
        public Input<string>? Serial { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        public InventoryItemArgs()
        {
        }
        public static new InventoryItemArgs Empty => new InventoryItemArgs();
    }

    public sealed class InventoryItemState : global::Pulumi.ResourceArgs
    {
        [Input("assetTag")]
        public Input<string>? AssetTag { get; set; }

        /// <summary>
        /// Required when `component_type` is set.
        /// </summary>
        [Input("componentId")]
        public Input<int>? ComponentId { get; set; }

        [Input("componentType")]
        public Input<string>? ComponentType { get; set; }

        [Input("customFields")]
        private InputMap<string>? _customFields;
        public InputMap<string> CustomFields
        {
            get => _customFields ?? (_customFields = new InputMap<string>());
            set => _customFields = value;
        }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("deviceId")]
        public Input<int>? DeviceId { get; set; }

        /// <summary>
        /// Defaults to `false`.
        /// </summary>
        [Input("discovered")]
        public Input<bool>? Discovered { get; set; }

        [Input("label")]
        public Input<string>? Label { get; set; }

        [Input("manufacturerId")]
        public Input<int>? ManufacturerId { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("parentId")]
        public Input<int>? ParentId { get; set; }

        [Input("partId")]
        public Input<string>? PartId { get; set; }

        [Input("roleId")]
        public Input<int>? RoleId { get; set; }

        [Input("serial")]
        public Input<string>? Serial { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        public InventoryItemState()
        {
        }
        public static new InventoryItemState Empty => new InventoryItemState();
    }
}
