// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Netbox.Dcim
{
    public static class GetLocations
    {
        public static Task<GetLocationsResult> InvokeAsync(GetLocationsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLocationsResult>("netbox:dcim/getLocations:getLocations", args ?? new GetLocationsArgs(), options.WithDefaults());

        public static Output<GetLocationsResult> Invoke(GetLocationsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLocationsResult>("netbox:dcim/getLocations:getLocations", args ?? new GetLocationsInvokeArgs(), options.WithDefaults());

        public static Output<GetLocationsResult> Invoke(GetLocationsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetLocationsResult>("netbox:dcim/getLocations:getLocations", args ?? new GetLocationsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLocationsArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetLocationsFilterArgs>? _filters;

        /// <summary>
        /// A list of filter to apply to the API query when requesting locations.
        /// </summary>
        public List<Inputs.GetLocationsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetLocationsFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The limit of objects to return from the API lookup. Defaults to `0`.
        /// </summary>
        [Input("limit")]
        public int? Limit { get; set; }

        [Input("tags")]
        private List<string>? _tags;

        /// <summary>
        /// A list of tags to filter on.
        /// </summary>
        public List<string> Tags
        {
            get => _tags ?? (_tags = new List<string>());
            set => _tags = value;
        }

        public GetLocationsArgs()
        {
        }
        public static new GetLocationsArgs Empty => new GetLocationsArgs();
    }

    public sealed class GetLocationsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetLocationsFilterInputArgs>? _filters;

        /// <summary>
        /// A list of filter to apply to the API query when requesting locations.
        /// </summary>
        public InputList<Inputs.GetLocationsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetLocationsFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The limit of objects to return from the API lookup. Defaults to `0`.
        /// </summary>
        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// A list of tags to filter on.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        public GetLocationsInvokeArgs()
        {
        }
        public static new GetLocationsInvokeArgs Empty => new GetLocationsInvokeArgs();
    }


    [OutputType]
    public sealed class GetLocationsResult
    {
        /// <summary>
        /// A list of filter to apply to the API query when requesting locations.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLocationsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The limit of objects to return from the API lookup. Defaults to `0`.
        /// </summary>
        public readonly int? Limit;
        public readonly ImmutableArray<Outputs.GetLocationsLocationResult> Locations;
        /// <summary>
        /// A list of tags to filter on.
        /// </summary>
        public readonly ImmutableArray<string> Tags;

        [OutputConstructor]
        private GetLocationsResult(
            ImmutableArray<Outputs.GetLocationsFilterResult> filters,

            string id,

            int? limit,

            ImmutableArray<Outputs.GetLocationsLocationResult> locations,

            ImmutableArray<string> tags)
        {
            Filters = filters;
            Id = id;
            Limit = limit;
            Locations = locations;
            Tags = tags;
        }
    }
}
