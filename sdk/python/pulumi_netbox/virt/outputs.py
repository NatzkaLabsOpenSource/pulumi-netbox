# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetInterfacesFilterResult',
    'GetInterfacesInterfaceResult',
    'GetInterfacesInterfaceTaggedVlanResult',
    'GetInterfacesInterfaceUntaggedVlanResult',
    'GetVirtualMachinesFilterResult',
    'GetVirtualMachinesVmResult',
]

@pulumi.output_type
class GetInterfacesFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 value: _builtins.str):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        return pulumi.get(self, "value")


@pulumi.output_type
class GetInterfacesInterfaceResult(dict):
    def __init__(__self__, *,
                 description: _builtins.str,
                 enabled: _builtins.bool,
                 id: _builtins.int,
                 mac_address: _builtins.str,
                 mode: Mapping[str, _builtins.str],
                 mtu: _builtins.int,
                 name: _builtins.str,
                 tag_ids: Sequence[_builtins.int],
                 tagged_vlans: Sequence['outputs.GetInterfacesInterfaceTaggedVlanResult'],
                 untagged_vlans: Sequence['outputs.GetInterfacesInterfaceUntaggedVlanResult'],
                 vm_id: _builtins.int):
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "enabled", enabled)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "mac_address", mac_address)
        pulumi.set(__self__, "mode", mode)
        pulumi.set(__self__, "mtu", mtu)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "tag_ids", tag_ids)
        pulumi.set(__self__, "tagged_vlans", tagged_vlans)
        pulumi.set(__self__, "untagged_vlans", untagged_vlans)
        pulumi.set(__self__, "vm_id", vm_id)

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter
    def enabled(self) -> _builtins.bool:
        return pulumi.get(self, "enabled")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.int:
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="macAddress")
    def mac_address(self) -> _builtins.str:
        return pulumi.get(self, "mac_address")

    @_builtins.property
    @pulumi.getter
    def mode(self) -> Mapping[str, _builtins.str]:
        return pulumi.get(self, "mode")

    @_builtins.property
    @pulumi.getter
    def mtu(self) -> _builtins.int:
        return pulumi.get(self, "mtu")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="tagIds")
    def tag_ids(self) -> Sequence[_builtins.int]:
        return pulumi.get(self, "tag_ids")

    @_builtins.property
    @pulumi.getter(name="taggedVlans")
    def tagged_vlans(self) -> Sequence['outputs.GetInterfacesInterfaceTaggedVlanResult']:
        return pulumi.get(self, "tagged_vlans")

    @_builtins.property
    @pulumi.getter(name="untaggedVlans")
    def untagged_vlans(self) -> Sequence['outputs.GetInterfacesInterfaceUntaggedVlanResult']:
        return pulumi.get(self, "untagged_vlans")

    @_builtins.property
    @pulumi.getter(name="vmId")
    def vm_id(self) -> _builtins.int:
        return pulumi.get(self, "vm_id")


@pulumi.output_type
class GetInterfacesInterfaceTaggedVlanResult(dict):
    def __init__(__self__, *,
                 id: _builtins.int,
                 name: _builtins.str,
                 vid: _builtins.int):
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "vid", vid)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.int:
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def vid(self) -> _builtins.int:
        return pulumi.get(self, "vid")


@pulumi.output_type
class GetInterfacesInterfaceUntaggedVlanResult(dict):
    def __init__(__self__, *,
                 id: _builtins.int,
                 name: _builtins.str,
                 vid: _builtins.int):
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "vid", vid)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.int:
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def vid(self) -> _builtins.int:
        return pulumi.get(self, "vid")


@pulumi.output_type
class GetVirtualMachinesFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 value: _builtins.str):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        return pulumi.get(self, "value")


@pulumi.output_type
class GetVirtualMachinesVmResult(dict):
    def __init__(__self__, *,
                 cluster_id: _builtins.int,
                 comments: _builtins.str,
                 config_context: _builtins.str,
                 custom_fields: Mapping[str, _builtins.str],
                 description: _builtins.str,
                 device_id: _builtins.int,
                 device_name: _builtins.str,
                 disk_size_mb: _builtins.int,
                 local_context_data: _builtins.str,
                 memory_mb: _builtins.int,
                 name: _builtins.str,
                 platform_id: _builtins.int,
                 platform_slug: _builtins.str,
                 primary_ip: _builtins.str,
                 primary_ip4: _builtins.str,
                 primary_ip6: _builtins.str,
                 role_id: _builtins.int,
                 site_id: _builtins.int,
                 status: _builtins.str,
                 tag_ids: Sequence[_builtins.int],
                 tenant_id: _builtins.int,
                 vcpus: _builtins.float,
                 vm_id: _builtins.int):
        pulumi.set(__self__, "cluster_id", cluster_id)
        pulumi.set(__self__, "comments", comments)
        pulumi.set(__self__, "config_context", config_context)
        pulumi.set(__self__, "custom_fields", custom_fields)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "device_id", device_id)
        pulumi.set(__self__, "device_name", device_name)
        pulumi.set(__self__, "disk_size_mb", disk_size_mb)
        pulumi.set(__self__, "local_context_data", local_context_data)
        pulumi.set(__self__, "memory_mb", memory_mb)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "platform_id", platform_id)
        pulumi.set(__self__, "platform_slug", platform_slug)
        pulumi.set(__self__, "primary_ip", primary_ip)
        pulumi.set(__self__, "primary_ip4", primary_ip4)
        pulumi.set(__self__, "primary_ip6", primary_ip6)
        pulumi.set(__self__, "role_id", role_id)
        pulumi.set(__self__, "site_id", site_id)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "tag_ids", tag_ids)
        pulumi.set(__self__, "tenant_id", tenant_id)
        pulumi.set(__self__, "vcpus", vcpus)
        pulumi.set(__self__, "vm_id", vm_id)

    @_builtins.property
    @pulumi.getter(name="clusterId")
    def cluster_id(self) -> _builtins.int:
        return pulumi.get(self, "cluster_id")

    @_builtins.property
    @pulumi.getter
    def comments(self) -> _builtins.str:
        return pulumi.get(self, "comments")

    @_builtins.property
    @pulumi.getter(name="configContext")
    def config_context(self) -> _builtins.str:
        return pulumi.get(self, "config_context")

    @_builtins.property
    @pulumi.getter(name="customFields")
    def custom_fields(self) -> Mapping[str, _builtins.str]:
        return pulumi.get(self, "custom_fields")

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="deviceId")
    def device_id(self) -> _builtins.int:
        return pulumi.get(self, "device_id")

    @_builtins.property
    @pulumi.getter(name="deviceName")
    def device_name(self) -> _builtins.str:
        return pulumi.get(self, "device_name")

    @_builtins.property
    @pulumi.getter(name="diskSizeMb")
    def disk_size_mb(self) -> _builtins.int:
        return pulumi.get(self, "disk_size_mb")

    @_builtins.property
    @pulumi.getter(name="localContextData")
    def local_context_data(self) -> _builtins.str:
        return pulumi.get(self, "local_context_data")

    @_builtins.property
    @pulumi.getter(name="memoryMb")
    def memory_mb(self) -> _builtins.int:
        return pulumi.get(self, "memory_mb")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="platformId")
    def platform_id(self) -> _builtins.int:
        return pulumi.get(self, "platform_id")

    @_builtins.property
    @pulumi.getter(name="platformSlug")
    def platform_slug(self) -> _builtins.str:
        return pulumi.get(self, "platform_slug")

    @_builtins.property
    @pulumi.getter(name="primaryIp")
    def primary_ip(self) -> _builtins.str:
        return pulumi.get(self, "primary_ip")

    @_builtins.property
    @pulumi.getter(name="primaryIp4")
    def primary_ip4(self) -> _builtins.str:
        return pulumi.get(self, "primary_ip4")

    @_builtins.property
    @pulumi.getter(name="primaryIp6")
    def primary_ip6(self) -> _builtins.str:
        return pulumi.get(self, "primary_ip6")

    @_builtins.property
    @pulumi.getter(name="roleId")
    def role_id(self) -> _builtins.int:
        return pulumi.get(self, "role_id")

    @_builtins.property
    @pulumi.getter(name="siteId")
    def site_id(self) -> _builtins.int:
        return pulumi.get(self, "site_id")

    @_builtins.property
    @pulumi.getter
    def status(self) -> _builtins.str:
        return pulumi.get(self, "status")

    @_builtins.property
    @pulumi.getter(name="tagIds")
    def tag_ids(self) -> Sequence[_builtins.int]:
        return pulumi.get(self, "tag_ids")

    @_builtins.property
    @pulumi.getter(name="tenantId")
    def tenant_id(self) -> _builtins.int:
        return pulumi.get(self, "tenant_id")

    @_builtins.property
    @pulumi.getter
    def vcpus(self) -> _builtins.float:
        return pulumi.get(self, "vcpus")

    @_builtins.property
    @pulumi.getter(name="vmId")
    def vm_id(self) -> _builtins.int:
        return pulumi.get(self, "vm_id")


