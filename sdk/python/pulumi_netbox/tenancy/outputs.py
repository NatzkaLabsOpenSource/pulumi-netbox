# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetTenantsFilterResult',
    'GetTenantsTenantResult',
    'GetTenantsTenantTenantGroupResult',
]

@pulumi.output_type
class GetTenantsFilterResult(dict):
    def __init__(__self__, *,
                 name: _builtins.str,
                 value: _builtins.str):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "value", value)

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def value(self) -> _builtins.str:
        return pulumi.get(self, "value")


@pulumi.output_type
class GetTenantsTenantResult(dict):
    def __init__(__self__, *,
                 circuit_count: _builtins.int,
                 cluster_count: _builtins.int,
                 comments: _builtins.str,
                 created: _builtins.str,
                 custom_fields: Mapping[str, _builtins.str],
                 description: _builtins.str,
                 device_count: _builtins.int,
                 id: _builtins.int,
                 ip_address_count: _builtins.int,
                 last_updated: _builtins.str,
                 name: _builtins.str,
                 prefix_count: _builtins.int,
                 rack_count: _builtins.int,
                 site_count: _builtins.int,
                 slug: _builtins.str,
                 tenant_groups: Sequence['outputs.GetTenantsTenantTenantGroupResult'],
                 vlan_count: _builtins.int,
                 vm_count: _builtins.int,
                 vrf_count: _builtins.int):
        pulumi.set(__self__, "circuit_count", circuit_count)
        pulumi.set(__self__, "cluster_count", cluster_count)
        pulumi.set(__self__, "comments", comments)
        pulumi.set(__self__, "created", created)
        pulumi.set(__self__, "custom_fields", custom_fields)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "device_count", device_count)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "ip_address_count", ip_address_count)
        pulumi.set(__self__, "last_updated", last_updated)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "prefix_count", prefix_count)
        pulumi.set(__self__, "rack_count", rack_count)
        pulumi.set(__self__, "site_count", site_count)
        pulumi.set(__self__, "slug", slug)
        pulumi.set(__self__, "tenant_groups", tenant_groups)
        pulumi.set(__self__, "vlan_count", vlan_count)
        pulumi.set(__self__, "vm_count", vm_count)
        pulumi.set(__self__, "vrf_count", vrf_count)

    @_builtins.property
    @pulumi.getter(name="circuitCount")
    def circuit_count(self) -> _builtins.int:
        return pulumi.get(self, "circuit_count")

    @_builtins.property
    @pulumi.getter(name="clusterCount")
    def cluster_count(self) -> _builtins.int:
        return pulumi.get(self, "cluster_count")

    @_builtins.property
    @pulumi.getter
    def comments(self) -> _builtins.str:
        return pulumi.get(self, "comments")

    @_builtins.property
    @pulumi.getter
    def created(self) -> _builtins.str:
        return pulumi.get(self, "created")

    @_builtins.property
    @pulumi.getter(name="customFields")
    def custom_fields(self) -> Mapping[str, _builtins.str]:
        return pulumi.get(self, "custom_fields")

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="deviceCount")
    def device_count(self) -> _builtins.int:
        return pulumi.get(self, "device_count")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.int:
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="ipAddressCount")
    def ip_address_count(self) -> _builtins.int:
        return pulumi.get(self, "ip_address_count")

    @_builtins.property
    @pulumi.getter(name="lastUpdated")
    def last_updated(self) -> _builtins.str:
        return pulumi.get(self, "last_updated")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="prefixCount")
    def prefix_count(self) -> _builtins.int:
        return pulumi.get(self, "prefix_count")

    @_builtins.property
    @pulumi.getter(name="rackCount")
    def rack_count(self) -> _builtins.int:
        return pulumi.get(self, "rack_count")

    @_builtins.property
    @pulumi.getter(name="siteCount")
    def site_count(self) -> _builtins.int:
        return pulumi.get(self, "site_count")

    @_builtins.property
    @pulumi.getter
    def slug(self) -> _builtins.str:
        return pulumi.get(self, "slug")

    @_builtins.property
    @pulumi.getter(name="tenantGroups")
    def tenant_groups(self) -> Sequence['outputs.GetTenantsTenantTenantGroupResult']:
        return pulumi.get(self, "tenant_groups")

    @_builtins.property
    @pulumi.getter(name="vlanCount")
    def vlan_count(self) -> _builtins.int:
        return pulumi.get(self, "vlan_count")

    @_builtins.property
    @pulumi.getter(name="vmCount")
    def vm_count(self) -> _builtins.int:
        return pulumi.get(self, "vm_count")

    @_builtins.property
    @pulumi.getter(name="vrfCount")
    def vrf_count(self) -> _builtins.int:
        return pulumi.get(self, "vrf_count")


@pulumi.output_type
class GetTenantsTenantTenantGroupResult(dict):
    def __init__(__self__, *,
                 id: _builtins.int,
                 name: _builtins.str,
                 slug: _builtins.str,
                 tenant_count: _builtins.int):
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "slug", slug)
        pulumi.set(__self__, "tenant_count", tenant_count)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.int:
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter
    def slug(self) -> _builtins.str:
        return pulumi.get(self, "slug")

    @_builtins.property
    @pulumi.getter(name="tenantCount")
    def tenant_count(self) -> _builtins.int:
        return pulumi.get(self, "tenant_count")


